<div class="file-content code js-syntax-highlight white" id="blob-content">
    <div class="line-numbers">
        <a class="file-line-num diff-line-num"
           data-line-number="1"
           id="L1" href="#L1">1</a><a class="file-line-num diff-line-num"
           data-line-number="2"
           id="L2" href="#L2">2</a><a class="file-line-num diff-line-num"
           data-line-number="3"
           id="L3" href="#L3">3</a><a class="file-line-num diff-line-num"
           data-line-number="4"
           id="L4" href="#L4">4</a><a class="file-line-num diff-line-num"
           data-line-number="5"
           id="L5" href="#L5">5</a><a class="file-line-num diff-line-num"
           data-line-number="6"
           id="L6" href="#L6">6</a><a class="file-line-num diff-line-num"
           data-line-number="7"
           id="L7" href="#L7">7</a><a class="file-line-num diff-line-num"
           data-line-number="8"
           id="L8" href="#L8">8</a><a class="file-line-num diff-line-num"
           data-line-number="9"
           id="L9" href="#L9">9</a><a class="file-line-num diff-line-num"
           data-line-number="10"
           id="L10" href="#L10">10</a><a class="file-line-num diff-line-num"
           data-line-number="11"
           id="L11" href="#L11">11</a><a class="file-line-num diff-line-num"
           data-line-number="12"
           id="L12" href="#L12">12</a><a class="file-line-num diff-line-num"
           data-line-number="13"
           id="L13" href="#L13">13</a><a class="file-line-num diff-line-num"
           data-line-number="14"
           id="L14" href="#L14">14</a><a class="file-line-num diff-line-num"
           data-line-number="15"
           id="L15" href="#L15">15</a><a class="file-line-num diff-line-num"
           data-line-number="16"
           id="L16" href="#L16">16</a><a class="file-line-num diff-line-num"
           data-line-number="17"
           id="L17" href="#L17">17</a><a class="file-line-num diff-line-num"
           data-line-number="18"
           id="L18" href="#L18">18</a><a class="file-line-num diff-line-num"
           data-line-number="19"
           id="L19" href="#L19">19</a><a class="file-line-num diff-line-num"
           data-line-number="20"
           id="L20" href="#L20">20</a><a class="file-line-num diff-line-num"
           data-line-number="21"
           id="L21" href="#L21">21</a><a class="file-line-num diff-line-num"
           data-line-number="22"
           id="L22" href="#L22">22</a><a class="file-line-num diff-line-num"
           data-line-number="23"
           id="L23" href="#L23">23</a><a class="file-line-num diff-line-num"
           data-line-number="24"
           id="L24" href="#L24">24</a><a class="file-line-num diff-line-num"
           data-line-number="25"
           id="L25" href="#L25">25</a><a class="file-line-num diff-line-num"
           data-line-number="26"
           id="L26" href="#L26">26</a><a class="file-line-num diff-line-num"
           data-line-number="27"
           id="L27" href="#L27">27</a><a class="file-line-num diff-line-num"
           data-line-number="28"
           id="L28" href="#L28">28</a><a class="file-line-num diff-line-num"
           data-line-number="29"
           id="L29" href="#L29">29</a><a class="file-line-num diff-line-num"
           data-line-number="30"
           id="L30" href="#L30">30</a><a class="file-line-num diff-line-num"
           data-line-number="31"
           id="L31" href="#L31">31</a><a class="file-line-num diff-line-num"
           data-line-number="32"
           id="L32" href="#L32">32</a><a class="file-line-num diff-line-num"
           data-line-number="33"
           id="L33" href="#L33">33</a><a class="file-line-num diff-line-num"
           data-line-number="34"
           id="L34" href="#L34">34</a><a class="file-line-num diff-line-num"
           data-line-number="35"
           id="L35" href="#L35">35</a><a class="file-line-num diff-line-num"
           data-line-number="36"
           id="L36" href="#L36">36</a><a class="file-line-num diff-line-num"
           data-line-number="37"
           id="L37" href="#L37">37</a><a class="file-line-num diff-line-num"
           data-line-number="38"
           id="L38" href="#L38">38</a><a class="file-line-num diff-line-num"
           data-line-number="39"
           id="L39" href="#L39">39</a><a class="file-line-num diff-line-num"
           data-line-number="40"
           id="L40" href="#L40">40</a><a class="file-line-num diff-line-num"
           data-line-number="41"
           id="L41" href="#L41">41</a><a class="file-line-num diff-line-num"
           data-line-number="42"
           id="L42" href="#L42">42</a><a class="file-line-num diff-line-num"
           data-line-number="43"
           id="L43" href="#L43">43</a><a class="file-line-num diff-line-num"
           data-line-number="44"
           id="L44" href="#L44">44</a><a class="file-line-num diff-line-num"
           data-line-number="45"
           id="L45" href="#L45">45</a><a class="file-line-num diff-line-num"
           data-line-number="46"
           id="L46" href="#L46">46</a><a class="file-line-num diff-line-num"
           data-line-number="47"
           id="L47" href="#L47">47</a><a class="file-line-num diff-line-num"
           data-line-number="48"
           id="L48" href="#L48">48</a><a class="file-line-num diff-line-num"
           data-line-number="49"
           id="L49" href="#L49">49</a><a class="file-line-num diff-line-num"
           data-line-number="50"
           id="L50" href="#L50">50</a><a class="file-line-num diff-line-num"
           data-line-number="51"
           id="L51" href="#L51">51</a><a class="file-line-num diff-line-num"
           data-line-number="52"
           id="L52" href="#L52">52</a><a class="file-line-num diff-line-num"
           data-line-number="53"
           id="L53" href="#L53">53</a><a class="file-line-num diff-line-num"
           data-line-number="54"
           id="L54" href="#L54">54</a><a class="file-line-num diff-line-num"
           data-line-number="55"
           id="L55" href="#L55">55</a><a class="file-line-num diff-line-num"
           data-line-number="56"
           id="L56" href="#L56">56</a><a class="file-line-num diff-line-num"
           data-line-number="57"
           id="L57" href="#L57">57</a><a class="file-line-num diff-line-num"
           data-line-number="58"
           id="L58" href="#L58">58</a><a class="file-line-num diff-line-num"
           data-line-number="59"
           id="L59" href="#L59">59</a><a class="file-line-num diff-line-num"
           data-line-number="60"
           id="L60" href="#L60">60</a><a class="file-line-num diff-line-num"
           data-line-number="61"
           id="L61" href="#L61">61</a><a class="file-line-num diff-line-num"
           data-line-number="62"
           id="L62" href="#L62">62</a><a class="file-line-num diff-line-num"
           data-line-number="63"
           id="L63" href="#L63">63</a><a class="file-line-num diff-line-num"
           data-line-number="64"
           id="L64" href="#L64">64</a><a class="file-line-num diff-line-num"
           data-line-number="65"
           id="L65" href="#L65">65</a><a class="file-line-num diff-line-num"
           data-line-number="66"
           id="L66" href="#L66">66</a><a class="file-line-num diff-line-num"
           data-line-number="67"
           id="L67" href="#L67">67</a><a class="file-line-num diff-line-num"
           data-line-number="68"
           id="L68" href="#L68">68</a><a class="file-line-num diff-line-num"
           data-line-number="69"
           id="L69" href="#L69">69</a><a class="file-line-num diff-line-num"
           data-line-number="70"
           id="L70" href="#L70">70</a><a class="file-line-num diff-line-num"
           data-line-number="71"
           id="L71" href="#L71">71</a><a class="file-line-num diff-line-num"
           data-line-number="72"
           id="L72" href="#L72">72</a><a class="file-line-num diff-line-num"
           data-line-number="73"
           id="L73" href="#L73">73</a><a class="file-line-num diff-line-num"
           data-line-number="74"
           id="L74" href="#L74">74</a><a class="file-line-num diff-line-num"
           data-line-number="75"
           id="L75" href="#L75">75</a><a class="file-line-num diff-line-num"
           data-line-number="76"
           id="L76" href="#L76">76</a><a class="file-line-num diff-line-num"
           data-line-number="77"
           id="L77" href="#L77">77</a><a class="file-line-num diff-line-num"
           data-line-number="78"
           id="L78" href="#L78">78</a><a class="file-line-num diff-line-num"
           data-line-number="79"
           id="L79" href="#L79">79</a><a class="file-line-num diff-line-num"
           data-line-number="80"
           id="L80" href="#L80">80</a><a class="file-line-num diff-line-num"
           data-line-number="81"
           id="L81" href="#L81">81</a><a class="file-line-num diff-line-num"
           data-line-number="82"
           id="L82" href="#L82">82</a><a class="file-line-num diff-line-num"
           data-line-number="83"
           id="L83" href="#L83">83</a><a class="file-line-num diff-line-num"
           data-line-number="84"
           id="L84" href="#L84">84</a><a class="file-line-num diff-line-num"
           data-line-number="85"
           id="L85" href="#L85">85</a><a class="file-line-num diff-line-num"
           data-line-number="86"
           id="L86" href="#L86">86</a><a class="file-line-num diff-line-num"
           data-line-number="87"
           id="L87" href="#L87">87</a><a class="file-line-num diff-line-num"
           data-line-number="88"
           id="L88" href="#L88">88</a><a class="file-line-num diff-line-num"
           data-line-number="89"
           id="L89" href="#L89">89</a><a class="file-line-num diff-line-num"
           data-line-number="90"
           id="L90" href="#L90">90</a><a class="file-line-num diff-line-num"
           data-line-number="91"
           id="L91" href="#L91">91</a><a class="file-line-num diff-line-num"
           data-line-number="92"
           id="L92" href="#L92">92</a><a class="file-line-num diff-line-num"
           data-line-number="93"
           id="L93" href="#L93">93</a><a class="file-line-num diff-line-num"
           data-line-number="94"
           id="L94" href="#L94">94</a><a class="file-line-num diff-line-num"
           data-line-number="95"
           id="L95" href="#L95">95</a><a class="file-line-num diff-line-num"
           data-line-number="96"
           id="L96" href="#L96">96</a><a class="file-line-num diff-line-num"
           data-line-number="97"
           id="L97" href="#L97">97</a><a class="file-line-num diff-line-num"
           data-line-number="98"
           id="L98" href="#L98">98</a><a class="file-line-num diff-line-num"
           data-line-number="99"
           id="L99" href="#L99">99</a><a class="file-line-num diff-line-num"
           data-line-number="100"
           id="L100" href="#L100">100</a><a class="file-line-num diff-line-num"
           data-line-number="101"
           id="L101" href="#L101">101</a><a class="file-line-num diff-line-num"
           data-line-number="102"
           id="L102" href="#L102">102</a><a class="file-line-num diff-line-num"
           data-line-number="103"
           id="L103" href="#L103">103</a><a class="file-line-num diff-line-num"
           data-line-number="104"
           id="L104" href="#L104">104</a><a class="file-line-num diff-line-num"
           data-line-number="105"
           id="L105" href="#L105">105</a><a class="file-line-num diff-line-num"
           data-line-number="106"
           id="L106" href="#L106">106</a><a class="file-line-num diff-line-num"
           data-line-number="107"
           id="L107" href="#L107">107</a><a class="file-line-num diff-line-num"
           data-line-number="108"
           id="L108" href="#L108">108</a><a class="file-line-num diff-line-num"
           data-line-number="109"
           id="L109" href="#L109">109</a><a class="file-line-num diff-line-num"
           data-line-number="110"
           id="L110" href="#L110">110</a><a class="file-line-num diff-line-num"
           data-line-number="111"
           id="L111" href="#L111">111</a><a class="file-line-num diff-line-num"
           data-line-number="112"
           id="L112" href="#L112">112</a><a class="file-line-num diff-line-num"
           data-line-number="113"
           id="L113" href="#L113">113</a><a class="file-line-num diff-line-num"
           data-line-number="114"
           id="L114" href="#L114">114</a><a class="file-line-num diff-line-num"
           data-line-number="115"
           id="L115" href="#L115">115</a><a class="file-line-num diff-line-num"
           data-line-number="116"
           id="L116" href="#L116">116</a><a class="file-line-num diff-line-num"
           data-line-number="117"
           id="L117" href="#L117">117</a><a class="file-line-num diff-line-num"
           data-line-number="118"
           id="L118" href="#L118">118</a><a class="file-line-num diff-line-num"
           data-line-number="119"
           id="L119" href="#L119">119</a><a class="file-line-num diff-line-num"
           data-line-number="120"
           id="L120" href="#L120">120</a><a class="file-line-num diff-line-num"
           data-line-number="121"
           id="L121" href="#L121">121</a><a class="file-line-num diff-line-num"
           data-line-number="122"
           id="L122" href="#L122">122</a><a class="file-line-num diff-line-num"
           data-line-number="123"
           id="L123" href="#L123">123</a><a class="file-line-num diff-line-num"
           data-line-number="124"
           id="L124" href="#L124">124</a><a class="file-line-num diff-line-num"
           data-line-number="125"
           id="L125" href="#L125">125</a><a class="file-line-num diff-line-num"
           data-line-number="126"
           id="L126" href="#L126">126</a><a class="file-line-num diff-line-num"
           data-line-number="127"
           id="L127" href="#L127">127</a><a class="file-line-num diff-line-num"
           data-line-number="128"
           id="L128" href="#L128">128</a><a class="file-line-num diff-line-num"
           data-line-number="129"
           id="L129" href="#L129">129</a><a class="file-line-num diff-line-num"
           data-line-number="130"
           id="L130" href="#L130">130</a><a class="file-line-num diff-line-num"
           data-line-number="131"
           id="L131" href="#L131">131</a><a class="file-line-num diff-line-num"
           data-line-number="132"
           id="L132" href="#L132">132</a><a class="file-line-num diff-line-num"
           data-line-number="133"
           id="L133" href="#L133">133</a><a class="file-line-num diff-line-num"
           data-line-number="134"
           id="L134" href="#L134">134</a><a class="file-line-num diff-line-num"
           data-line-number="135"
           id="L135" href="#L135">135</a><a class="file-line-num diff-line-num"
           data-line-number="136"
           id="L136" href="#L136">136</a><a class="file-line-num diff-line-num"
           data-line-number="137"
           id="L137" href="#L137">137</a><a class="file-line-num diff-line-num"
           data-line-number="138"
           id="L138" href="#L138">138</a><a class="file-line-num diff-line-num"
           data-line-number="139"
           id="L139" href="#L139">139</a><a class="file-line-num diff-line-num"
           data-line-number="140"
           id="L140" href="#L140">140</a><a class="file-line-num diff-line-num"
           data-line-number="141"
           id="L141" href="#L141">141</a><a class="file-line-num diff-line-num"
           data-line-number="142"
           id="L142" href="#L142">142</a><a class="file-line-num diff-line-num"
           data-line-number="143"
           id="L143" href="#L143">143</a><a class="file-line-num diff-line-num"
           data-line-number="144"
           id="L144" href="#L144">144</a><a class="file-line-num diff-line-num"
           data-line-number="145"
           id="L145" href="#L145">145</a><a class="file-line-num diff-line-num"
           data-line-number="146"
           id="L146" href="#L146">146</a><a class="file-line-num diff-line-num"
           data-line-number="147"
           id="L147" href="#L147">147</a><a class="file-line-num diff-line-num"
           data-line-number="148"
           id="L148" href="#L148">148</a><a class="file-line-num diff-line-num"
           data-line-number="149"
           id="L149" href="#L149">149</a><a class="file-line-num diff-line-num"
           data-line-number="150"
           id="L150" href="#L150">150</a><a class="file-line-num diff-line-num"
           data-line-number="151"
           id="L151" href="#L151">151</a><a class="file-line-num diff-line-num"
           data-line-number="152"
           id="L152" href="#L152">152</a><a class="file-line-num diff-line-num"
           data-line-number="153"
           id="L153" href="#L153">153</a><a class="file-line-num diff-line-num"
           data-line-number="154"
           id="L154" href="#L154">154</a><a class="file-line-num diff-line-num"
           data-line-number="155"
           id="L155" href="#L155">155</a><a class="file-line-num diff-line-num"
           data-line-number="156"
           id="L156" href="#L156">156</a><a class="file-line-num diff-line-num"
           data-line-number="157"
           id="L157" href="#L157">157</a><a class="file-line-num diff-line-num"
           data-line-number="158"
           id="L158" href="#L158">158</a><a class="file-line-num diff-line-num"
           data-line-number="159"
           id="L159" href="#L159">159</a><a class="file-line-num diff-line-num"
           data-line-number="160"
           id="L160" href="#L160">160</a><a class="file-line-num diff-line-num"
           data-line-number="161"
           id="L161" href="#L161">161</a><a class="file-line-num diff-line-num"
           data-line-number="162"
           id="L162" href="#L162">162</a><a class="file-line-num diff-line-num"
           data-line-number="163"
           id="L163" href="#L163">163</a><a class="file-line-num diff-line-num"
           data-line-number="164"
           id="L164" href="#L164">164</a><a class="file-line-num diff-line-num"
           data-line-number="165"
           id="L165" href="#L165">165</a><a class="file-line-num diff-line-num"
           data-line-number="166"
           id="L166" href="#L166">166</a><a class="file-line-num diff-line-num"
           data-line-number="167"
           id="L167" href="#L167">167</a><a class="file-line-num diff-line-num"
           data-line-number="168"
           id="L168" href="#L168">168</a><a class="file-line-num diff-line-num"
           data-line-number="169"
           id="L169" href="#L169">169</a><a class="file-line-num diff-line-num"
           data-line-number="170"
           id="L170" href="#L170">170</a><a class="file-line-num diff-line-num"
           data-line-number="171"
           id="L171" href="#L171">171</a><a class="file-line-num diff-line-num"
           data-line-number="172"
           id="L172" href="#L172">172</a><a class="file-line-num diff-line-num"
           data-line-number="173"
           id="L173" href="#L173">173</a><a class="file-line-num diff-line-num"
           data-line-number="174"
           id="L174" href="#L174">174</a><a class="file-line-num diff-line-num"
           data-line-number="175"
           id="L175" href="#L175">175</a><a class="file-line-num diff-line-num"
           data-line-number="176"
           id="L176" href="#L176">176</a><a class="file-line-num diff-line-num"
           data-line-number="177"
           id="L177" href="#L177">177</a><a class="file-line-num diff-line-num"
           data-line-number="178"
           id="L178" href="#L178">178</a><a class="file-line-num diff-line-num"
           data-line-number="179"
           id="L179" href="#L179">179</a><a class="file-line-num diff-line-num"
           data-line-number="180"
           id="L180" href="#L180">180</a><a class="file-line-num diff-line-num"
           data-line-number="181"
           id="L181" href="#L181">181</a><a class="file-line-num diff-line-num"
           data-line-number="182"
           id="L182" href="#L182">182</a><a class="file-line-num diff-line-num"
           data-line-number="183"
           id="L183" href="#L183">183</a><a class="file-line-num diff-line-num"
           data-line-number="184"
           id="L184" href="#L184">184</a><a class="file-line-num diff-line-num"
           data-line-number="185"
           id="L185" href="#L185">185</a><a class="file-line-num diff-line-num"
           data-line-number="186"
           id="L186" href="#L186">186</a><a class="file-line-num diff-line-num"
           data-line-number="187"
           id="L187" href="#L187">187</a><a class="file-line-num diff-line-num"
           data-line-number="188"
           id="L188" href="#L188">188</a><a class="file-line-num diff-line-num"
           data-line-number="189"
           id="L189" href="#L189">189</a><a class="file-line-num diff-line-num"
           data-line-number="190"
           id="L190" href="#L190">190</a><a class="file-line-num diff-line-num"
           data-line-number="191"
           id="L191" href="#L191">191</a><a class="file-line-num diff-line-num"
           data-line-number="192"
           id="L192" href="#L192">192</a><a class="file-line-num diff-line-num"
           data-line-number="193"
           id="L193" href="#L193">193</a><a class="file-line-num diff-line-num"
           data-line-number="194"
           id="L194" href="#L194">194</a><a class="file-line-num diff-line-num"
           data-line-number="195"
           id="L195" href="#L195">195</a><a class="file-line-num diff-line-num"
           data-line-number="196"
           id="L196" href="#L196">196</a><a class="file-line-num diff-line-num"
           data-line-number="197"
           id="L197" href="#L197">197</a><a class="file-line-num diff-line-num"
           data-line-number="198"
           id="L198" href="#L198">198</a><a class="file-line-num diff-line-num"
           data-line-number="199"
           id="L199" href="#L199">199</a><a class="file-line-num diff-line-num"
           data-line-number="200"
           id="L200" href="#L200">200</a><a class="file-line-num diff-line-num"
           data-line-number="201"
           id="L201" href="#L201">201</a><a class="file-line-num diff-line-num"
           data-line-number="202"
           id="L202" href="#L202">202</a><a class="file-line-num diff-line-num"
           data-line-number="203"
           id="L203" href="#L203">203</a><a class="file-line-num diff-line-num"
           data-line-number="204"
           id="L204" href="#L204">204</a><a class="file-line-num diff-line-num"
           data-line-number="205"
           id="L205" href="#L205">205</a><a class="file-line-num diff-line-num"
           data-line-number="206"
           id="L206" href="#L206">206</a><a class="file-line-num diff-line-num"
           data-line-number="207"
           id="L207" href="#L207">207</a><a class="file-line-num diff-line-num"
           data-line-number="208"
           id="L208" href="#L208">208</a><a class="file-line-num diff-line-num"
           data-line-number="209"
           id="L209" href="#L209">209</a><a class="file-line-num diff-line-num"
           data-line-number="210"
           id="L210" href="#L210">210</a><a class="file-line-num diff-line-num"
           data-line-number="211"
           id="L211" href="#L211">211</a><a class="file-line-num diff-line-num"
           data-line-number="212"
           id="L212" href="#L212">212</a><a class="file-line-num diff-line-num"
           data-line-number="213"
           id="L213" href="#L213">213</a><a class="file-line-num diff-line-num"
           data-line-number="214"
           id="L214" href="#L214">214</a><a class="file-line-num diff-line-num"
           data-line-number="215"
           id="L215" href="#L215">215</a><a class="file-line-num diff-line-num"
           data-line-number="216"
           id="L216" href="#L216">216</a><a class="file-line-num diff-line-num"
           data-line-number="217"
           id="L217" href="#L217">217</a><a class="file-line-num diff-line-num"
           data-line-number="218"
           id="L218" href="#L218">218</a><a class="file-line-num diff-line-num"
           data-line-number="219"
           id="L219" href="#L219">219</a><a class="file-line-num diff-line-num"
           data-line-number="220"
           id="L220" href="#L220">220</a><a class="file-line-num diff-line-num"
           data-line-number="221"
           id="L221" href="#L221">221</a><a class="file-line-num diff-line-num"
           data-line-number="222"
           id="L222" href="#L222">222</a><a class="file-line-num diff-line-num"
           data-line-number="223"
           id="L223" href="#L223">223</a><a class="file-line-num diff-line-num"
           data-line-number="224"
           id="L224" href="#L224">224</a><a class="file-line-num diff-line-num"
           data-line-number="225"
           id="L225" href="#L225">225</a><a class="file-line-num diff-line-num"
           data-line-number="226"
           id="L226" href="#L226">226</a><a class="file-line-num diff-line-num"
           data-line-number="227"
           id="L227" href="#L227">227</a><a class="file-line-num diff-line-num"
           data-line-number="228"
           id="L228" href="#L228">228</a><a class="file-line-num diff-line-num"
           data-line-number="229"
           id="L229" href="#L229">229</a><a class="file-line-num diff-line-num"
           data-line-number="230"
           id="L230" href="#L230">230</a><a class="file-line-num diff-line-num"
           data-line-number="231"
           id="L231" href="#L231">231</a><a class="file-line-num diff-line-num"
           data-line-number="232"
           id="L232" href="#L232">232</a><a class="file-line-num diff-line-num"
           data-line-number="233"
           id="L233" href="#L233">233</a><a class="file-line-num diff-line-num"
           data-line-number="234"
           id="L234" href="#L234">234</a><a class="file-line-num diff-line-num"
           data-line-number="235"
           id="L235" href="#L235">235</a><a class="file-line-num diff-line-num"
           data-line-number="236"
           id="L236" href="#L236">236</a><a class="file-line-num diff-line-num"
           data-line-number="237"
           id="L237" href="#L237">237</a><a class="file-line-num diff-line-num"
           data-line-number="238"
           id="L238" href="#L238">238</a><a class="file-line-num diff-line-num"
           data-line-number="239"
           id="L239" href="#L239">239</a><a class="file-line-num diff-line-num"
           data-line-number="240"
           id="L240" href="#L240">240</a><a class="file-line-num diff-line-num"
           data-line-number="241"
           id="L241" href="#L241">241</a><a class="file-line-num diff-line-num"
           data-line-number="242"
           id="L242" href="#L242">242</a><a class="file-line-num diff-line-num"
           data-line-number="243"
           id="L243" href="#L243">243</a><a class="file-line-num diff-line-num"
           data-line-number="244"
           id="L244" href="#L244">244</a><a class="file-line-num diff-line-num"
           data-line-number="245"
           id="L245" href="#L245">245</a><a class="file-line-num diff-line-num"
           data-line-number="246"
           id="L246" href="#L246">246</a><a class="file-line-num diff-line-num"
           data-line-number="247"
           id="L247" href="#L247">247</a><a class="file-line-num diff-line-num"
           data-line-number="248"
           id="L248" href="#L248">248</a><a class="file-line-num diff-line-num"
           data-line-number="249"
           id="L249" href="#L249">249</a><a class="file-line-num diff-line-num"
           data-line-number="250"
           id="L250" href="#L250">250</a><a class="file-line-num diff-line-num"
           data-line-number="251"
           id="L251" href="#L251">251</a><a class="file-line-num diff-line-num"
           data-line-number="252"
           id="L252" href="#L252">252</a><a class="file-line-num diff-line-num"
           data-line-number="253"
           id="L253" href="#L253">253</a><a class="file-line-num diff-line-num"
           data-line-number="254"
           id="L254" href="#L254">254</a><a class="file-line-num diff-line-num"
           data-line-number="255"
           id="L255" href="#L255">255</a><a class="file-line-num diff-line-num"
           data-line-number="256"
           id="L256" href="#L256">256</a><a class="file-line-num diff-line-num"
           data-line-number="257"
           id="L257" href="#L257">257</a><a class="file-line-num diff-line-num"
           data-line-number="258"
           id="L258" href="#L258">258</a><a class="file-line-num diff-line-num"
           data-line-number="259"
           id="L259" href="#L259">259</a><a class="file-line-num diff-line-num"
           data-line-number="260"
           id="L260" href="#L260">260</a><a class="file-line-num diff-line-num"
           data-line-number="261"
           id="L261" href="#L261">261</a><a class="file-line-num diff-line-num"
           data-line-number="262"
           id="L262" href="#L262">262</a><a class="file-line-num diff-line-num"
           data-line-number="263"
           id="L263" href="#L263">263</a><a class="file-line-num diff-line-num"
           data-line-number="264"
           id="L264" href="#L264">264</a><a class="file-line-num diff-line-num"
           data-line-number="265"
           id="L265" href="#L265">265</a><a class="file-line-num diff-line-num"
           data-line-number="266"
           id="L266" href="#L266">266</a><a class="file-line-num diff-line-num"
           data-line-number="267"
           id="L267" href="#L267">267</a><a class="file-line-num diff-line-num"
           data-line-number="268"
           id="L268" href="#L268">268</a><a class="file-line-num diff-line-num"
           data-line-number="269"
           id="L269" href="#L269">269</a><a class="file-line-num diff-line-num"
           data-line-number="270"
           id="L270" href="#L270">270</a><a class="file-line-num diff-line-num"
           data-line-number="271"
           id="L271" href="#L271">271</a><a class="file-line-num diff-line-num"
           data-line-number="272"
           id="L272" href="#L272">272</a><a class="file-line-num diff-line-num"
           data-line-number="273"
           id="L273" href="#L273">273</a><a class="file-line-num diff-line-num"
           data-line-number="274"
           id="L274" href="#L274">274</a><a class="file-line-num diff-line-num"
           data-line-number="275"
           id="L275" href="#L275">275</a><a class="file-line-num diff-line-num"
           data-line-number="276"
           id="L276" href="#L276">276</a><a class="file-line-num diff-line-num"
           data-line-number="277"
           id="L277" href="#L277">277</a><a class="file-line-num diff-line-num"
           data-line-number="278"
           id="L278" href="#L278">278</a><a class="file-line-num diff-line-num"
           data-line-number="279"
           id="L279" href="#L279">279</a><a class="file-line-num diff-line-num"
           data-line-number="280"
           id="L280" href="#L280">280</a><a class="file-line-num diff-line-num"
           data-line-number="281"
           id="L281" href="#L281">281</a><a class="file-line-num diff-line-num"
           data-line-number="282"
           id="L282" href="#L282">282</a><a class="file-line-num diff-line-num"
           data-line-number="283"
           id="L283" href="#L283">283</a><a class="file-line-num diff-line-num"
           data-line-number="284"
           id="L284" href="#L284">284</a><a class="file-line-num diff-line-num"
           data-line-number="285"
           id="L285" href="#L285">285</a><a class="file-line-num diff-line-num"
           data-line-number="286"
           id="L286" href="#L286">286</a><a class="file-line-num diff-line-num"
           data-line-number="287"
           id="L287" href="#L287">287</a><a class="file-line-num diff-line-num"
           data-line-number="288"
           id="L288" href="#L288">288</a><a class="file-line-num diff-line-num"
           data-line-number="289"
           id="L289" href="#L289">289</a><a class="file-line-num diff-line-num"
           data-line-number="290"
           id="L290" href="#L290">290</a><a class="file-line-num diff-line-num"
           data-line-number="291"
           id="L291" href="#L291">291</a><a class="file-line-num diff-line-num"
           data-line-number="292"
           id="L292" href="#L292">292</a><a class="file-line-num diff-line-num"
           data-line-number="293"
           id="L293" href="#L293">293</a><a class="file-line-num diff-line-num"
           data-line-number="294"
           id="L294" href="#L294">294</a><a class="file-line-num diff-line-num"
           data-line-number="295"
           id="L295" href="#L295">295</a><a class="file-line-num diff-line-num"
           data-line-number="296"
           id="L296" href="#L296">296</a><a class="file-line-num diff-line-num"
           data-line-number="297"
           id="L297" href="#L297">297</a><a class="file-line-num diff-line-num"
           data-line-number="298"
           id="L298" href="#L298">298</a><a class="file-line-num diff-line-num"
           data-line-number="299"
           id="L299" href="#L299">299</a><a class="file-line-num diff-line-num"
           data-line-number="300"
           id="L300" href="#L300">300</a><a class="file-line-num diff-line-num"
           data-line-number="301"
           id="L301" href="#L301">301</a><a class="file-line-num diff-line-num"
           data-line-number="302"
           id="L302" href="#L302">302</a><a class="file-line-num diff-line-num"
           data-line-number="303"
           id="L303" href="#L303">303</a><a class="file-line-num diff-line-num"
           data-line-number="304"
           id="L304" href="#L304">304</a><a class="file-line-num diff-line-num"
           data-line-number="305"
           id="L305" href="#L305">305</a><a class="file-line-num diff-line-num"
           data-line-number="306"
           id="L306" href="#L306">306</a><a class="file-line-num diff-line-num"
           data-line-number="307"
           id="L307" href="#L307">307</a><a class="file-line-num diff-line-num"
           data-line-number="308"
           id="L308" href="#L308">308</a><a class="file-line-num diff-line-num"
           data-line-number="309"
           id="L309" href="#L309">309</a><a class="file-line-num diff-line-num"
           data-line-number="310"
           id="L310" href="#L310">310</a><a class="file-line-num diff-line-num"
           data-line-number="311"
           id="L311" href="#L311">311</a><a class="file-line-num diff-line-num"
           data-line-number="312"
           id="L312" href="#L312">312</a><a class="file-line-num diff-line-num"
           data-line-number="313"
           id="L313" href="#L313">313</a><a class="file-line-num diff-line-num"
           data-line-number="314"
           id="L314" href="#L314">314</a><a class="file-line-num diff-line-num"
           data-line-number="315"
           id="L315" href="#L315">315</a><a class="file-line-num diff-line-num"
           data-line-number="316"
           id="L316" href="#L316">316</a><a class="file-line-num diff-line-num"
           data-line-number="317"
           id="L317" href="#L317">317</a><a class="file-line-num diff-line-num"
           data-line-number="318"
           id="L318" href="#L318">318</a><a class="file-line-num diff-line-num"
           data-line-number="319"
           id="L319" href="#L319">319</a><a class="file-line-num diff-line-num"
           data-line-number="320"
           id="L320" href="#L320">320</a><a class="file-line-num diff-line-num"
           data-line-number="321"
           id="L321" href="#L321">321</a><a class="file-line-num diff-line-num"
           data-line-number="322"
           id="L322" href="#L322">322</a><a class="file-line-num diff-line-num"
           data-line-number="323"
           id="L323" href="#L323">323</a><a class="file-line-num diff-line-num"
           data-line-number="324"
           id="L324" href="#L324">324</a><a class="file-line-num diff-line-num"
           data-line-number="325"
           id="L325" href="#L325">325</a><a class="file-line-num diff-line-num"
           data-line-number="326"
           id="L326" href="#L326">326</a><a class="file-line-num diff-line-num"
           data-line-number="327"
           id="L327" href="#L327">327</a><a class="file-line-num diff-line-num"
           data-line-number="328"
           id="L328" href="#L328">328</a><a class="file-line-num diff-line-num"
           data-line-number="329"
           id="L329" href="#L329">329</a><a class="file-line-num diff-line-num"
           data-line-number="330"
           id="L330" href="#L330">330</a><a class="file-line-num diff-line-num"
           data-line-number="331"
           id="L331" href="#L331">331</a><a class="file-line-num diff-line-num"
           data-line-number="332"
           id="L332" href="#L332">332</a><a class="file-line-num diff-line-num"
           data-line-number="333"
           id="L333" href="#L333">333</a><a class="file-line-num diff-line-num"
           data-line-number="334"
           id="L334" href="#L334">334</a><a class="file-line-num diff-line-num"
           data-line-number="335"
           id="L335" href="#L335">335</a><a class="file-line-num diff-line-num"
           data-line-number="336"
           id="L336" href="#L336">336</a><a class="file-line-num diff-line-num"
           data-line-number="337"
           id="L337" href="#L337">337</a><a class="file-line-num diff-line-num"
           data-line-number="338"
           id="L338" href="#L338">338</a><a class="file-line-num diff-line-num"
           data-line-number="339"
           id="L339" href="#L339">339</a><a class="file-line-num diff-line-num"
           data-line-number="340"
           id="L340" href="#L340">340</a><a class="file-line-num diff-line-num"
           data-line-number="341"
           id="L341" href="#L341">341</a><a class="file-line-num diff-line-num"
           data-line-number="342"
           id="L342" href="#L342">342</a><a class="file-line-num diff-line-num"
           data-line-number="343"
           id="L343" href="#L343">343</a><a class="file-line-num diff-line-num"
           data-line-number="344"
           id="L344" href="#L344">344</a><a class="file-line-num diff-line-num"
           data-line-number="345"
           id="L345" href="#L345">345</a><a class="file-line-num diff-line-num"
           data-line-number="346"
           id="L346" href="#L346">346</a><a class="file-line-num diff-line-num"
           data-line-number="347"
           id="L347" href="#L347">347</a><a class="file-line-num diff-line-num"
           data-line-number="348"
           id="L348" href="#L348">348</a><a class="file-line-num diff-line-num"
           data-line-number="349"
           id="L349" href="#L349">349</a><a class="file-line-num diff-line-num"
           data-line-number="350"
           id="L350" href="#L350">350</a><a class="file-line-num diff-line-num"
           data-line-number="351"
           id="L351" href="#L351">351</a><a class="file-line-num diff-line-num"
           data-line-number="352"
           id="L352" href="#L352">352</a><a class="file-line-num diff-line-num"
           data-line-number="353"
           id="L353" href="#L353">353</a><a class="file-line-num diff-line-num"
           data-line-number="354"
           id="L354" href="#L354">354</a><a class="file-line-num diff-line-num"
           data-line-number="355"
           id="L355" href="#L355">355</a><a class="file-line-num diff-line-num"
           data-line-number="356"
           id="L356" href="#L356">356</a><a class="file-line-num diff-line-num"
           data-line-number="357"
           id="L357" href="#L357">357</a><a class="file-line-num diff-line-num"
           data-line-number="358"
           id="L358" href="#L358">358</a><a class="file-line-num diff-line-num"
           data-line-number="359"
           id="L359" href="#L359">359</a><a class="file-line-num diff-line-num"
           data-line-number="360"
           id="L360" href="#L360">360</a><a class="file-line-num diff-line-num"
           data-line-number="361"
           id="L361" href="#L361">361</a><a class="file-line-num diff-line-num"
           data-line-number="362"
           id="L362" href="#L362">362</a><a class="file-line-num diff-line-num"
           data-line-number="363"
           id="L363" href="#L363">363</a><a class="file-line-num diff-line-num"
           data-line-number="364"
           id="L364" href="#L364">364</a><a class="file-line-num diff-line-num"
           data-line-number="365"
           id="L365" href="#L365">365</a><a class="file-line-num diff-line-num"
           data-line-number="366"
           id="L366" href="#L366">366</a><a class="file-line-num diff-line-num"
           data-line-number="367"
           id="L367" href="#L367">367</a><a class="file-line-num diff-line-num"
           data-line-number="368"
           id="L368" href="#L368">368</a><a class="file-line-num diff-line-num"
           data-line-number="369"
           id="L369" href="#L369">369</a><a class="file-line-num diff-line-num"
           data-line-number="370"
           id="L370" href="#L370">370</a><a class="file-line-num diff-line-num"
           data-line-number="371"
           id="L371" href="#L371">371</a><a class="file-line-num diff-line-num"
           data-line-number="372"
           id="L372" href="#L372">372</a><a class="file-line-num diff-line-num"
           data-line-number="373"
           id="L373" href="#L373">373</a><a class="file-line-num diff-line-num"
           data-line-number="374"
           id="L374" href="#L374">374</a><a class="file-line-num diff-line-num"
           data-line-number="375"
           id="L375" href="#L375">375</a><a class="file-line-num diff-line-num"
           data-line-number="376"
           id="L376" href="#L376">376</a><a class="file-line-num diff-line-num"
           data-line-number="377"
           id="L377" href="#L377">377</a><a class="file-line-num diff-line-num"
           data-line-number="378"
           id="L378" href="#L378">378</a><a class="file-line-num diff-line-num"
           data-line-number="379"
           id="L379" href="#L379">379</a><a class="file-line-num diff-line-num"
           data-line-number="380"
           id="L380" href="#L380">380</a><a class="file-line-num diff-line-num"
           data-line-number="381"
           id="L381" href="#L381">381</a><a class="file-line-num diff-line-num"
           data-line-number="382"
           id="L382" href="#L382">382</a><a class="file-line-num diff-line-num"
           data-line-number="383"
           id="L383" href="#L383">383</a><a class="file-line-num diff-line-num"
           data-line-number="384"
           id="L384" href="#L384">384</a><a class="file-line-num diff-line-num"
           data-line-number="385"
           id="L385" href="#L385">385</a><a class="file-line-num diff-line-num"
           data-line-number="386"
           id="L386" href="#L386">386</a><a class="file-line-num diff-line-num"
           data-line-number="387"
           id="L387" href="#L387">387</a><a class="file-line-num diff-line-num"
           data-line-number="388"
           id="L388" href="#L388">388</a><a class="file-line-num diff-line-num"
           data-line-number="389"
           id="L389" href="#L389">389</a><a class="file-line-num diff-line-num"
           data-line-number="390"
           id="L390" href="#L390">390</a><a class="file-line-num diff-line-num"
           data-line-number="391"
           id="L391" href="#L391">391</a><a class="file-line-num diff-line-num"
           data-line-number="392"
           id="L392" href="#L392">392</a><a class="file-line-num diff-line-num"
           data-line-number="393"
           id="L393" href="#L393">393</a><a class="file-line-num diff-line-num"
           data-line-number="394"
           id="L394" href="#L394">394</a><a class="file-line-num diff-line-num"
           data-line-number="395"
           id="L395" href="#L395">395</a><a class="file-line-num diff-line-num"
           data-line-number="396"
           id="L396" href="#L396">396</a><a class="file-line-num diff-line-num"
           data-line-number="397"
           id="L397" href="#L397">397</a><a class="file-line-num diff-line-num"
           data-line-number="398"
           id="L398" href="#L398">398</a><a class="file-line-num diff-line-num"
           data-line-number="399"
           id="L399" href="#L399">399</a><a class="file-line-num diff-line-num"
           data-line-number="400"
           id="L400" href="#L400">400</a><a class="file-line-num diff-line-num"
           data-line-number="401"
           id="L401" href="#L401">401</a><a class="file-line-num diff-line-num"
           data-line-number="402"
           id="L402" href="#L402">402</a><a class="file-line-num diff-line-num"
           data-line-number="403"
           id="L403" href="#L403">403</a><a class="file-line-num diff-line-num"
           data-line-number="404"
           id="L404" href="#L404">404</a><a class="file-line-num diff-line-num"
           data-line-number="405"
           id="L405" href="#L405">405</a><a class="file-line-num diff-line-num"
           data-line-number="406"
           id="L406" href="#L406">406</a><a class="file-line-num diff-line-num"
           data-line-number="407"
           id="L407" href="#L407">407</a><a class="file-line-num diff-line-num"
           data-line-number="408"
           id="L408" href="#L408">408</a><a class="file-line-num diff-line-num"
           data-line-number="409"
           id="L409" href="#L409">409</a><a class="file-line-num diff-line-num"
           data-line-number="410"
           id="L410" href="#L410">410</a><a class="file-line-num diff-line-num"
           data-line-number="411"
           id="L411" href="#L411">411</a><a class="file-line-num diff-line-num"
           data-line-number="412"
           id="L412" href="#L412">412</a><a class="file-line-num diff-line-num"
           data-line-number="413"
           id="L413" href="#L413">413</a><a class="file-line-num diff-line-num"
           data-line-number="414"
           id="L414" href="#L414">414</a><a class="file-line-num diff-line-num"
           data-line-number="415"
           id="L415" href="#L415">415</a><a class="file-line-num diff-line-num"
           data-line-number="416"
           id="L416" href="#L416">416</a><a class="file-line-num diff-line-num"
           data-line-number="417"
           id="L417" href="#L417">417</a><a class="file-line-num diff-line-num"
           data-line-number="418"
           id="L418" href="#L418">418</a><a class="file-line-num diff-line-num"
           data-line-number="419"
           id="L419" href="#L419">419</a><a class="file-line-num diff-line-num"
           data-line-number="420"
           id="L420" href="#L420">420</a><a class="file-line-num diff-line-num"
           data-line-number="421"
           id="L421" href="#L421">421</a><a class="file-line-num diff-line-num"
           data-line-number="422"
           id="L422" href="#L422">422</a><a class="file-line-num diff-line-num"
           data-line-number="423"
           id="L423" href="#L423">423</a><a class="file-line-num diff-line-num"
           data-line-number="424"
           id="L424" href="#L424">424</a><a class="file-line-num diff-line-num"
           data-line-number="425"
           id="L425" href="#L425">425</a><a class="file-line-num diff-line-num"
           data-line-number="426"
           id="L426" href="#L426">426</a><a class="file-line-num diff-line-num"
           data-line-number="427"
           id="L427" href="#L427">427</a><a class="file-line-num diff-line-num"
           data-line-number="428"
           id="L428" href="#L428">428</a><a class="file-line-num diff-line-num"
           data-line-number="429"
           id="L429" href="#L429">429</a><a class="file-line-num diff-line-num"
           data-line-number="430"
           id="L430" href="#L430">430</a><a class="file-line-num diff-line-num"
           data-line-number="431"
           id="L431" href="#L431">431</a><a class="file-line-num diff-line-num"
           data-line-number="432"
           id="L432" href="#L432">432</a><a class="file-line-num diff-line-num"
           data-line-number="433"
           id="L433" href="#L433">433</a><a class="file-line-num diff-line-num"
           data-line-number="434"
           id="L434" href="#L434">434</a><a class="file-line-num diff-line-num"
           data-line-number="435"
           id="L435" href="#L435">435</a><a class="file-line-num diff-line-num"
           data-line-number="436"
           id="L436" href="#L436">436</a><a class="file-line-num diff-line-num"
           data-line-number="437"
           id="L437" href="#L437">437</a><a class="file-line-num diff-line-num"
           data-line-number="438"
           id="L438" href="#L438">438</a><a class="file-line-num diff-line-num"
           data-line-number="439"
           id="L439" href="#L439">439</a><a class="file-line-num diff-line-num"
           data-line-number="440"
           id="L440" href="#L440">440</a><a class="file-line-num diff-line-num"
           data-line-number="441"
           id="L441" href="#L441">441</a><a class="file-line-num diff-line-num"
           data-line-number="442"
           id="L442" href="#L442">442</a><a class="file-line-num diff-line-num"
           data-line-number="443"
           id="L443" href="#L443">443</a><a class="file-line-num diff-line-num"
           data-line-number="444"
           id="L444" href="#L444">444</a><a class="file-line-num diff-line-num"
           data-line-number="445"
           id="L445" href="#L445">445</a><a class="file-line-num diff-line-num"
           data-line-number="446"
           id="L446" href="#L446">446</a><a class="file-line-num diff-line-num"
           data-line-number="447"
           id="L447" href="#L447">447</a><a class="file-line-num diff-line-num"
           data-line-number="448"
           id="L448" href="#L448">448</a><a class="file-line-num diff-line-num"
           data-line-number="449"
           id="L449" href="#L449">449</a><a class="file-line-num diff-line-num"
           data-line-number="450"
           id="L450" href="#L450">450</a><a class="file-line-num diff-line-num"
           data-line-number="451"
           id="L451" href="#L451">451</a><a class="file-line-num diff-line-num"
           data-line-number="452"
           id="L452" href="#L452">452</a><a class="file-line-num diff-line-num"
           data-line-number="453"
           id="L453" href="#L453">453</a><a class="file-line-num diff-line-num"
           data-line-number="454"
           id="L454" href="#L454">454</a><a class="file-line-num diff-line-num"
           data-line-number="455"
           id="L455" href="#L455">455</a><a class="file-line-num diff-line-num"
           data-line-number="456"
           id="L456" href="#L456">456</a><a class="file-line-num diff-line-num"
           data-line-number="457"
           id="L457" href="#L457">457</a><a class="file-line-num diff-line-num"
           data-line-number="458"
           id="L458" href="#L458">458</a><a class="file-line-num diff-line-num"
           data-line-number="459"
           id="L459" href="#L459">459</a><a class="file-line-num diff-line-num"
           data-line-number="460"
           id="L460" href="#L460">460</a><a class="file-line-num diff-line-num"
           data-line-number="461"
           id="L461" href="#L461">461</a><a class="file-line-num diff-line-num"
           data-line-number="462"
           id="L462" href="#L462">462</a><a class="file-line-num diff-line-num"
           data-line-number="463"
           id="L463" href="#L463">463</a><a class="file-line-num diff-line-num"
           data-line-number="464"
           id="L464" href="#L464">464</a><a class="file-line-num diff-line-num"
           data-line-number="465"
           id="L465" href="#L465">465</a><a class="file-line-num diff-line-num"
           data-line-number="466"
           id="L466" href="#L466">466</a><a class="file-line-num diff-line-num"
           data-line-number="467"
           id="L467" href="#L467">467</a><a class="file-line-num diff-line-num"
           data-line-number="468"
           id="L468" href="#L468">468</a><a class="file-line-num diff-line-num"
           data-line-number="469"
           id="L469" href="#L469">469</a><a class="file-line-num diff-line-num"
           data-line-number="470"
           id="L470" href="#L470">470</a><a class="file-line-num diff-line-num"
           data-line-number="471"
           id="L471" href="#L471">471</a><a class="file-line-num diff-line-num"
           data-line-number="472"
           id="L472" href="#L472">472</a><a class="file-line-num diff-line-num"
           data-line-number="473"
           id="L473" href="#L473">473</a><a class="file-line-num diff-line-num"
           data-line-number="474"
           id="L474" href="#L474">474</a><a class="file-line-num diff-line-num"
           data-line-number="475"
           id="L475" href="#L475">475</a><a class="file-line-num diff-line-num"
           data-line-number="476"
           id="L476" href="#L476">476</a><a class="file-line-num diff-line-num"
           data-line-number="477"
           id="L477" href="#L477">477</a><a class="file-line-num diff-line-num"
           data-line-number="478"
           id="L478" href="#L478">478</a><a class="file-line-num diff-line-num"
           data-line-number="479"
           id="L479" href="#L479">479</a><a class="file-line-num diff-line-num"
           data-line-number="480"
           id="L480" href="#L480">480</a><a class="file-line-num diff-line-num"
           data-line-number="481"
           id="L481" href="#L481">481</a><a class="file-line-num diff-line-num"
           data-line-number="482"
           id="L482" href="#L482">482</a><a class="file-line-num diff-line-num"
           data-line-number="483"
           id="L483" href="#L483">483</a><a class="file-line-num diff-line-num"
           data-line-number="484"
           id="L484" href="#L484">484</a><a class="file-line-num diff-line-num"
           data-line-number="485"
           id="L485" href="#L485">485</a><a class="file-line-num diff-line-num"
           data-line-number="486"
           id="L486" href="#L486">486</a><a class="file-line-num diff-line-num"
           data-line-number="487"
           id="L487" href="#L487">487</a><a class="file-line-num diff-line-num"
           data-line-number="488"
           id="L488" href="#L488">488</a><a class="file-line-num diff-line-num"
           data-line-number="489"
           id="L489" href="#L489">489</a><a class="file-line-num diff-line-num"
           data-line-number="490"
           id="L490" href="#L490">490</a><a class="file-line-num diff-line-num"
           data-line-number="491"
           id="L491" href="#L491">491</a><a class="file-line-num diff-line-num"
           data-line-number="492"
           id="L492" href="#L492">492</a><a class="file-line-num diff-line-num"
           data-line-number="493"
           id="L493" href="#L493">493</a><a class="file-line-num diff-line-num"
           data-line-number="494"
           id="L494" href="#L494">494</a><a class="file-line-num diff-line-num"
           data-line-number="495"
           id="L495" href="#L495">495</a><a class="file-line-num diff-line-num"
           data-line-number="496"
           id="L496" href="#L496">496</a><a class="file-line-num diff-line-num"
           data-line-number="497"
           id="L497" href="#L497">497</a><a class="file-line-num diff-line-num"
           data-line-number="498"
           id="L498" href="#L498">498</a><a class="file-line-num diff-line-num"
           data-line-number="499"
           id="L499" href="#L499">499</a><a class="file-line-num diff-line-num"
           data-line-number="500"
           id="L500" href="#L500">500</a><a class="file-line-num diff-line-num"
           data-line-number="501"
           id="L501" href="#L501">501</a><a class="file-line-num diff-line-num"
           data-line-number="502"
           id="L502" href="#L502">502</a><a class="file-line-num diff-line-num"
           data-line-number="503"
           id="L503" href="#L503">503</a><a class="file-line-num diff-line-num"
           data-line-number="504"
           id="L504" href="#L504">504</a><a class="file-line-num diff-line-num"
           data-line-number="505"
           id="L505" href="#L505">505</a><a class="file-line-num diff-line-num"
           data-line-number="506"
           id="L506" href="#L506">506</a><a class="file-line-num diff-line-num"
           data-line-number="507"
           id="L507" href="#L507">507</a><a class="file-line-num diff-line-num"
           data-line-number="508"
           id="L508" href="#L508">508</a><a class="file-line-num diff-line-num"
           data-line-number="509"
           id="L509" href="#L509">509</a><a class="file-line-num diff-line-num"
           data-line-number="510"
           id="L510" href="#L510">510</a><a class="file-line-num diff-line-num"
           data-line-number="511"
           id="L511" href="#L511">511</a><a class="file-line-num diff-line-num"
           data-line-number="512"
           id="L512" href="#L512">512</a><a class="file-line-num diff-line-num"
           data-line-number="513"
           id="L513" href="#L513">513</a><a class="file-line-num diff-line-num"
           data-line-number="514"
           id="L514" href="#L514">514</a><a class="file-line-num diff-line-num"
           data-line-number="515"
           id="L515" href="#L515">515</a><a class="file-line-num diff-line-num"
           data-line-number="516"
           id="L516" href="#L516">516</a><a class="file-line-num diff-line-num"
           data-line-number="517"
           id="L517" href="#L517">517</a><a class="file-line-num diff-line-num"
           data-line-number="518"
           id="L518" href="#L518">518</a><a class="file-line-num diff-line-num"
           data-line-number="519"
           id="L519" href="#L519">519</a><a class="file-line-num diff-line-num"
           data-line-number="520"
           id="L520" href="#L520">520</a><a class="file-line-num diff-line-num"
           data-line-number="521"
           id="L521" href="#L521">521</a><a class="file-line-num diff-line-num"
           data-line-number="522"
           id="L522" href="#L522">522</a><a class="file-line-num diff-line-num"
           data-line-number="523"
           id="L523" href="#L523">523</a><a class="file-line-num diff-line-num"
           data-line-number="524"
           id="L524" href="#L524">524</a><a class="file-line-num diff-line-num"
           data-line-number="525"
           id="L525" href="#L525">525</a><a class="file-line-num diff-line-num"
           data-line-number="526"
           id="L526" href="#L526">526</a><a class="file-line-num diff-line-num"
           data-line-number="527"
           id="L527" href="#L527">527</a><a class="file-line-num diff-line-num"
           data-line-number="528"
           id="L528" href="#L528">528</a><a class="file-line-num diff-line-num"
           data-line-number="529"
           id="L529" href="#L529">529</a><a class="file-line-num diff-line-num"
           data-line-number="530"
           id="L530" href="#L530">530</a><a class="file-line-num diff-line-num"
           data-line-number="531"
           id="L531" href="#L531">531</a><a class="file-line-num diff-line-num"
           data-line-number="532"
           id="L532" href="#L532">532</a><a class="file-line-num diff-line-num"
           data-line-number="533"
           id="L533" href="#L533">533</a><a class="file-line-num diff-line-num"
           data-line-number="534"
           id="L534" href="#L534">534</a><a class="file-line-num diff-line-num"
           data-line-number="535"
           id="L535" href="#L535">535</a><a class="file-line-num diff-line-num"
           data-line-number="536"
           id="L536" href="#L536">536</a><a class="file-line-num diff-line-num"
           data-line-number="537"
           id="L537" href="#L537">537</a><a class="file-line-num diff-line-num"
           data-line-number="538"
           id="L538" href="#L538">538</a><a class="file-line-num diff-line-num"
           data-line-number="539"
           id="L539" href="#L539">539</a><a class="file-line-num diff-line-num"
           data-line-number="540"
           id="L540" href="#L540">540</a><a class="file-line-num diff-line-num"
           data-line-number="541"
           id="L541" href="#L541">541</a><a class="file-line-num diff-line-num"
           data-line-number="542"
           id="L542" href="#L542">542</a><a class="file-line-num diff-line-num"
           data-line-number="543"
           id="L543" href="#L543">543</a><a class="file-line-num diff-line-num"
           data-line-number="544"
           id="L544" href="#L544">544</a><a class="file-line-num diff-line-num"
           data-line-number="545"
           id="L545" href="#L545">545</a><a class="file-line-num diff-line-num"
           data-line-number="546"
           id="L546" href="#L546">546</a><a class="file-line-num diff-line-num"
           data-line-number="547"
           id="L547" href="#L547">547</a><a class="file-line-num diff-line-num"
           data-line-number="548"
           id="L548" href="#L548">548</a><a class="file-line-num diff-line-num"
           data-line-number="549"
           id="L549" href="#L549">549</a><a class="file-line-num diff-line-num"
           data-line-number="550"
           id="L550" href="#L550">550</a><a class="file-line-num diff-line-num"
           data-line-number="551"
           id="L551" href="#L551">551</a><a class="file-line-num diff-line-num"
           data-line-number="552"
           id="L552" href="#L552">552</a><a class="file-line-num diff-line-num"
           data-line-number="553"
           id="L553" href="#L553">553</a><a class="file-line-num diff-line-num"
           data-line-number="554"
           id="L554" href="#L554">554</a><a class="file-line-num diff-line-num"
           data-line-number="555"
           id="L555" href="#L555">555</a><a class="file-line-num diff-line-num"
           data-line-number="556"
           id="L556" href="#L556">556</a><a class="file-line-num diff-line-num"
           data-line-number="557"
           id="L557" href="#L557">557</a><a class="file-line-num diff-line-num"
           data-line-number="558"
           id="L558" href="#L558">558</a><a class="file-line-num diff-line-num"
           data-line-number="559"
           id="L559" href="#L559">559</a><a class="file-line-num diff-line-num"
           data-line-number="560"
           id="L560" href="#L560">560</a><a class="file-line-num diff-line-num"
           data-line-number="561"
           id="L561" href="#L561">561</a><a class="file-line-num diff-line-num"
           data-line-number="562"
           id="L562" href="#L562">562</a><a class="file-line-num diff-line-num"
           data-line-number="563"
           id="L563" href="#L563">563</a><a class="file-line-num diff-line-num"
           data-line-number="564"
           id="L564" href="#L564">564</a><a class="file-line-num diff-line-num"
           data-line-number="565"
           id="L565" href="#L565">565</a><a class="file-line-num diff-line-num"
           data-line-number="566"
           id="L566" href="#L566">566</a><a class="file-line-num diff-line-num"
           data-line-number="567"
           id="L567" href="#L567">567</a><a class="file-line-num diff-line-num"
           data-line-number="568"
           id="L568" href="#L568">568</a><a class="file-line-num diff-line-num"
           data-line-number="569"
           id="L569" href="#L569">569</a><a class="file-line-num diff-line-num"
           data-line-number="570"
           id="L570" href="#L570">570</a><a class="file-line-num diff-line-num"
           data-line-number="571"
           id="L571" href="#L571">571</a><a class="file-line-num diff-line-num"
           data-line-number="572"
           id="L572" href="#L572">572</a><a class="file-line-num diff-line-num"
           data-line-number="573"
           id="L573" href="#L573">573</a><a class="file-line-num diff-line-num"
           data-line-number="574"
           id="L574" href="#L574">574</a><a class="file-line-num diff-line-num"
           data-line-number="575"
           id="L575" href="#L575">575</a><a class="file-line-num diff-line-num"
           data-line-number="576"
           id="L576" href="#L576">576</a><a class="file-line-num diff-line-num"
           data-line-number="577"
           id="L577" href="#L577">577</a><a class="file-line-num diff-line-num"
           data-line-number="578"
           id="L578" href="#L578">578</a><a class="file-line-num diff-line-num"
           data-line-number="579"
           id="L579" href="#L579">579</a><a class="file-line-num diff-line-num"
           data-line-number="580"
           id="L580" href="#L580">580</a><a class="file-line-num diff-line-num"
           data-line-number="581"
           id="L581" href="#L581">581</a><a class="file-line-num diff-line-num"
           data-line-number="582"
           id="L582" href="#L582">582</a><a class="file-line-num diff-line-num"
           data-line-number="583"
           id="L583" href="#L583">583</a><a class="file-line-num diff-line-num"
           data-line-number="584"
           id="L584" href="#L584">584</a><a class="file-line-num diff-line-num"
           data-line-number="585"
           id="L585" href="#L585">585</a><a class="file-line-num diff-line-num"
           data-line-number="586"
           id="L586" href="#L586">586</a><a class="file-line-num diff-line-num"
           data-line-number="587"
           id="L587" href="#L587">587</a><a class="file-line-num diff-line-num"
           data-line-number="588"
           id="L588" href="#L588">588</a><a class="file-line-num diff-line-num"
           data-line-number="589"
           id="L589" href="#L589">589</a><a class="file-line-num diff-line-num"
           data-line-number="590"
           id="L590" href="#L590">590</a><a class="file-line-num diff-line-num"
           data-line-number="591"
           id="L591" href="#L591">591</a><a class="file-line-num diff-line-num"
           data-line-number="592"
           id="L592" href="#L592">592</a><a class="file-line-num diff-line-num"
           data-line-number="593"
           id="L593" href="#L593">593</a><a class="file-line-num diff-line-num"
           data-line-number="594"
           id="L594" href="#L594">594</a><a class="file-line-num diff-line-num"
           data-line-number="595"
           id="L595" href="#L595">595</a><a class="file-line-num diff-line-num"
           data-line-number="596"
           id="L596" href="#L596">596</a><a class="file-line-num diff-line-num"
           data-line-number="597"
           id="L597" href="#L597">597</a><a class="file-line-num diff-line-num"
           data-line-number="598"
           id="L598" href="#L598">598</a><a class="file-line-num diff-line-num"
           data-line-number="599"
           id="L599" href="#L599">599</a><a class="file-line-num diff-line-num"
           data-line-number="600"
           id="L600" href="#L600">600</a><a class="file-line-num diff-line-num"
           data-line-number="601"
           id="L601" href="#L601">601</a><a class="file-line-num diff-line-num"
           data-line-number="602"
           id="L602" href="#L602">602</a><a class="file-line-num diff-line-num"
           data-line-number="603"
           id="L603" href="#L603">603</a><a class="file-line-num diff-line-num"
           data-line-number="604"
           id="L604" href="#L604">604</a><a class="file-line-num diff-line-num"
           data-line-number="605"
           id="L605" href="#L605">605</a><a class="file-line-num diff-line-num"
           data-line-number="606"
           id="L606" href="#L606">606</a><a class="file-line-num diff-line-num"
           data-line-number="607"
           id="L607" href="#L607">607</a><a class="file-line-num diff-line-num"
           data-line-number="608"
           id="L608" href="#L608">608</a><a class="file-line-num diff-line-num"
           data-line-number="609"
           id="L609" href="#L609">609</a><a class="file-line-num diff-line-num"
           data-line-number="610"
           id="L610" href="#L610">610</a><a class="file-line-num diff-line-num"
           data-line-number="611"
           id="L611" href="#L611">611</a><a class="file-line-num diff-line-num"
           data-line-number="612"
           id="L612" href="#L612">612</a><a class="file-line-num diff-line-num"
           data-line-number="613"
           id="L613" href="#L613">613</a><a class="file-line-num diff-line-num"
           data-line-number="614"
           id="L614" href="#L614">614</a><a class="file-line-num diff-line-num"
           data-line-number="615"
           id="L615" href="#L615">615</a><a class="file-line-num diff-line-num"
           data-line-number="616"
           id="L616" href="#L616">616</a><a class="file-line-num diff-line-num"
           data-line-number="617"
           id="L617" href="#L617">617</a><a class="file-line-num diff-line-num"
           data-line-number="618"
           id="L618" href="#L618">618</a><a class="file-line-num diff-line-num"
           data-line-number="619"
           id="L619" href="#L619">619</a><a class="file-line-num diff-line-num"
           data-line-number="620"
           id="L620" href="#L620">620</a><a class="file-line-num diff-line-num"
           data-line-number="621"
           id="L621" href="#L621">621</a><a class="file-line-num diff-line-num"
           data-line-number="622"
           id="L622" href="#L622">622</a><a class="file-line-num diff-line-num"
           data-line-number="623"
           id="L623" href="#L623">623</a><a class="file-line-num diff-line-num"
           data-line-number="624"
           id="L624" href="#L624">624</a><a class="file-line-num diff-line-num"
           data-line-number="625"
           id="L625" href="#L625">625</a><a class="file-line-num diff-line-num"
           data-line-number="626"
           id="L626" href="#L626">626</a><a class="file-line-num diff-line-num"
           data-line-number="627"
           id="L627" href="#L627">627</a><a class="file-line-num diff-line-num"
           data-line-number="628"
           id="L628" href="#L628">628</a><a class="file-line-num diff-line-num"
           data-line-number="629"
           id="L629" href="#L629">629</a><a class="file-line-num diff-line-num"
           data-line-number="630"
           id="L630" href="#L630">630</a><a class="file-line-num diff-line-num"
           data-line-number="631"
           id="L631" href="#L631">631</a><a class="file-line-num diff-line-num"
           data-line-number="632"
           id="L632" href="#L632">632</a><a class="file-line-num diff-line-num"
           data-line-number="633"
           id="L633" href="#L633">633</a><a class="file-line-num diff-line-num"
           data-line-number="634"
           id="L634" href="#L634">634</a><a class="file-line-num diff-line-num"
           data-line-number="635"
           id="L635" href="#L635">635</a><a class="file-line-num diff-line-num"
           data-line-number="636"
           id="L636" href="#L636">636</a><a class="file-line-num diff-line-num"
           data-line-number="637"
           id="L637" href="#L637">637</a><a class="file-line-num diff-line-num"
           data-line-number="638"
           id="L638" href="#L638">638</a><a class="file-line-num diff-line-num"
           data-line-number="639"
           id="L639" href="#L639">639</a><a class="file-line-num diff-line-num"
           data-line-number="640"
           id="L640" href="#L640">640</a><a class="file-line-num diff-line-num"
           data-line-number="641"
           id="L641" href="#L641">641</a><a class="file-line-num diff-line-num"
           data-line-number="642"
           id="L642" href="#L642">642</a><a class="file-line-num diff-line-num"
           data-line-number="643"
           id="L643" href="#L643">643</a><a class="file-line-num diff-line-num"
           data-line-number="644"
           id="L644" href="#L644">644</a><a class="file-line-num diff-line-num"
           data-line-number="645"
           id="L645" href="#L645">645</a><a class="file-line-num diff-line-num"
           data-line-number="646"
           id="L646" href="#L646">646</a><a class="file-line-num diff-line-num"
           data-line-number="647"
           id="L647" href="#L647">647</a><a class="file-line-num diff-line-num"
           data-line-number="648"
           id="L648" href="#L648">648</a><a class="file-line-num diff-line-num"
           data-line-number="649"
           id="L649" href="#L649">649</a><a class="file-line-num diff-line-num"
           data-line-number="650"
           id="L650" href="#L650">650</a><a class="file-line-num diff-line-num"
           data-line-number="651"
           id="L651" href="#L651">651</a><a class="file-line-num diff-line-num"
           data-line-number="652"
           id="L652" href="#L652">652</a><a class="file-line-num diff-line-num"
           data-line-number="653"
           id="L653" href="#L653">653</a><a class="file-line-num diff-line-num"
           data-line-number="654"
           id="L654" href="#L654">654</a><a class="file-line-num diff-line-num"
           data-line-number="655"
           id="L655" href="#L655">655</a><a class="file-line-num diff-line-num"
           data-line-number="656"
           id="L656" href="#L656">656</a><a class="file-line-num diff-line-num"
           data-line-number="657"
           id="L657" href="#L657">657</a><a class="file-line-num diff-line-num"
           data-line-number="658"
           id="L658" href="#L658">658</a><a class="file-line-num diff-line-num"
           data-line-number="659"
           id="L659" href="#L659">659</a><a class="file-line-num diff-line-num"
           data-line-number="660"
           id="L660" href="#L660">660</a><a class="file-line-num diff-line-num"
           data-line-number="661"
           id="L661" href="#L661">661</a><a class="file-line-num diff-line-num"
           data-line-number="662"
           id="L662" href="#L662">662</a><a class="file-line-num diff-line-num"
           data-line-number="663"
           id="L663" href="#L663">663</a><a class="file-line-num diff-line-num"
           data-line-number="664"
           id="L664" href="#L664">664</a><a class="file-line-num diff-line-num"
           data-line-number="665"
           id="L665" href="#L665">665</a><a class="file-line-num diff-line-num"
           data-line-number="666"
           id="L666" href="#L666">666</a><a class="file-line-num diff-line-num"
           data-line-number="667"
           id="L667" href="#L667">667</a><a class="file-line-num diff-line-num"
           data-line-number="668"
           id="L668" href="#L668">668</a><a class="file-line-num diff-line-num"
           data-line-number="669"
           id="L669" href="#L669">669</a><a class="file-line-num diff-line-num"
           data-line-number="670"
           id="L670" href="#L670">670</a><a class="file-line-num diff-line-num"
           data-line-number="671"
           id="L671" href="#L671">671</a><a class="file-line-num diff-line-num"
           data-line-number="672"
           id="L672" href="#L672">672</a><a class="file-line-num diff-line-num"
           data-line-number="673"
           id="L673" href="#L673">673</a><a class="file-line-num diff-line-num"
           data-line-number="674"
           id="L674" href="#L674">674</a><a class="file-line-num diff-line-num"
           data-line-number="675"
           id="L675" href="#L675">675</a><a class="file-line-num diff-line-num"
           data-line-number="676"
           id="L676" href="#L676">676</a><a class="file-line-num diff-line-num"
           data-line-number="677"
           id="L677" href="#L677">677</a><a class="file-line-num diff-line-num"
           data-line-number="678"
           id="L678" href="#L678">678</a><a class="file-line-num diff-line-num"
           data-line-number="679"
           id="L679" href="#L679">679</a><a class="file-line-num diff-line-num"
           data-line-number="680"
           id="L680" href="#L680">680</a><a class="file-line-num diff-line-num"
           data-line-number="681"
           id="L681" href="#L681">681</a><a class="file-line-num diff-line-num"
           data-line-number="682"
           id="L682" href="#L682">682</a><a class="file-line-num diff-line-num"
           data-line-number="683"
           id="L683" href="#L683">683</a><a class="file-line-num diff-line-num"
           data-line-number="684"
           id="L684" href="#L684">684</a><a class="file-line-num diff-line-num"
           data-line-number="685"
           id="L685" href="#L685">685</a><a class="file-line-num diff-line-num"
           data-line-number="686"
           id="L686" href="#L686">686</a><a class="file-line-num diff-line-num"
           data-line-number="687"
           id="L687" href="#L687">687</a><a class="file-line-num diff-line-num"
           data-line-number="688"
           id="L688" href="#L688">688</a><a class="file-line-num diff-line-num"
           data-line-number="689"
           id="L689" href="#L689">689</a><a class="file-line-num diff-line-num"
           data-line-number="690"
           id="L690" href="#L690">690</a><a class="file-line-num diff-line-num"
           data-line-number="691"
           id="L691" href="#L691">691</a><a class="file-line-num diff-line-num"
           data-line-number="692"
           id="L692" href="#L692">692</a><a class="file-line-num diff-line-num"
           data-line-number="693"
           id="L693" href="#L693">693</a><a class="file-line-num diff-line-num"
           data-line-number="694"
           id="L694" href="#L694">694</a><a class="file-line-num diff-line-num"
           data-line-number="695"
           id="L695" href="#L695">695</a><a class="file-line-num diff-line-num"
           data-line-number="696"
           id="L696" href="#L696">696</a><a class="file-line-num diff-line-num"
           data-line-number="697"
           id="L697" href="#L697">697</a><a class="file-line-num diff-line-num"
           data-line-number="698"
           id="L698" href="#L698">698</a><a class="file-line-num diff-line-num"
           data-line-number="699"
           id="L699" href="#L699">699</a><a class="file-line-num diff-line-num"
           data-line-number="700"
           id="L700" href="#L700">700</a><a class="file-line-num diff-line-num"
           data-line-number="701"
           id="L701" href="#L701">701</a><a class="file-line-num diff-line-num"
           data-line-number="702"
           id="L702" href="#L702">702</a><a class="file-line-num diff-line-num"
           data-line-number="703"
           id="L703" href="#L703">703</a><a class="file-line-num diff-line-num"
           data-line-number="704"
           id="L704" href="#L704">704</a><a class="file-line-num diff-line-num"
           data-line-number="705"
           id="L705" href="#L705">705</a><a class="file-line-num diff-line-num"
           data-line-number="706"
           id="L706" href="#L706">706</a><a class="file-line-num diff-line-num"
           data-line-number="707"
           id="L707" href="#L707">707</a><a class="file-line-num diff-line-num"
           data-line-number="708"
           id="L708" href="#L708">708</a><a class="file-line-num diff-line-num"
           data-line-number="709"
           id="L709" href="#L709">709</a><a class="file-line-num diff-line-num"
           data-line-number="710"
           id="L710" href="#L710">710</a><a class="file-line-num diff-line-num"
           data-line-number="711"
           id="L711" href="#L711">711</a><a class="file-line-num diff-line-num"
           data-line-number="712"
           id="L712" href="#L712">712</a><a class="file-line-num diff-line-num"
           data-line-number="713"
           id="L713" href="#L713">713</a><a class="file-line-num diff-line-num"
           data-line-number="714"
           id="L714" href="#L714">714</a><a class="file-line-num diff-line-num"
           data-line-number="715"
           id="L715" href="#L715">715</a><a class="file-line-num diff-line-num"
           data-line-number="716"
           id="L716" href="#L716">716</a><a class="file-line-num diff-line-num"
           data-line-number="717"
           id="L717" href="#L717">717</a><a class="file-line-num diff-line-num"
           data-line-number="718"
           id="L718" href="#L718">718</a><a class="file-line-num diff-line-num"
           data-line-number="719"
           id="L719" href="#L719">719</a><a class="file-line-num diff-line-num"
           data-line-number="720"
           id="L720" href="#L720">720</a><a class="file-line-num diff-line-num"
           data-line-number="721"
           id="L721" href="#L721">721</a><a class="file-line-num diff-line-num"
           data-line-number="722"
           id="L722" href="#L722">722</a><a class="file-line-num diff-line-num"
           data-line-number="723"
           id="L723" href="#L723">723</a><a class="file-line-num diff-line-num"
           data-line-number="724"
           id="L724" href="#L724">724</a><a class="file-line-num diff-line-num"
           data-line-number="725"
           id="L725" href="#L725">725</a><a class="file-line-num diff-line-num"
           data-line-number="726"
           id="L726" href="#L726">726</a><a class="file-line-num diff-line-num"
           data-line-number="727"
           id="L727" href="#L727">727</a><a class="file-line-num diff-line-num"
           data-line-number="728"
           id="L728" href="#L728">728</a><a class="file-line-num diff-line-num"
           data-line-number="729"
           id="L729" href="#L729">729</a><a class="file-line-num diff-line-num"
           data-line-number="730"
           id="L730" href="#L730">730</a><a class="file-line-num diff-line-num"
           data-line-number="731"
           id="L731" href="#L731">731</a><a class="file-line-num diff-line-num"
           data-line-number="732"
           id="L732" href="#L732">732</a><a class="file-line-num diff-line-num"
           data-line-number="733"
           id="L733" href="#L733">733</a><a class="file-line-num diff-line-num"
           data-line-number="734"
           id="L734" href="#L734">734</a><a class="file-line-num diff-line-num"
           data-line-number="735"
           id="L735" href="#L735">735</a><a class="file-line-num diff-line-num"
           data-line-number="736"
           id="L736" href="#L736">736</a><a class="file-line-num diff-line-num"
           data-line-number="737"
           id="L737" href="#L737">737</a><a class="file-line-num diff-line-num"
           data-line-number="738"
           id="L738" href="#L738">738</a><a class="file-line-num diff-line-num"
           data-line-number="739"
           id="L739" href="#L739">739</a><a class="file-line-num diff-line-num"
           data-line-number="740"
           id="L740" href="#L740">740</a><a class="file-line-num diff-line-num"
           data-line-number="741"
           id="L741" href="#L741">741</a><a class="file-line-num diff-line-num"
           data-line-number="742"
           id="L742" href="#L742">742</a><a class="file-line-num diff-line-num"
           data-line-number="743"
           id="L743" href="#L743">743</a><a class="file-line-num diff-line-num"
           data-line-number="744"
           id="L744" href="#L744">744</a><a class="file-line-num diff-line-num"
           data-line-number="745"
           id="L745" href="#L745">745</a><a class="file-line-num diff-line-num"
           data-line-number="746"
           id="L746" href="#L746">746</a><a class="file-line-num diff-line-num"
           data-line-number="747"
           id="L747" href="#L747">747</a><a class="file-line-num diff-line-num"
           data-line-number="748"
           id="L748" href="#L748">748</a><a class="file-line-num diff-line-num"
           data-line-number="749"
           id="L749" href="#L749">749</a><a class="file-line-num diff-line-num"
           data-line-number="750"
           id="L750" href="#L750">750</a><a class="file-line-num diff-line-num"
           data-line-number="751"
           id="L751" href="#L751">751</a><a class="file-line-num diff-line-num"
           data-line-number="752"
           id="L752" href="#L752">752</a><a class="file-line-num diff-line-num"
           data-line-number="753"
           id="L753" href="#L753">753</a><a class="file-line-num diff-line-num"
           data-line-number="754"
           id="L754" href="#L754">754</a><a class="file-line-num diff-line-num"
           data-line-number="755"
           id="L755" href="#L755">755</a><a class="file-line-num diff-line-num"
           data-line-number="756"
           id="L756" href="#L756">756</a><a class="file-line-num diff-line-num"
           data-line-number="757"
           id="L757" href="#L757">757</a><a class="file-line-num diff-line-num"
           data-line-number="758"
           id="L758" href="#L758">758</a><a class="file-line-num diff-line-num"
           data-line-number="759"
           id="L759" href="#L759">759</a><a class="file-line-num diff-line-num"
           data-line-number="760"
           id="L760" href="#L760">760</a><a class="file-line-num diff-line-num"
           data-line-number="761"
           id="L761" href="#L761">761</a><a class="file-line-num diff-line-num"
           data-line-number="762"
           id="L762" href="#L762">762</a><a class="file-line-num diff-line-num"
           data-line-number="763"
           id="L763" href="#L763">763</a><a class="file-line-num diff-line-num"
           data-line-number="764"
           id="L764" href="#L764">764</a><a class="file-line-num diff-line-num"
           data-line-number="765"
           id="L765" href="#L765">765</a><a class="file-line-num diff-line-num"
           data-line-number="766"
           id="L766" href="#L766">766</a><a class="file-line-num diff-line-num"
           data-line-number="767"
           id="L767" href="#L767">767</a><a class="file-line-num diff-line-num"
           data-line-number="768"
           id="L768" href="#L768">768</a><a class="file-line-num diff-line-num"
           data-line-number="769"
           id="L769" href="#L769">769</a><a class="file-line-num diff-line-num"
           data-line-number="770"
           id="L770" href="#L770">770</a><a class="file-line-num diff-line-num"
           data-line-number="771"
           id="L771" href="#L771">771</a><a class="file-line-num diff-line-num"
           data-line-number="772"
           id="L772" href="#L772">772</a><a class="file-line-num diff-line-num"
           data-line-number="773"
           id="L773" href="#L773">773</a><a class="file-line-num diff-line-num"
           data-line-number="774"
           id="L774" href="#L774">774</a><a class="file-line-num diff-line-num"
           data-line-number="775"
           id="L775" href="#L775">775</a><a class="file-line-num diff-line-num"
           data-line-number="776"
           id="L776" href="#L776">776</a><a class="file-line-num diff-line-num"
           data-line-number="777"
           id="L777" href="#L777">777</a><a class="file-line-num diff-line-num"
           data-line-number="778"
           id="L778" href="#L778">778</a><a class="file-line-num diff-line-num"
           data-line-number="779"
           id="L779" href="#L779">779</a><a class="file-line-num diff-line-num"
           data-line-number="780"
           id="L780" href="#L780">780</a><a class="file-line-num diff-line-num"
           data-line-number="781"
           id="L781" href="#L781">781</a><a class="file-line-num diff-line-num"
           data-line-number="782"
           id="L782" href="#L782">782</a><a class="file-line-num diff-line-num"
           data-line-number="783"
           id="L783" href="#L783">783</a><a class="file-line-num diff-line-num"
           data-line-number="784"
           id="L784" href="#L784">784</a><a class="file-line-num diff-line-num"
           data-line-number="785"
           id="L785" href="#L785">785</a><a class="file-line-num diff-line-num"
           data-line-number="786"
           id="L786" href="#L786">786</a><a class="file-line-num diff-line-num"
           data-line-number="787"
           id="L787" href="#L787">787</a><a class="file-line-num diff-line-num"
           data-line-number="788"
           id="L788" href="#L788">788</a><a class="file-line-num diff-line-num"
           data-line-number="789"
           id="L789" href="#L789">789</a><a class="file-line-num diff-line-num"
           data-line-number="790"
           id="L790" href="#L790">790</a><a class="file-line-num diff-line-num"
           data-line-number="791"
           id="L791" href="#L791">791</a><a class="file-line-num diff-line-num"
           data-line-number="792"
           id="L792" href="#L792">792</a><a class="file-line-num diff-line-num"
           data-line-number="793"
           id="L793" href="#L793">793</a><a class="file-line-num diff-line-num"
           data-line-number="794"
           id="L794" href="#L794">794</a><a class="file-line-num diff-line-num"
           data-line-number="795"
           id="L795" href="#L795">795</a><a class="file-line-num diff-line-num"
           data-line-number="796"
           id="L796" href="#L796">796</a><a class="file-line-num diff-line-num"
           data-line-number="797"
           id="L797" href="#L797">797</a><a class="file-line-num diff-line-num"
           data-line-number="798"
           id="L798" href="#L798">798</a><a class="file-line-num diff-line-num"
           data-line-number="799"
           id="L799" href="#L799">799</a><a class="file-line-num diff-line-num"
           data-line-number="800"
           id="L800" href="#L800">800</a><a class="file-line-num diff-line-num"
           data-line-number="801"
           id="L801" href="#L801">801</a><a class="file-line-num diff-line-num"
           data-line-number="802"
           id="L802" href="#L802">802</a><a class="file-line-num diff-line-num"
           data-line-number="803"
           id="L803" href="#L803">803</a><a class="file-line-num diff-line-num"
           data-line-number="804"
           id="L804" href="#L804">804</a><a class="file-line-num diff-line-num"
           data-line-number="805"
           id="L805" href="#L805">805</a><a class="file-line-num diff-line-num"
           data-line-number="806"
           id="L806" href="#L806">806</a><a class="file-line-num diff-line-num"
           data-line-number="807"
           id="L807" href="#L807">807</a><a class="file-line-num diff-line-num"
           data-line-number="808"
           id="L808" href="#L808">808</a><a class="file-line-num diff-line-num"
           data-line-number="809"
           id="L809" href="#L809">809</a><a class="file-line-num diff-line-num"
           data-line-number="810"
           id="L810" href="#L810">810</a><a class="file-line-num diff-line-num"
           data-line-number="811"
           id="L811" href="#L811">811</a><a class="file-line-num diff-line-num"
           data-line-number="812"
           id="L812" href="#L812">812</a><a class="file-line-num diff-line-num"
           data-line-number="813"
           id="L813" href="#L813">813</a><a class="file-line-num diff-line-num"
           data-line-number="814"
           id="L814" href="#L814">814</a><a class="file-line-num diff-line-num"
           data-line-number="815"
           id="L815" href="#L815">815</a><a class="file-line-num diff-line-num"
           data-line-number="816"
           id="L816" href="#L816">816</a><a class="file-line-num diff-line-num"
           data-line-number="817"
           id="L817" href="#L817">817</a><a class="file-line-num diff-line-num"
           data-line-number="818"
           id="L818" href="#L818">818</a><a class="file-line-num diff-line-num"
           data-line-number="819"
           id="L819" href="#L819">819</a><a class="file-line-num diff-line-num"
           data-line-number="820"
           id="L820" href="#L820">820</a><a class="file-line-num diff-line-num"
           data-line-number="821"
           id="L821" href="#L821">821</a><a class="file-line-num diff-line-num"
           data-line-number="822"
           id="L822" href="#L822">822</a><a class="file-line-num diff-line-num"
           data-line-number="823"
           id="L823" href="#L823">823</a><a class="file-line-num diff-line-num"
           data-line-number="824"
           id="L824" href="#L824">824</a><a class="file-line-num diff-line-num"
           data-line-number="825"
           id="L825" href="#L825">825</a><a class="file-line-num diff-line-num"
           data-line-number="826"
           id="L826" href="#L826">826</a><a class="file-line-num diff-line-num"
           data-line-number="827"
           id="L827" href="#L827">827</a><a class="file-line-num diff-line-num"
           data-line-number="828"
           id="L828" href="#L828">828</a><a class="file-line-num diff-line-num"
           data-line-number="829"
           id="L829" href="#L829">829</a><a class="file-line-num diff-line-num"
           data-line-number="830"
           id="L830" href="#L830">830</a><a class="file-line-num diff-line-num"
           data-line-number="831"
           id="L831" href="#L831">831</a><a class="file-line-num diff-line-num"
           data-line-number="832"
           id="L832" href="#L832">832</a><a class="file-line-num diff-line-num"
           data-line-number="833"
           id="L833" href="#L833">833</a><a class="file-line-num diff-line-num"
           data-line-number="834"
           id="L834" href="#L834">834</a><a class="file-line-num diff-line-num"
           data-line-number="835"
           id="L835" href="#L835">835</a><a class="file-line-num diff-line-num"
           data-line-number="836"
           id="L836" href="#L836">836</a><a class="file-line-num diff-line-num"
           data-line-number="837"
           id="L837" href="#L837">837</a><a class="file-line-num diff-line-num"
           data-line-number="838"
           id="L838" href="#L838">838</a><a class="file-line-num diff-line-num"
           data-line-number="839"
           id="L839" href="#L839">839</a><a class="file-line-num diff-line-num"
           data-line-number="840"
           id="L840" href="#L840">840</a><a class="file-line-num diff-line-num"
           data-line-number="841"
           id="L841" href="#L841">841</a><a class="file-line-num diff-line-num"
           data-line-number="842"
           id="L842" href="#L842">842</a><a class="file-line-num diff-line-num"
           data-line-number="843"
           id="L843" href="#L843">843</a><a class="file-line-num diff-line-num"
           data-line-number="844"
           id="L844" href="#L844">844</a><a class="file-line-num diff-line-num"
           data-line-number="845"
           id="L845" href="#L845">845</a><a class="file-line-num diff-line-num"
           data-line-number="846"
           id="L846" href="#L846">846</a><a class="file-line-num diff-line-num"
           data-line-number="847"
           id="L847" href="#L847">847</a><a class="file-line-num diff-line-num"
           data-line-number="848"
           id="L848" href="#L848">848</a><a class="file-line-num diff-line-num"
           data-line-number="849"
           id="L849" href="#L849">849</a><a class="file-line-num diff-line-num"
           data-line-number="850"
           id="L850" href="#L850">850</a><a class="file-line-num diff-line-num"
           data-line-number="851"
           id="L851" href="#L851">851</a><a class="file-line-num diff-line-num"
           data-line-number="852"
           id="L852" href="#L852">852</a><a class="file-line-num diff-line-num"
           data-line-number="853"
           id="L853" href="#L853">853</a><a class="file-line-num diff-line-num"
           data-line-number="854"
           id="L854" href="#L854">854</a><a class="file-line-num diff-line-num"
           data-line-number="855"
           id="L855" href="#L855">855</a><a class="file-line-num diff-line-num"
           data-line-number="856"
           id="L856" href="#L856">856</a><a class="file-line-num diff-line-num"
           data-line-number="857"
           id="L857" href="#L857">857</a><a class="file-line-num diff-line-num"
           data-line-number="858"
           id="L858" href="#L858">858</a><a class="file-line-num diff-line-num"
           data-line-number="859"
           id="L859" href="#L859">859</a><a class="file-line-num diff-line-num"
           data-line-number="860"
           id="L860" href="#L860">860</a><a class="file-line-num diff-line-num"
           data-line-number="861"
           id="L861" href="#L861">861</a><a class="file-line-num diff-line-num"
           data-line-number="862"
           id="L862" href="#L862">862</a><a class="file-line-num diff-line-num"
           data-line-number="863"
           id="L863" href="#L863">863</a><a class="file-line-num diff-line-num"
           data-line-number="864"
           id="L864" href="#L864">864</a><a class="file-line-num diff-line-num"
           data-line-number="865"
           id="L865" href="#L865">865</a><a class="file-line-num diff-line-num"
           data-line-number="866"
           id="L866" href="#L866">866</a><a class="file-line-num diff-line-num"
           data-line-number="867"
           id="L867" href="#L867">867</a><a class="file-line-num diff-line-num"
           data-line-number="868"
           id="L868" href="#L868">868</a><a class="file-line-num diff-line-num"
           data-line-number="869"
           id="L869" href="#L869">869</a><a class="file-line-num diff-line-num"
           data-line-number="870"
           id="L870" href="#L870">870</a><a class="file-line-num diff-line-num"
           data-line-number="871"
           id="L871" href="#L871">871</a><a class="file-line-num diff-line-num"
           data-line-number="872"
           id="L872" href="#L872">872</a><a class="file-line-num diff-line-num"
           data-line-number="873"
           id="L873" href="#L873">873</a><a class="file-line-num diff-line-num"
           data-line-number="874"
           id="L874" href="#L874">874</a><a class="file-line-num diff-line-num"
           data-line-number="875"
           id="L875" href="#L875">875</a><a class="file-line-num diff-line-num"
           data-line-number="876"
           id="L876" href="#L876">876</a><a class="file-line-num diff-line-num"
           data-line-number="877"
           id="L877" href="#L877">877</a><a class="file-line-num diff-line-num"
           data-line-number="878"
           id="L878" href="#L878">878</a><a class="file-line-num diff-line-num"
           data-line-number="879"
           id="L879" href="#L879">879</a><a class="file-line-num diff-line-num"
           data-line-number="880"
           id="L880" href="#L880">880</a><a class="file-line-num diff-line-num"
           data-line-number="881"
           id="L881" href="#L881">881</a><a class="file-line-num diff-line-num"
           data-line-number="882"
           id="L882" href="#L882">882</a><a class="file-line-num diff-line-num"
           data-line-number="883"
           id="L883" href="#L883">883</a><a class="file-line-num diff-line-num"
           data-line-number="884"
           id="L884" href="#L884">884</a><a class="file-line-num diff-line-num"
           data-line-number="885"
           id="L885" href="#L885">885</a><a class="file-line-num diff-line-num"
           data-line-number="886"
           id="L886" href="#L886">886</a><a class="file-line-num diff-line-num"
           data-line-number="887"
           id="L887" href="#L887">887</a><a class="file-line-num diff-line-num"
           data-line-number="888"
           id="L888" href="#L888">888</a><a class="file-line-num diff-line-num"
           data-line-number="889"
           id="L889" href="#L889">889</a><a class="file-line-num diff-line-num"
           data-line-number="890"
           id="L890" href="#L890">890</a><a class="file-line-num diff-line-num"
           data-line-number="891"
           id="L891" href="#L891">891</a><a class="file-line-num diff-line-num"
           data-line-number="892"
           id="L892" href="#L892">892</a><a class="file-line-num diff-line-num"
           data-line-number="893"
           id="L893" href="#L893">893</a><a class="file-line-num diff-line-num"
           data-line-number="894"
           id="L894" href="#L894">894</a><a class="file-line-num diff-line-num"
           data-line-number="895"
           id="L895" href="#L895">895</a><a class="file-line-num diff-line-num"
           data-line-number="896"
           id="L896" href="#L896">896</a><a class="file-line-num diff-line-num"
           data-line-number="897"
           id="L897" href="#L897">897</a><a class="file-line-num diff-line-num"
           data-line-number="898"
           id="L898" href="#L898">898</a><a class="file-line-num diff-line-num"
           data-line-number="899"
           id="L899" href="#L899">899</a><a class="file-line-num diff-line-num"
           data-line-number="900"
           id="L900" href="#L900">900</a><a class="file-line-num diff-line-num"
           data-line-number="901"
           id="L901" href="#L901">901</a><a class="file-line-num diff-line-num"
           data-line-number="902"
           id="L902" href="#L902">902</a><a class="file-line-num diff-line-num"
           data-line-number="903"
           id="L903" href="#L903">903</a><a class="file-line-num diff-line-num"
           data-line-number="904"
           id="L904" href="#L904">904</a><a class="file-line-num diff-line-num"
           data-line-number="905"
           id="L905" href="#L905">905</a><a class="file-line-num diff-line-num"
           data-line-number="906"
           id="L906" href="#L906">906</a><a class="file-line-num diff-line-num"
           data-line-number="907"
           id="L907" href="#L907">907</a><a class="file-line-num diff-line-num"
           data-line-number="908"
           id="L908" href="#L908">908</a><a class="file-line-num diff-line-num"
           data-line-number="909"
           id="L909" href="#L909">909</a><a class="file-line-num diff-line-num"
           data-line-number="910"
           id="L910" href="#L910">910</a><a class="file-line-num diff-line-num"
           data-line-number="911"
           id="L911" href="#L911">911</a><a class="file-line-num diff-line-num"
           data-line-number="912"
           id="L912" href="#L912">912</a><a class="file-line-num diff-line-num"
           data-line-number="913"
           id="L913" href="#L913">913</a><a class="file-line-num diff-line-num"
           data-line-number="914"
           id="L914" href="#L914">914</a><a class="file-line-num diff-line-num"
           data-line-number="915"
           id="L915" href="#L915">915</a><a class="file-line-num diff-line-num"
           data-line-number="916"
           id="L916" href="#L916">916</a><a class="file-line-num diff-line-num"
           data-line-number="917"
           id="L917" href="#L917">917</a><a class="file-line-num diff-line-num"
           data-line-number="918"
           id="L918" href="#L918">918</a><a class="file-line-num diff-line-num"
           data-line-number="919"
           id="L919" href="#L919">919</a><a class="file-line-num diff-line-num"
           data-line-number="920"
           id="L920" href="#L920">920</a><a class="file-line-num diff-line-num"
           data-line-number="921"
           id="L921" href="#L921">921</a><a class="file-line-num diff-line-num"
           data-line-number="922"
           id="L922" href="#L922">922</a><a class="file-line-num diff-line-num"
           data-line-number="923"
           id="L923" href="#L923">923</a><a class="file-line-num diff-line-num"
           data-line-number="924"
           id="L924" href="#L924">924</a><a class="file-line-num diff-line-num"
           data-line-number="925"
           id="L925" href="#L925">925</a><a class="file-line-num diff-line-num"
           data-line-number="926"
           id="L926" href="#L926">926</a><a class="file-line-num diff-line-num"
           data-line-number="927"
           id="L927" href="#L927">927</a><a class="file-line-num diff-line-num"
           data-line-number="928"
           id="L928" href="#L928">928</a><a class="file-line-num diff-line-num"
           data-line-number="929"
           id="L929" href="#L929">929</a><a class="file-line-num diff-line-num"
           data-line-number="930"
           id="L930" href="#L930">930</a><a class="file-line-num diff-line-num"
           data-line-number="931"
           id="L931" href="#L931">931</a><a class="file-line-num diff-line-num"
           data-line-number="932"
           id="L932" href="#L932">932</a><a class="file-line-num diff-line-num"
           data-line-number="933"
           id="L933" href="#L933">933</a><a class="file-line-num diff-line-num"
           data-line-number="934"
           id="L934" href="#L934">934</a><a class="file-line-num diff-line-num"
           data-line-number="935"
           id="L935" href="#L935">935</a><a class="file-line-num diff-line-num"
           data-line-number="936"
           id="L936" href="#L936">936</a><a class="file-line-num diff-line-num"
           data-line-number="937"
           id="L937" href="#L937">937</a><a class="file-line-num diff-line-num"
           data-line-number="938"
           id="L938" href="#L938">938</a><a class="file-line-num diff-line-num"
           data-line-number="939"
           id="L939" href="#L939">939</a><a class="file-line-num diff-line-num"
           data-line-number="940"
           id="L940" href="#L940">940</a><a class="file-line-num diff-line-num"
           data-line-number="941"
           id="L941" href="#L941">941</a><a class="file-line-num diff-line-num"
           data-line-number="942"
           id="L942" href="#L942">942</a><a class="file-line-num diff-line-num"
           data-line-number="943"
           id="L943" href="#L943">943</a><a class="file-line-num diff-line-num"
           data-line-number="944"
           id="L944" href="#L944">944</a><a class="file-line-num diff-line-num"
           data-line-number="945"
           id="L945" href="#L945">945</a><a class="file-line-num diff-line-num"
           data-line-number="946"
           id="L946" href="#L946">946</a><a class="file-line-num diff-line-num"
           data-line-number="947"
           id="L947" href="#L947">947</a><a class="file-line-num diff-line-num"
           data-line-number="948"
           id="L948" href="#L948">948</a><a class="file-line-num diff-line-num"
           data-line-number="949"
           id="L949" href="#L949">949</a><a class="file-line-num diff-line-num"
           data-line-number="950"
           id="L950" href="#L950">950</a><a class="file-line-num diff-line-num"
           data-line-number="951"
           id="L951" href="#L951">951</a><a class="file-line-num diff-line-num"
           data-line-number="952"
           id="L952" href="#L952">952</a><a class="file-line-num diff-line-num"
           data-line-number="953"
           id="L953" href="#L953">953</a><a class="file-line-num diff-line-num"
           data-line-number="954"
           id="L954" href="#L954">954</a><a class="file-line-num diff-line-num"
           data-line-number="955"
           id="L955" href="#L955">955</a><a class="file-line-num diff-line-num"
           data-line-number="956"
           id="L956" href="#L956">956</a><a class="file-line-num diff-line-num"
           data-line-number="957"
           id="L957" href="#L957">957</a><a class="file-line-num diff-line-num"
           data-line-number="958"
           id="L958" href="#L958">958</a><a class="file-line-num diff-line-num"
           data-line-number="959"
           id="L959" href="#L959">959</a><a class="file-line-num diff-line-num"
           data-line-number="960"
           id="L960" href="#L960">960</a><a class="file-line-num diff-line-num"
           data-line-number="961"
           id="L961" href="#L961">961</a><a class="file-line-num diff-line-num"
           data-line-number="962"
           id="L962" href="#L962">962</a><a class="file-line-num diff-line-num"
           data-line-number="963"
           id="L963" href="#L963">963</a><a class="file-line-num diff-line-num"
           data-line-number="964"
           id="L964" href="#L964">964</a><a class="file-line-num diff-line-num"
           data-line-number="965"
           id="L965" href="#L965">965</a><a class="file-line-num diff-line-num"
           data-line-number="966"
           id="L966" href="#L966">966</a><a class="file-line-num diff-line-num"
           data-line-number="967"
           id="L967" href="#L967">967</a><a class="file-line-num diff-line-num"
           data-line-number="968"
           id="L968" href="#L968">968</a><a class="file-line-num diff-line-num"
           data-line-number="969"
           id="L969" href="#L969">969</a><a class="file-line-num diff-line-num"
           data-line-number="970"
           id="L970" href="#L970">970</a><a class="file-line-num diff-line-num"
           data-line-number="971"
           id="L971" href="#L971">971</a><a class="file-line-num diff-line-num"
           data-line-number="972"
           id="L972" href="#L972">972</a><a class="file-line-num diff-line-num"
           data-line-number="973"
           id="L973" href="#L973">973</a><a class="file-line-num diff-line-num"
           data-line-number="974"
           id="L974" href="#L974">974</a><a class="file-line-num diff-line-num"
           data-line-number="975"
           id="L975" href="#L975">975</a><a class="file-line-num diff-line-num"
           data-line-number="976"
           id="L976" href="#L976">976</a><a class="file-line-num diff-line-num"
           data-line-number="977"
           id="L977" href="#L977">977</a><a class="file-line-num diff-line-num"
           data-line-number="978"
           id="L978" href="#L978">978</a><a class="file-line-num diff-line-num"
           data-line-number="979"
           id="L979" href="#L979">979</a><a class="file-line-num diff-line-num"
           data-line-number="980"
           id="L980" href="#L980">980</a><a class="file-line-num diff-line-num"
           data-line-number="981"
           id="L981" href="#L981">981</a><a class="file-line-num diff-line-num"
           data-line-number="982"
           id="L982" href="#L982">982</a><a class="file-line-num diff-line-num"
           data-line-number="983"
           id="L983" href="#L983">983</a><a class="file-line-num diff-line-num"
           data-line-number="984"
           id="L984" href="#L984">984</a><a class="file-line-num diff-line-num"
           data-line-number="985"
           id="L985" href="#L985">985</a><a class="file-line-num diff-line-num"
           data-line-number="986"
           id="L986" href="#L986">986</a><a class="file-line-num diff-line-num"
           data-line-number="987"
           id="L987" href="#L987">987</a><a class="file-line-num diff-line-num"
           data-line-number="988"
           id="L988" href="#L988">988</a><a class="file-line-num diff-line-num"
           data-line-number="989"
           id="L989" href="#L989">989</a><a class="file-line-num diff-line-num"
           data-line-number="990"
           id="L990" href="#L990">990</a><a class="file-line-num diff-line-num"
           data-line-number="991"
           id="L991" href="#L991">991</a><a class="file-line-num diff-line-num"
           data-line-number="992"
           id="L992" href="#L992">992</a><a class="file-line-num diff-line-num"
           data-line-number="993"
           id="L993" href="#L993">993</a><a class="file-line-num diff-line-num"
           data-line-number="994"
           id="L994" href="#L994">994</a><a class="file-line-num diff-line-num"
           data-line-number="995"
           id="L995" href="#L995">995</a><a class="file-line-num diff-line-num"
           data-line-number="996"
           id="L996" href="#L996">996</a><a class="file-line-num diff-line-num"
           data-line-number="997"
           id="L997" href="#L997">997</a><a class="file-line-num diff-line-num"
           data-line-number="998"
           id="L998" href="#L998">998</a><a class="file-line-num diff-line-num"
           data-line-number="999"
           id="L999" href="#L999">999</a><a class="file-line-num diff-line-num"
           data-line-number="1000"
           id="L1000" href="#L1000">1000</a><a class="file-line-num diff-line-num"
           data-line-number="1001"
           id="L1001" href="#L1001">1001</a><a class="file-line-num diff-line-num"
           data-line-number="1002"
           id="L1002" href="#L1002">1002</a><a class="file-line-num diff-line-num"
           data-line-number="1003"
           id="L1003" href="#L1003">1003</a><a class="file-line-num diff-line-num"
           data-line-number="1004"
           id="L1004" href="#L1004">1004</a><a class="file-line-num diff-line-num"
           data-line-number="1005"
           id="L1005" href="#L1005">1005</a><a class="file-line-num diff-line-num"
           data-line-number="1006"
           id="L1006" href="#L1006">1006</a><a class="file-line-num diff-line-num"
           data-line-number="1007"
           id="L1007" href="#L1007">1007</a><a class="file-line-num diff-line-num"
           data-line-number="1008"
           id="L1008" href="#L1008">1008</a><a class="file-line-num diff-line-num"
           data-line-number="1009"
           id="L1009" href="#L1009">1009</a><a class="file-line-num diff-line-num"
           data-line-number="1010"
           id="L1010" href="#L1010">1010</a><a class="file-line-num diff-line-num"
           data-line-number="1011"
           id="L1011" href="#L1011">1011</a><a class="file-line-num diff-line-num"
           data-line-number="1012"
           id="L1012" href="#L1012">1012</a><a class="file-line-num diff-line-num"
           data-line-number="1013"
           id="L1013" href="#L1013">1013</a><a class="file-line-num diff-line-num"
           data-line-number="1014"
           id="L1014" href="#L1014">1014</a><a class="file-line-num diff-line-num"
           data-line-number="1015"
           id="L1015" href="#L1015">1015</a><a class="file-line-num diff-line-num"
           data-line-number="1016"
           id="L1016" href="#L1016">1016</a><a class="file-line-num diff-line-num"
           data-line-number="1017"
           id="L1017" href="#L1017">1017</a><a class="file-line-num diff-line-num"
           data-line-number="1018"
           id="L1018" href="#L1018">1018</a><a class="file-line-num diff-line-num"
           data-line-number="1019"
           id="L1019" href="#L1019">1019</a><a class="file-line-num diff-line-num"
           data-line-number="1020"
           id="L1020" href="#L1020">1020</a><a class="file-line-num diff-line-num"
           data-line-number="1021"
           id="L1021" href="#L1021">1021</a><a class="file-line-num diff-line-num"
           data-line-number="1022"
           id="L1022" href="#L1022">1022</a><a class="file-line-num diff-line-num"
           data-line-number="1023"
           id="L1023" href="#L1023">1023</a><a class="file-line-num diff-line-num"
           data-line-number="1024"
           id="L1024" href="#L1024">1024</a><a class="file-line-num diff-line-num"
           data-line-number="1025"
           id="L1025" href="#L1025">1025</a><a class="file-line-num diff-line-num"
           data-line-number="1026"
           id="L1026" href="#L1026">1026</a><a class="file-line-num diff-line-num"
           data-line-number="1027"
           id="L1027" href="#L1027">1027</a><a class="file-line-num diff-line-num"
           data-line-number="1028"
           id="L1028" href="#L1028">1028</a><a class="file-line-num diff-line-num"
           data-line-number="1029"
           id="L1029" href="#L1029">1029</a><a class="file-line-num diff-line-num"
           data-line-number="1030"
           id="L1030" href="#L1030">1030</a><a class="file-line-num diff-line-num"
           data-line-number="1031"
           id="L1031" href="#L1031">1031</a><a class="file-line-num diff-line-num"
           data-line-number="1032"
           id="L1032" href="#L1032">1032</a><a class="file-line-num diff-line-num"
           data-line-number="1033"
           id="L1033" href="#L1033">1033</a><a class="file-line-num diff-line-num"
           data-line-number="1034"
           id="L1034" href="#L1034">1034</a><a class="file-line-num diff-line-num"
           data-line-number="1035"
           id="L1035" href="#L1035">1035</a><a class="file-line-num diff-line-num"
           data-line-number="1036"
           id="L1036" href="#L1036">1036</a>
    </div>
    <div class="blob-content"
         data-blob-id="5afbd23d0e021a57af5234311b7287d5ca25c727"
         data-path="src/main/java/main/repo/EmployeeRepo.java"
         data-qa-selector="file_content">
<pre class="code highlight">
<code>
<span class="line" lang="java" id="LC1"><span class="cm">/*</span></span><span class="line" lang="java" id="LC2"><span class="cm"> * Licensed to the Apache Software Foundation (ASF) under one or more</span></span><span class="line" lang="java" id="LC3"><span class="cm"> * contributor license agreements.  See the NOTICE file distributed with</span></span><span class="line" lang="java" id="LC4"><span class="cm"> * this work for additional information regarding copyright ownership.</span></span><span class="line" lang="java" id="LC5"><span class="cm"> * The ASF licenses this file to You under the Apache License, Version 2.0</span></span><span class="line" lang="java" id="LC6"><span class="cm"> * (the &quot;License&quot;); you may not use this file except in compliance with</span></span><span class="line" lang="java" id="LC7"><span class="cm"> * the License.  You may obtain a copy of the License at</span></span><span class="line" lang="java" id="LC8"><span class="cm"> *</span></span><span class="line" lang="java" id="LC9"><span class="cm"> *      http://www.apache.org/licenses/LICENSE-2.0</span></span><span class="line" lang="java" id="LC10"><span class="cm"> *</span></span><span class="line" lang="java" id="LC11"><span class="cm"> * Unless required by applicable law or agreed to in writing, software</span></span><span class="line" lang="java" id="LC12"><span class="cm"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><span class="line" lang="java" id="LC13"><span class="cm"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><span class="line" lang="java" id="LC14"><span class="cm"> * See the License for the specific language governing permissions and</span></span><span class="line" lang="java" id="LC15"><span class="cm"> * limitations under the License.</span></span><span class="line" lang="java" id="LC16"><span class="cm"> */</span></span><span class="line" lang="java" id="LC17"><span class="kn">package</span><span> </span><span>org.apache.commons.lang3.reflect</span><span>;</span></span><span class="line" lang="java" id="LC18"></span><span class="line" lang="java" id="LC19"><span class="kn">import</span><span> </span><span>java.lang.annotation.Annotation</span><span>;</span></span><span class="line" lang="java" id="LC20"><span class="kn">import</span><span> </span><span>java.lang.reflect.Array</span><span>;</span></span><span class="line" lang="java" id="LC21"><span class="kn">import</span><span> </span><span>java.lang.reflect.InvocationTargetException</span><span>;</span></span><span class="line" lang="java" id="LC22"><span class="kn">import</span><span> </span><span>java.lang.reflect.Method</span><span>;</span></span><span class="line" lang="java" id="LC23"><span class="kn">import</span><span> </span><span>java.lang.reflect.Modifier</span><span>;</span></span><span class="line" lang="java" id="LC24"><span class="kn">import</span><span> </span><span>java.lang.reflect.Type</span><span>;</span></span><span class="line" lang="java" id="LC25"><span class="kn">import</span><span> </span><span>java.lang.reflect.TypeVariable</span><span>;</span></span><span class="line" lang="java" id="LC26"><span class="kn">import</span><span> </span><span>java.util.ArrayList</span><span>;</span></span><span class="line" lang="java" id="LC27"><span class="kn">import</span><span> </span><span>java.util.Arrays</span><span>;</span></span><span class="line" lang="java" id="LC28"><span class="kn">import</span><span> </span><span>java.util.Comparator</span><span>;</span></span><span class="line" lang="java" id="LC29"><span class="kn">import</span><span> </span><span>java.util.Iterator</span><span>;</span></span><span class="line" lang="java" id="LC30"><span class="kn">import</span><span> </span><span>java.util.LinkedHashSet</span><span>;</span></span><span class="line" lang="java" id="LC31"><span class="kn">import</span><span> </span><span>java.util.List</span><span>;</span></span><span class="line" lang="java" id="LC32"><span class="kn">import</span><span> </span><span>java.util.Map</span><span>;</span></span><span class="line" lang="java" id="LC33"><span class="kn">import</span><span> </span><span>java.util.Set</span><span>;</span></span><span class="line" lang="java" id="LC34"><span class="kn">import</span><span> </span><span>java.util.TreeMap</span><span>;</span></span><span class="line" lang="java" id="LC35"><span class="kn">import</span><span> </span><span>java.util.stream.Collectors</span><span>;</span></span><span class="line" lang="java" id="LC36"></span><span class="line" lang="java" id="LC37"><span class="kn">import</span><span> </span><span>org.apache.commons.lang3.ArrayUtils</span><span>;</span></span><span class="line" lang="java" id="LC38"><span class="kn">import</span><span> </span><span>org.apache.commons.lang3.ClassUtils</span><span>;</span></span><span class="line" lang="java" id="LC39"><span class="kn">import</span><span> </span><span>org.apache.commons.lang3.ClassUtils.Interfaces</span><span>;</span></span><span class="line" lang="java" id="LC40"><span class="kn">import</span><span> </span><span>org.apache.commons.lang3.Validate</span><span>;</span></span><span class="line" lang="java" id="LC41"></span><span class="line" lang="java" id="LC42"><span class="kn">import</span><span> </span><span class="kd">static</span><span> </span><span>java.util.stream.Collectors.toList</span><span>;</span></span><span class="line" lang="java" id="LC43"></span><span class="line" lang="java" id="LC44"><span class="cm">/**</span></span><span class="line" lang="java" id="LC45"><span class="cm"> * &lt;p&gt;Utility reflection methods focused on {@link Method}s, originally from Commons BeanUtils.</span></span><span class="line" lang="java" id="LC46"><span class="cm"> * Differences from the BeanUtils version may be noted, especially where similar functionality</span></span><span class="line" lang="java" id="LC47"><span class="cm"> * already existed within Lang.</span></span><span class="line" lang="java" id="LC48"><span class="cm"> * &lt;/p&gt;</span></span><span class="line" lang="java" id="LC49"><span class="cm"> *</span></span><span class="line" lang="java" id="LC50"><span class="cm"> * &lt;h2&gt;Known Limitations&lt;/h2&gt;</span></span><span class="line" lang="java" id="LC51"><span class="cm"> * &lt;h3&gt;Accessing Public Methods In A Default Access Superclass&lt;/h3&gt;</span></span><span class="line" lang="java" id="LC52"><span class="cm"> * &lt;p&gt;There is an issue when invoking {@code public} methods contained in a default access superclass on JREs prior to 1.4.</span></span><span class="line" lang="java" id="LC53"><span class="cm"> * Reflection locates these methods fine and correctly assigns them as {@code public}.</span></span><span class="line" lang="java" id="LC54"><span class="cm"> * However, an {@link IllegalAccessException} is thrown if the method is invoked.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC55"><span class="cm"> *</span></span><span class="line" lang="java" id="LC56"><span class="cm"> * &lt;p&gt;{@link MethodUtils} contains a workaround for this situation.</span></span><span class="line" lang="java" id="LC57"><span class="cm"> * It will attempt to call {@link java.lang.reflect.AccessibleObject#setAccessible(boolean)} on this method.</span></span><span class="line" lang="java" id="LC58"><span class="cm"> * If this call succeeds, then the method can be invoked as normal.</span></span><span class="line" lang="java" id="LC59"><span class="cm"> * This call will only succeed when the application has sufficient security privileges.</span></span><span class="line" lang="java" id="LC60"><span class="cm"> * If this call fails then the method may fail.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC61"><span class="cm"> *</span></span><span class="line" lang="java" id="LC62"><span class="cm"> * @since 2.5</span></span><span class="line" lang="java" id="LC63"><span class="cm"> */</span></span><span class="line" lang="java" id="LC64"><span class="kd">public</span><span> </span><span class="kd">class</span><span> </span><span class="nc">MethodUtils</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC65"></span><span class="line" lang="java" id="LC66"><span>    </span><span class="kd">private</span><span> </span><span class="kd">static</span><span> </span><span class="kd">final</span><span> </span><span>Comparator</span><span>&lt;</span><span>Method</span><span>&gt;</span><span> </span><span>METHOD_BY_SIGNATURE</span><span> </span><span>=</span><span> </span><span>Comparator</span><span>.</span><span>comparing</span><span>(</span><span>Method</span><span>:</span><span>:</span><span>toString</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC67"></span><span class="line" lang="java" id="LC68"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC69"><span class="cm">     * &lt;p&gt;{@link MethodUtils} instances should NOT be constructed in standard programming.</span></span><span class="line" lang="java" id="LC70"><span class="cm">     * Instead, the class should be used as</span></span><span class="line" lang="java" id="LC71"><span class="cm">     * {@code MethodUtils.getAccessibleMethod(method)}.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC72"><span class="cm">     *</span></span><span class="line" lang="java" id="LC73"><span class="cm">     * &lt;p&gt;This constructor is {@code public} to permit tools that require a JavaBean</span></span><span class="line" lang="java" id="LC74"><span class="cm">     * instance to operate.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC75"><span class="cm">     */</span></span><span class="line" lang="java" id="LC76"><span>    </span><span class="kd">public</span><span> </span><span>MethodUtils</span><span>(</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC77"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC78"></span><span class="line" lang="java" id="LC79"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC80"><span class="cm">     * &lt;p&gt;Invokes a named method without parameters.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC81"><span class="cm">     *</span></span><span class="line" lang="java" id="LC82"><span class="cm">     * &lt;p&gt;This method delegates the method search to {@link #getMatchingAccessibleMethod(Class, String, Class[])}.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC83"><span class="cm">     *</span></span><span class="line" lang="java" id="LC84"><span class="cm">     * &lt;p&gt;This is a convenient wrapper for</span></span><span class="line" lang="java" id="LC85"><span class="cm">     * {@link #invokeMethod(Object object, String methodName, Object[] args, Class[] parameterTypes)}.</span></span><span class="line" lang="java" id="LC86"><span class="cm">     * &lt;/p&gt;</span></span><span class="line" lang="java" id="LC87"><span class="cm">     *</span></span><span class="line" lang="java" id="LC88"><span class="cm">     * @param object invoke method on this object</span></span><span class="line" lang="java" id="LC89"><span class="cm">     * @param methodName get method with this name</span></span><span class="line" lang="java" id="LC90"><span class="cm">     * @return The value returned by the invoked method</span></span><span class="line" lang="java" id="LC91"><span class="cm">     *</span></span><span class="line" lang="java" id="LC92"><span class="cm">     * @throws NoSuchMethodException if there is no such accessible method</span></span><span class="line" lang="java" id="LC93"><span class="cm">     * @throws InvocationTargetException wraps an exception thrown by the method invoked</span></span><span class="line" lang="java" id="LC94"><span class="cm">     * @throws IllegalAccessException if the requested method is not accessible via reflection</span></span><span class="line" lang="java" id="LC95"><span class="cm">     *</span></span><span class="line" lang="java" id="LC96"><span class="cm">     *  @since 3.4</span></span><span class="line" lang="java" id="LC97"><span class="cm">     */</span></span><span class="line" lang="java" id="LC98"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>Object</span><span> </span><span>invokeMethod</span><span>(</span><span class="kd">final</span><span> </span><span>Object</span><span> </span><span>object</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>methodName</span><span>)</span><span> </span><span class="kd">throws</span><span> </span><span>NoSuchMethodException</span><span>,</span></span><span class="line" lang="java" id="LC99"><span>            </span><span>IllegalAccessException</span><span>,</span><span> </span><span>InvocationTargetException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC100"><span>        </span><span class="k">return</span><span> </span><span>invokeMethod</span><span>(</span><span>object</span><span>,</span><span> </span><span>methodName</span><span>,</span><span> </span><span>ArrayUtils</span><span>.</span><span>EMPTY_OBJECT_ARRAY</span><span>,</span><span> </span><span class="kc">null</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC101"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC102"></span><span class="line" lang="java" id="LC103"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC104"><span class="cm">     * &lt;p&gt;Invokes a named method without parameters.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC105"><span class="cm">     *</span></span><span class="line" lang="java" id="LC106"><span class="cm">     * &lt;p&gt;This is a convenient wrapper for</span></span><span class="line" lang="java" id="LC107"><span class="cm">     * {@link #invokeMethod(Object object, boolean forceAccess, String methodName, Object[] args, Class[] parameterTypes)}.</span></span><span class="line" lang="java" id="LC108"><span class="cm">     * &lt;/p&gt;</span></span><span class="line" lang="java" id="LC109"><span class="cm">     *</span></span><span class="line" lang="java" id="LC110"><span class="cm">     * @param object invoke method on this object</span></span><span class="line" lang="java" id="LC111"><span class="cm">     * @param forceAccess force access to invoke method even if it&#39;s not accessible</span></span><span class="line" lang="java" id="LC112"><span class="cm">     * @param methodName get method with this name</span></span><span class="line" lang="java" id="LC113"><span class="cm">     * @return The value returned by the invoked method</span></span><span class="line" lang="java" id="LC114"><span class="cm">     *</span></span><span class="line" lang="java" id="LC115"><span class="cm">     * @throws NoSuchMethodException if there is no such accessible method</span></span><span class="line" lang="java" id="LC116"><span class="cm">     * @throws InvocationTargetException wraps an exception thrown by the method invoked</span></span><span class="line" lang="java" id="LC117"><span class="cm">     * @throws IllegalAccessException if the requested method is not accessible via reflection</span></span><span class="line" lang="java" id="LC118"><span class="cm">     *</span></span><span class="line" lang="java" id="LC119"><span class="cm">     * @since 3.5</span></span><span class="line" lang="java" id="LC120"><span class="cm">     */</span></span><span class="line" lang="java" id="LC121"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>Object</span><span> </span><span>invokeMethod</span><span>(</span><span class="kd">final</span><span> </span><span>Object</span><span> </span><span>object</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span class="kt">boolean</span><span> </span><span>forceAccess</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>methodName</span><span>)</span></span><span class="line" lang="java" id="LC122"><span>            </span><span class="kd">throws</span><span> </span><span>NoSuchMethodException</span><span>,</span><span> </span><span>IllegalAccessException</span><span>,</span><span> </span><span>InvocationTargetException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC123"><span>        </span><span class="k">return</span><span> </span><span>invokeMethod</span><span>(</span><span>object</span><span>,</span><span> </span><span>forceAccess</span><span>,</span><span> </span><span>methodName</span><span>,</span><span> </span><span>ArrayUtils</span><span>.</span><span>EMPTY_OBJECT_ARRAY</span><span>,</span><span> </span><span class="kc">null</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC124"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC125"></span><span class="line" lang="java" id="LC126"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC127"><span class="cm">     * &lt;p&gt;Invokes a named method whose parameter type matches the object type.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC128"><span class="cm">     *</span></span><span class="line" lang="java" id="LC129"><span class="cm">     * &lt;p&gt;This method delegates the method search to {@link #getMatchingAccessibleMethod(Class, String, Class[])}.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC130"><span class="cm">     *</span></span><span class="line" lang="java" id="LC131"><span class="cm">     * &lt;p&gt;This method supports calls to methods taking primitive parameters</span></span><span class="line" lang="java" id="LC132"><span class="cm">     * via passing in wrapping classes. So, for example, a {@code Boolean} object</span></span><span class="line" lang="java" id="LC133"><span class="cm">     * would match a {@code boolean} primitive.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC134"><span class="cm">     *</span></span><span class="line" lang="java" id="LC135"><span class="cm">     * &lt;p&gt;This is a convenient wrapper for</span></span><span class="line" lang="java" id="LC136"><span class="cm">     * {@link #invokeMethod(Object object, String methodName, Object[] args, Class[] parameterTypes)}.</span></span><span class="line" lang="java" id="LC137"><span class="cm">     * &lt;/p&gt;</span></span><span class="line" lang="java" id="LC138"><span class="cm">     *</span></span><span class="line" lang="java" id="LC139"><span class="cm">     * @param object invoke method on this object</span></span><span class="line" lang="java" id="LC140"><span class="cm">     * @param methodName get method with this name</span></span><span class="line" lang="java" id="LC141"><span class="cm">     * @param args use these arguments - treat null as empty array</span></span><span class="line" lang="java" id="LC142"><span class="cm">     * @return The value returned by the invoked method</span></span><span class="line" lang="java" id="LC143"><span class="cm">     *</span></span><span class="line" lang="java" id="LC144"><span class="cm">     * @throws NoSuchMethodException if there is no such accessible method</span></span><span class="line" lang="java" id="LC145"><span class="cm">     * @throws InvocationTargetException wraps an exception thrown by the method invoked</span></span><span class="line" lang="java" id="LC146"><span class="cm">     * @throws IllegalAccessException if the requested method is not accessible via reflection</span></span><span class="line" lang="java" id="LC147"><span class="cm">     */</span></span><span class="line" lang="java" id="LC148"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>Object</span><span> </span><span>invokeMethod</span><span>(</span><span class="kd">final</span><span> </span><span>Object</span><span> </span><span>object</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>methodName</span><span>,</span></span><span class="line" lang="java" id="LC149"><span>            </span><span>Object</span><span>.</span><span>.</span><span>.</span><span> </span><span>args</span><span>)</span><span> </span><span class="kd">throws</span><span> </span><span>NoSuchMethodException</span><span>,</span></span><span class="line" lang="java" id="LC150"><span>            </span><span>IllegalAccessException</span><span>,</span><span> </span><span>InvocationTargetException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC151"><span>        </span><span>args</span><span> </span><span>=</span><span> </span><span>ArrayUtils</span><span>.</span><span>nullToEmpty</span><span>(</span><span>args</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC152"><span>        </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>[</span><span>]</span><span> </span><span>parameterTypes</span><span> </span><span>=</span><span> </span><span>ClassUtils</span><span>.</span><span>toClass</span><span>(</span><span>args</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC153"><span>        </span><span class="k">return</span><span> </span><span>invokeMethod</span><span>(</span><span>object</span><span>,</span><span> </span><span>methodName</span><span>,</span><span> </span><span>args</span><span>,</span><span> </span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC154"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC155"></span><span class="line" lang="java" id="LC156"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC157"><span class="cm">     * &lt;p&gt;Invokes a named method whose parameter type matches the object type.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC158"><span class="cm">     *</span></span><span class="line" lang="java" id="LC159"><span class="cm">     * &lt;p&gt;This method supports calls to methods taking primitive parameters</span></span><span class="line" lang="java" id="LC160"><span class="cm">     * via passing in wrapping classes. So, for example, a {@code Boolean} object</span></span><span class="line" lang="java" id="LC161"><span class="cm">     * would match a {@code boolean} primitive.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC162"><span class="cm">     *</span></span><span class="line" lang="java" id="LC163"><span class="cm">     * &lt;p&gt;This is a convenient wrapper for</span></span><span class="line" lang="java" id="LC164"><span class="cm">     * {@link #invokeMethod(Object object, boolean forceAccess, String methodName, Object[] args, Class[] parameterTypes)}.</span></span><span class="line" lang="java" id="LC165"><span class="cm">     * &lt;/p&gt;</span></span><span class="line" lang="java" id="LC166"><span class="cm">     *</span></span><span class="line" lang="java" id="LC167"><span class="cm">     * @param object invoke method on this object</span></span><span class="line" lang="java" id="LC168"><span class="cm">     * @param forceAccess force access to invoke method even if it&#39;s not accessible</span></span><span class="line" lang="java" id="LC169"><span class="cm">     * @param methodName get method with this name</span></span><span class="line" lang="java" id="LC170"><span class="cm">     * @param args use these arguments - treat null as empty array</span></span><span class="line" lang="java" id="LC171"><span class="cm">     * @return The value returned by the invoked method</span></span><span class="line" lang="java" id="LC172"><span class="cm">     *</span></span><span class="line" lang="java" id="LC173"><span class="cm">     * @throws NoSuchMethodException if there is no such accessible method</span></span><span class="line" lang="java" id="LC174"><span class="cm">     * @throws InvocationTargetException wraps an exception thrown by the method invoked</span></span><span class="line" lang="java" id="LC175"><span class="cm">     * @throws IllegalAccessException if the requested method is not accessible via reflection</span></span><span class="line" lang="java" id="LC176"><span class="cm">     *</span></span><span class="line" lang="java" id="LC177"><span class="cm">     * @since 3.5</span></span><span class="line" lang="java" id="LC178"><span class="cm">     */</span></span><span class="line" lang="java" id="LC179"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>Object</span><span> </span><span>invokeMethod</span><span>(</span><span class="kd">final</span><span> </span><span>Object</span><span> </span><span>object</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span class="kt">boolean</span><span> </span><span>forceAccess</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>methodName</span><span>,</span></span><span class="line" lang="java" id="LC180"><span>            </span><span>Object</span><span>.</span><span>.</span><span>.</span><span> </span><span>args</span><span>)</span><span> </span><span class="kd">throws</span><span> </span><span>NoSuchMethodException</span><span>,</span></span><span class="line" lang="java" id="LC181"><span>            </span><span>IllegalAccessException</span><span>,</span><span> </span><span>InvocationTargetException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC182"><span>        </span><span>args</span><span> </span><span>=</span><span> </span><span>ArrayUtils</span><span>.</span><span>nullToEmpty</span><span>(</span><span>args</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC183"><span>        </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>[</span><span>]</span><span> </span><span>parameterTypes</span><span> </span><span>=</span><span> </span><span>ClassUtils</span><span>.</span><span>toClass</span><span>(</span><span>args</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC184"><span>        </span><span class="k">return</span><span> </span><span>invokeMethod</span><span>(</span><span>object</span><span>,</span><span> </span><span>forceAccess</span><span>,</span><span> </span><span>methodName</span><span>,</span><span> </span><span>args</span><span>,</span><span> </span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC185"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC186"></span><span class="line" lang="java" id="LC187"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC188"><span class="cm">     * &lt;p&gt;Invokes a named method whose parameter type matches the object type.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC189"><span class="cm">     *</span></span><span class="line" lang="java" id="LC190"><span class="cm">     * &lt;p&gt;This method supports calls to methods taking primitive parameters</span></span><span class="line" lang="java" id="LC191"><span class="cm">     * via passing in wrapping classes. So, for example, a {@code Boolean} object</span></span><span class="line" lang="java" id="LC192"><span class="cm">     * would match a {@code boolean} primitive.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC193"><span class="cm">     *</span></span><span class="line" lang="java" id="LC194"><span class="cm">     * @param object invoke method on this object</span></span><span class="line" lang="java" id="LC195"><span class="cm">     * @param forceAccess force access to invoke method even if it&#39;s not accessible</span></span><span class="line" lang="java" id="LC196"><span class="cm">     * @param methodName get method with this name</span></span><span class="line" lang="java" id="LC197"><span class="cm">     * @param args use these arguments - treat null as empty array</span></span><span class="line" lang="java" id="LC198"><span class="cm">     * @param parameterTypes match these parameters - treat null as empty array</span></span><span class="line" lang="java" id="LC199"><span class="cm">     * @return The value returned by the invoked method</span></span><span class="line" lang="java" id="LC200"><span class="cm">     *</span></span><span class="line" lang="java" id="LC201"><span class="cm">     * @throws NoSuchMethodException if there is no such accessible method</span></span><span class="line" lang="java" id="LC202"><span class="cm">     * @throws InvocationTargetException wraps an exception thrown by the method invoked</span></span><span class="line" lang="java" id="LC203"><span class="cm">     * @throws IllegalAccessException if the requested method is not accessible via reflection</span></span><span class="line" lang="java" id="LC204"><span class="cm">     * @since 3.5</span></span><span class="line" lang="java" id="LC205"><span class="cm">     */</span></span><span class="line" lang="java" id="LC206"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>Object</span><span> </span><span>invokeMethod</span><span>(</span><span class="kd">final</span><span> </span><span>Object</span><span> </span><span>object</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span class="kt">boolean</span><span> </span><span>forceAccess</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>methodName</span><span>,</span></span><span class="line" lang="java" id="LC207"><span>            </span><span>Object</span><span>[</span><span>]</span><span> </span><span>args</span><span>,</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>[</span><span>]</span><span> </span><span>parameterTypes</span><span>)</span></span><span class="line" lang="java" id="LC208"><span>            </span><span class="kd">throws</span><span> </span><span>NoSuchMethodException</span><span>,</span><span> </span><span>IllegalAccessException</span><span>,</span><span> </span><span>InvocationTargetException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC209"><span>        </span><span>parameterTypes</span><span> </span><span>=</span><span> </span><span>ArrayUtils</span><span>.</span><span>nullToEmpty</span><span>(</span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC210"><span>        </span><span>args</span><span> </span><span>=</span><span> </span><span>ArrayUtils</span><span>.</span><span>nullToEmpty</span><span>(</span><span>args</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC211"></span><span class="line" lang="java" id="LC212"><span>        </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>messagePrefix</span><span>;</span></span><span class="line" lang="java" id="LC213"><span>        </span><span>Method</span><span> </span><span>method</span><span> </span><span>=</span><span> </span><span class="kc">null</span><span>;</span></span><span class="line" lang="java" id="LC214"></span><span class="line" lang="java" id="LC215"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>forceAccess</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC216"><span>            </span><span>messagePrefix</span><span> </span><span>=</span><span> </span><span class="s">&quot;No such method: &quot;</span><span>;</span></span><span class="line" lang="java" id="LC217"><span>            </span><span>method</span><span> </span><span>=</span><span> </span><span>getMatchingMethod</span><span>(</span><span>object</span><span>.</span><span>getClass</span><span>(</span><span>)</span><span>,</span></span><span class="line" lang="java" id="LC218"><span>                    </span><span>methodName</span><span>,</span><span> </span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC219"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>method</span><span> </span><span>!=</span><span> </span><span class="kc">null</span><span> </span><span>&amp;&amp;</span><span> </span><span>!</span><span>method</span><span>.</span><span>isAccessible</span><span>(</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC220"><span>                </span><span>method</span><span>.</span><span>setAccessible</span><span>(</span><span class="kc">true</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC221"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC222"><span>        </span><span>}</span><span> </span><span>else</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC223"><span>            </span><span>messagePrefix</span><span> </span><span>=</span><span> </span><span class="s">&quot;No such accessible method: &quot;</span><span>;</span></span><span class="line" lang="java" id="LC224"><span>            </span><span>method</span><span> </span><span>=</span><span> </span><span>getMatchingAccessibleMethod</span><span>(</span><span>object</span><span>.</span><span>getClass</span><span>(</span><span>)</span><span>,</span></span><span class="line" lang="java" id="LC225"><span>                    </span><span>methodName</span><span>,</span><span> </span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC226"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC227"></span><span class="line" lang="java" id="LC228"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>method</span><span> </span><span>==</span><span> </span><span class="kc">null</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC229"><span>            </span><span class="k">throw</span><span> </span><span class="k">new</span><span> </span><span>NoSuchMethodException</span><span>(</span><span>messagePrefix</span></span><span class="line" lang="java" id="LC230"><span>                    </span><span>+</span><span> </span><span>methodName</span><span> </span><span>+</span><span> </span><span class="s">&quot;() on object: &quot;</span></span><span class="line" lang="java" id="LC231"><span>                    </span><span>+</span><span> </span><span>object</span><span>.</span><span>getClass</span><span>(</span><span>)</span><span>.</span><span>getName</span><span>(</span><span>)</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC232"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC233"><span>        </span><span>args</span><span> </span><span>=</span><span> </span><span>toVarArgs</span><span>(</span><span>method</span><span>,</span><span> </span><span>args</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC234"></span><span class="line" lang="java" id="LC235"><span>        </span><span class="k">return</span><span> </span><span>method</span><span>.</span><span>invoke</span><span>(</span><span>object</span><span>,</span><span> </span><span>args</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC236"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC237"></span><span class="line" lang="java" id="LC238"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC239"><span class="cm">     * &lt;p&gt;Invokes a named method whose parameter type matches the object type.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC240"><span class="cm">     *</span></span><span class="line" lang="java" id="LC241"><span class="cm">     * &lt;p&gt;This method delegates the method search to {@link #getMatchingAccessibleMethod(Class, String, Class[])}.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC242"><span class="cm">     *</span></span><span class="line" lang="java" id="LC243"><span class="cm">     * &lt;p&gt;This method supports calls to methods taking primitive parameters</span></span><span class="line" lang="java" id="LC244"><span class="cm">     * via passing in wrapping classes. So, for example, a {@code Boolean} object</span></span><span class="line" lang="java" id="LC245"><span class="cm">     * would match a {@code boolean} primitive.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC246"><span class="cm">     *</span></span><span class="line" lang="java" id="LC247"><span class="cm">     * @param object invoke method on this object</span></span><span class="line" lang="java" id="LC248"><span class="cm">     * @param methodName get method with this name</span></span><span class="line" lang="java" id="LC249"><span class="cm">     * @param args use these arguments - treat null as empty array</span></span><span class="line" lang="java" id="LC250"><span class="cm">     * @param parameterTypes match these parameters - treat null as empty array</span></span><span class="line" lang="java" id="LC251"><span class="cm">     * @return The value returned by the invoked method</span></span><span class="line" lang="java" id="LC252"><span class="cm">     *</span></span><span class="line" lang="java" id="LC253"><span class="cm">     * @throws NoSuchMethodException if there is no such accessible method</span></span><span class="line" lang="java" id="LC254"><span class="cm">     * @throws InvocationTargetException wraps an exception thrown by the method invoked</span></span><span class="line" lang="java" id="LC255"><span class="cm">     * @throws IllegalAccessException if the requested method is not accessible via reflection</span></span><span class="line" lang="java" id="LC256"><span class="cm">     */</span></span><span class="line" lang="java" id="LC257"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>Object</span><span> </span><span>invokeMethod</span><span>(</span><span class="kd">final</span><span> </span><span>Object</span><span> </span><span>object</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>methodName</span><span>,</span></span><span class="line" lang="java" id="LC258"><span>            </span><span class="kd">final</span><span> </span><span>Object</span><span>[</span><span>]</span><span> </span><span>args</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>[</span><span>]</span><span> </span><span>parameterTypes</span><span>)</span></span><span class="line" lang="java" id="LC259"><span>            </span><span class="kd">throws</span><span> </span><span>NoSuchMethodException</span><span>,</span><span> </span><span>IllegalAccessException</span><span>,</span></span><span class="line" lang="java" id="LC260"><span>            </span><span>InvocationTargetException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC261"><span>        </span><span class="k">return</span><span> </span><span>invokeMethod</span><span>(</span><span>object</span><span>,</span><span> </span><span class="kc">false</span><span>,</span><span> </span><span>methodName</span><span>,</span><span> </span><span>args</span><span>,</span><span> </span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC262"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC263"></span><span class="line" lang="java" id="LC264"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC265"><span class="cm">     * &lt;p&gt;Invokes a method whose parameter types match exactly the object</span></span><span class="line" lang="java" id="LC266"><span class="cm">     * types.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC267"><span class="cm">     *</span></span><span class="line" lang="java" id="LC268"><span class="cm">     * &lt;p&gt;This uses reflection to invoke the method obtained from a call to</span></span><span class="line" lang="java" id="LC269"><span class="cm">     * {@link #getAccessibleMethod}(Class, String, Class[])}.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC270"><span class="cm">     *</span></span><span class="line" lang="java" id="LC271"><span class="cm">     * @param object invoke method on this object</span></span><span class="line" lang="java" id="LC272"><span class="cm">     * @param methodName get method with this name</span></span><span class="line" lang="java" id="LC273"><span class="cm">     * @return The value returned by the invoked method</span></span><span class="line" lang="java" id="LC274"><span class="cm">     *</span></span><span class="line" lang="java" id="LC275"><span class="cm">     * @throws NoSuchMethodException if there is no such accessible method</span></span><span class="line" lang="java" id="LC276"><span class="cm">     * @throws InvocationTargetException wraps an exception thrown by the</span></span><span class="line" lang="java" id="LC277"><span class="cm">     *  method invoked</span></span><span class="line" lang="java" id="LC278"><span class="cm">     * @throws IllegalAccessException if the requested method is not accessible</span></span><span class="line" lang="java" id="LC279"><span class="cm">     *  via reflection</span></span><span class="line" lang="java" id="LC280"><span class="cm">     *</span></span><span class="line" lang="java" id="LC281"><span class="cm">     * @since 3.4</span></span><span class="line" lang="java" id="LC282"><span class="cm">     */</span></span><span class="line" lang="java" id="LC283"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>Object</span><span> </span><span>invokeExactMethod</span><span>(</span><span class="kd">final</span><span> </span><span>Object</span><span> </span><span>object</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>methodName</span><span>)</span><span> </span><span class="kd">throws</span><span> </span><span>NoSuchMethodException</span><span>,</span></span><span class="line" lang="java" id="LC284"><span>            </span><span>IllegalAccessException</span><span>,</span><span> </span><span>InvocationTargetException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC285"><span>        </span><span class="k">return</span><span> </span><span>invokeExactMethod</span><span>(</span><span>object</span><span>,</span><span> </span><span>methodName</span><span>,</span><span> </span><span>ArrayUtils</span><span>.</span><span>EMPTY_OBJECT_ARRAY</span><span>,</span><span> </span><span class="kc">null</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC286"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC287"></span><span class="line" lang="java" id="LC288"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC289"><span class="cm">     * &lt;p&gt;Invokes a method with no parameters.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC290"><span class="cm">     *</span></span><span class="line" lang="java" id="LC291"><span class="cm">     * &lt;p&gt;This uses reflection to invoke the method obtained from a call to</span></span><span class="line" lang="java" id="LC292"><span class="cm">     * {@link #getAccessibleMethod}(Class, String, Class[])}.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC293"><span class="cm">     *</span></span><span class="line" lang="java" id="LC294"><span class="cm">     * @param object invoke method on this object</span></span><span class="line" lang="java" id="LC295"><span class="cm">     * @param methodName get method with this name</span></span><span class="line" lang="java" id="LC296"><span class="cm">     * @param args use these arguments - treat null as empty array</span></span><span class="line" lang="java" id="LC297"><span class="cm">     * @return The value returned by the invoked method</span></span><span class="line" lang="java" id="LC298"><span class="cm">     *</span></span><span class="line" lang="java" id="LC299"><span class="cm">     * @throws NoSuchMethodException if there is no such accessible method</span></span><span class="line" lang="java" id="LC300"><span class="cm">     * @throws InvocationTargetException wraps an exception thrown by the</span></span><span class="line" lang="java" id="LC301"><span class="cm">     *  method invoked</span></span><span class="line" lang="java" id="LC302"><span class="cm">     * @throws IllegalAccessException if the requested method is not accessible</span></span><span class="line" lang="java" id="LC303"><span class="cm">     *  via reflection</span></span><span class="line" lang="java" id="LC304"><span class="cm">     */</span></span><span class="line" lang="java" id="LC305"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>Object</span><span> </span><span>invokeExactMethod</span><span>(</span><span class="kd">final</span><span> </span><span>Object</span><span> </span><span>object</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>methodName</span><span>,</span></span><span class="line" lang="java" id="LC306"><span>            </span><span>Object</span><span>.</span><span>.</span><span>.</span><span> </span><span>args</span><span>)</span><span> </span><span class="kd">throws</span><span> </span><span>NoSuchMethodException</span><span>,</span></span><span class="line" lang="java" id="LC307"><span>            </span><span>IllegalAccessException</span><span>,</span><span> </span><span>InvocationTargetException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC308"><span>        </span><span>args</span><span> </span><span>=</span><span> </span><span>ArrayUtils</span><span>.</span><span>nullToEmpty</span><span>(</span><span>args</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC309"><span>        </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>[</span><span>]</span><span> </span><span>parameterTypes</span><span> </span><span>=</span><span> </span><span>ClassUtils</span><span>.</span><span>toClass</span><span>(</span><span>args</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC310"><span>        </span><span class="k">return</span><span> </span><span>invokeExactMethod</span><span>(</span><span>object</span><span>,</span><span> </span><span>methodName</span><span>,</span><span> </span><span>args</span><span>,</span><span> </span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC311"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC312"></span><span class="line" lang="java" id="LC313"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC314"><span class="cm">     * &lt;p&gt;Invokes a method whose parameter types match exactly the parameter</span></span><span class="line" lang="java" id="LC315"><span class="cm">     * types given.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC316"><span class="cm">     *</span></span><span class="line" lang="java" id="LC317"><span class="cm">     * &lt;p&gt;This uses reflection to invoke the method obtained from a call to</span></span><span class="line" lang="java" id="LC318"><span class="cm">     * {@link #getAccessibleMethod(Class, String, Class[])}.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC319"><span class="cm">     *</span></span><span class="line" lang="java" id="LC320"><span class="cm">     * @param object invoke method on this object</span></span><span class="line" lang="java" id="LC321"><span class="cm">     * @param methodName get method with this name</span></span><span class="line" lang="java" id="LC322"><span class="cm">     * @param args use these arguments - treat null as empty array</span></span><span class="line" lang="java" id="LC323"><span class="cm">     * @param parameterTypes match these parameters - treat {@code null} as empty array</span></span><span class="line" lang="java" id="LC324"><span class="cm">     * @return The value returned by the invoked method</span></span><span class="line" lang="java" id="LC325"><span class="cm">     *</span></span><span class="line" lang="java" id="LC326"><span class="cm">     * @throws NoSuchMethodException if there is no such accessible method</span></span><span class="line" lang="java" id="LC327"><span class="cm">     * @throws InvocationTargetException wraps an exception thrown by the</span></span><span class="line" lang="java" id="LC328"><span class="cm">     *  method invoked</span></span><span class="line" lang="java" id="LC329"><span class="cm">     * @throws IllegalAccessException if the requested method is not accessible</span></span><span class="line" lang="java" id="LC330"><span class="cm">     *  via reflection</span></span><span class="line" lang="java" id="LC331"><span class="cm">     */</span></span><span class="line" lang="java" id="LC332"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>Object</span><span> </span><span>invokeExactMethod</span><span>(</span><span class="kd">final</span><span> </span><span>Object</span><span> </span><span>object</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>methodName</span><span>,</span></span><span class="line" lang="java" id="LC333"><span>            </span><span>Object</span><span>[</span><span>]</span><span> </span><span>args</span><span>,</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>[</span><span>]</span><span> </span><span>parameterTypes</span><span>)</span></span><span class="line" lang="java" id="LC334"><span>            </span><span class="kd">throws</span><span> </span><span>NoSuchMethodException</span><span>,</span><span> </span><span>IllegalAccessException</span><span>,</span></span><span class="line" lang="java" id="LC335"><span>            </span><span>InvocationTargetException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC336"><span>        </span><span>args</span><span> </span><span>=</span><span> </span><span>ArrayUtils</span><span>.</span><span>nullToEmpty</span><span>(</span><span>args</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC337"><span>        </span><span>parameterTypes</span><span> </span><span>=</span><span> </span><span>ArrayUtils</span><span>.</span><span>nullToEmpty</span><span>(</span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC338"><span>        </span><span class="kd">final</span><span> </span><span>Method</span><span> </span><span>method</span><span> </span><span>=</span><span> </span><span>getAccessibleMethod</span><span>(</span><span>object</span><span>.</span><span>getClass</span><span>(</span><span>)</span><span>,</span><span> </span><span>methodName</span><span>,</span></span><span class="line" lang="java" id="LC339"><span>                </span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC340"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>method</span><span> </span><span>==</span><span> </span><span class="kc">null</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC341"><span>            </span><span class="k">throw</span><span> </span><span class="k">new</span><span> </span><span>NoSuchMethodException</span><span>(</span><span class="s">&quot;No such accessible method: &quot;</span></span><span class="line" lang="java" id="LC342"><span>                    </span><span>+</span><span> </span><span>methodName</span><span> </span><span>+</span><span> </span><span class="s">&quot;() on object: &quot;</span></span><span class="line" lang="java" id="LC343"><span>                    </span><span>+</span><span> </span><span>object</span><span>.</span><span>getClass</span><span>(</span><span>)</span><span>.</span><span>getName</span><span>(</span><span>)</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC344"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC345"><span>        </span><span class="k">return</span><span> </span><span>method</span><span>.</span><span>invoke</span><span>(</span><span>object</span><span>,</span><span> </span><span>args</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC346"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC347"></span><span class="line" lang="java" id="LC348"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC349"><span class="cm">     * &lt;p&gt;Invokes a {@code static} method whose parameter types match exactly the parameter</span></span><span class="line" lang="java" id="LC350"><span class="cm">     * types given.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC351"><span class="cm">     *</span></span><span class="line" lang="java" id="LC352"><span class="cm">     * &lt;p&gt;This uses reflection to invoke the method obtained from a call to</span></span><span class="line" lang="java" id="LC353"><span class="cm">     * {@link #getAccessibleMethod(Class, String, Class[])}.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC354"><span class="cm">     *</span></span><span class="line" lang="java" id="LC355"><span class="cm">     * @param cls invoke static method on this class</span></span><span class="line" lang="java" id="LC356"><span class="cm">     * @param methodName get method with this name</span></span><span class="line" lang="java" id="LC357"><span class="cm">     * @param args use these arguments - treat {@code null} as empty array</span></span><span class="line" lang="java" id="LC358"><span class="cm">     * @param parameterTypes match these parameters - treat {@code null} as empty array</span></span><span class="line" lang="java" id="LC359"><span class="cm">     * @return The value returned by the invoked method</span></span><span class="line" lang="java" id="LC360"><span class="cm">     *</span></span><span class="line" lang="java" id="LC361"><span class="cm">     * @throws NoSuchMethodException if there is no such accessible method</span></span><span class="line" lang="java" id="LC362"><span class="cm">     * @throws InvocationTargetException wraps an exception thrown by the</span></span><span class="line" lang="java" id="LC363"><span class="cm">     *  method invoked</span></span><span class="line" lang="java" id="LC364"><span class="cm">     * @throws IllegalAccessException if the requested method is not accessible</span></span><span class="line" lang="java" id="LC365"><span class="cm">     *  via reflection</span></span><span class="line" lang="java" id="LC366"><span class="cm">     */</span></span><span class="line" lang="java" id="LC367"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>Object</span><span> </span><span>invokeExactStaticMethod</span><span>(</span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>cls</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>methodName</span><span>,</span></span><span class="line" lang="java" id="LC368"><span>            </span><span>Object</span><span>[</span><span>]</span><span> </span><span>args</span><span>,</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>[</span><span>]</span><span> </span><span>parameterTypes</span><span>)</span></span><span class="line" lang="java" id="LC369"><span>            </span><span class="kd">throws</span><span> </span><span>NoSuchMethodException</span><span>,</span><span> </span><span>IllegalAccessException</span><span>,</span></span><span class="line" lang="java" id="LC370"><span>            </span><span>InvocationTargetException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC371"><span>        </span><span>args</span><span> </span><span>=</span><span> </span><span>ArrayUtils</span><span>.</span><span>nullToEmpty</span><span>(</span><span>args</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC372"><span>        </span><span>parameterTypes</span><span> </span><span>=</span><span> </span><span>ArrayUtils</span><span>.</span><span>nullToEmpty</span><span>(</span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC373"><span>        </span><span class="kd">final</span><span> </span><span>Method</span><span> </span><span>method</span><span> </span><span>=</span><span> </span><span>getAccessibleMethod</span><span>(</span><span>cls</span><span>,</span><span> </span><span>methodName</span><span>,</span><span> </span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC374"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>method</span><span> </span><span>==</span><span> </span><span class="kc">null</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC375"><span>            </span><span class="k">throw</span><span> </span><span class="k">new</span><span> </span><span>NoSuchMethodException</span><span>(</span><span class="s">&quot;No such accessible method: &quot;</span></span><span class="line" lang="java" id="LC376"><span>                    </span><span>+</span><span> </span><span>methodName</span><span> </span><span>+</span><span> </span><span class="s">&quot;() on class: &quot;</span><span> </span><span>+</span><span> </span><span>cls</span><span>.</span><span>getName</span><span>(</span><span>)</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC377"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC378"><span>        </span><span class="k">return</span><span> </span><span>method</span><span>.</span><span>invoke</span><span>(</span><span class="kc">null</span><span>,</span><span> </span><span>args</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC379"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC380"></span><span class="line" lang="java" id="LC381"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC382"><span class="cm">     * &lt;p&gt;Invokes a named {@code static} method whose parameter type matches the object type.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC383"><span class="cm">     *</span></span><span class="line" lang="java" id="LC384"><span class="cm">     * &lt;p&gt;This method delegates the method search to {@link #getMatchingAccessibleMethod(Class, String, Class[])}.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC385"><span class="cm">     *</span></span><span class="line" lang="java" id="LC386"><span class="cm">     * &lt;p&gt;This method supports calls to methods taking primitive parameters</span></span><span class="line" lang="java" id="LC387"><span class="cm">     * via passing in wrapping classes. So, for example, a {@code Boolean} class</span></span><span class="line" lang="java" id="LC388"><span class="cm">     * would match a {@code boolean} primitive.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC389"><span class="cm">     *</span></span><span class="line" lang="java" id="LC390"><span class="cm">     * &lt;p&gt;This is a convenient wrapper for</span></span><span class="line" lang="java" id="LC391"><span class="cm">     * {@link #invokeStaticMethod(Class, String, Object[], Class[])}.</span></span><span class="line" lang="java" id="LC392"><span class="cm">     * &lt;/p&gt;</span></span><span class="line" lang="java" id="LC393"><span class="cm">     *</span></span><span class="line" lang="java" id="LC394"><span class="cm">     * @param cls invoke static method on this class</span></span><span class="line" lang="java" id="LC395"><span class="cm">     * @param methodName get method with this name</span></span><span class="line" lang="java" id="LC396"><span class="cm">     * @param args use these arguments - treat {@code null} as empty array</span></span><span class="line" lang="java" id="LC397"><span class="cm">     * @return The value returned by the invoked method</span></span><span class="line" lang="java" id="LC398"><span class="cm">     *</span></span><span class="line" lang="java" id="LC399"><span class="cm">     * @throws NoSuchMethodException if there is no such accessible method</span></span><span class="line" lang="java" id="LC400"><span class="cm">     * @throws InvocationTargetException wraps an exception thrown by the</span></span><span class="line" lang="java" id="LC401"><span class="cm">     *  method invoked</span></span><span class="line" lang="java" id="LC402"><span class="cm">     * @throws IllegalAccessException if the requested method is not accessible</span></span><span class="line" lang="java" id="LC403"><span class="cm">     *  via reflection</span></span><span class="line" lang="java" id="LC404"><span class="cm">     */</span></span><span class="line" lang="java" id="LC405"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>Object</span><span> </span><span>invokeStaticMethod</span><span>(</span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>cls</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>methodName</span><span>,</span></span><span class="line" lang="java" id="LC406"><span>            </span><span>Object</span><span>.</span><span>.</span><span>.</span><span> </span><span>args</span><span>)</span><span> </span><span class="kd">throws</span><span> </span><span>NoSuchMethodException</span><span>,</span></span><span class="line" lang="java" id="LC407"><span>            </span><span>IllegalAccessException</span><span>,</span><span> </span><span>InvocationTargetException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC408"><span>        </span><span>args</span><span> </span><span>=</span><span> </span><span>ArrayUtils</span><span>.</span><span>nullToEmpty</span><span>(</span><span>args</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC409"><span>        </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>[</span><span>]</span><span> </span><span>parameterTypes</span><span> </span><span>=</span><span> </span><span>ClassUtils</span><span>.</span><span>toClass</span><span>(</span><span>args</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC410"><span>        </span><span class="k">return</span><span> </span><span>invokeStaticMethod</span><span>(</span><span>cls</span><span>,</span><span> </span><span>methodName</span><span>,</span><span> </span><span>args</span><span>,</span><span> </span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC411"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC412"></span><span class="line" lang="java" id="LC413"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC414"><span class="cm">     * &lt;p&gt;Invokes a named {@code static} method whose parameter type matches the object type.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC415"><span class="cm">     *</span></span><span class="line" lang="java" id="LC416"><span class="cm">     * &lt;p&gt;This method delegates the method search to {@link #getMatchingAccessibleMethod(Class, String, Class[])}.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC417"><span class="cm">     *</span></span><span class="line" lang="java" id="LC418"><span class="cm">     * &lt;p&gt;This method supports calls to methods taking primitive parameters</span></span><span class="line" lang="java" id="LC419"><span class="cm">     * via passing in wrapping classes. So, for example, a {@code Boolean} class</span></span><span class="line" lang="java" id="LC420"><span class="cm">     * would match a {@code boolean} primitive.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC421"><span class="cm">     *</span></span><span class="line" lang="java" id="LC422"><span class="cm">     *</span></span><span class="line" lang="java" id="LC423"><span class="cm">     * @param cls invoke static method on this class</span></span><span class="line" lang="java" id="LC424"><span class="cm">     * @param methodName get method with this name</span></span><span class="line" lang="java" id="LC425"><span class="cm">     * @param args use these arguments - treat {@code null} as empty array</span></span><span class="line" lang="java" id="LC426"><span class="cm">     * @param parameterTypes match these parameters - treat {@code null} as empty array</span></span><span class="line" lang="java" id="LC427"><span class="cm">     * @return The value returned by the invoked method</span></span><span class="line" lang="java" id="LC428"><span class="cm">     *</span></span><span class="line" lang="java" id="LC429"><span class="cm">     * @throws NoSuchMethodException if there is no such accessible method</span></span><span class="line" lang="java" id="LC430"><span class="cm">     * @throws InvocationTargetException wraps an exception thrown by the</span></span><span class="line" lang="java" id="LC431"><span class="cm">     *  method invoked</span></span><span class="line" lang="java" id="LC432"><span class="cm">     * @throws IllegalAccessException if the requested method is not accessible</span></span><span class="line" lang="java" id="LC433"><span class="cm">     *  via reflection</span></span><span class="line" lang="java" id="LC434"><span class="cm">     */</span></span><span class="line" lang="java" id="LC435"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>Object</span><span> </span><span>invokeStaticMethod</span><span>(</span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>cls</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>methodName</span><span>,</span></span><span class="line" lang="java" id="LC436"><span>            </span><span>Object</span><span>[</span><span>]</span><span> </span><span>args</span><span>,</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>[</span><span>]</span><span> </span><span>parameterTypes</span><span>)</span></span><span class="line" lang="java" id="LC437"><span>            </span><span class="kd">throws</span><span> </span><span>NoSuchMethodException</span><span>,</span><span> </span><span>IllegalAccessException</span><span>,</span></span><span class="line" lang="java" id="LC438"><span>            </span><span>InvocationTargetException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC439"><span>        </span><span>args</span><span> </span><span>=</span><span> </span><span>ArrayUtils</span><span>.</span><span>nullToEmpty</span><span>(</span><span>args</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC440"><span>        </span><span>parameterTypes</span><span> </span><span>=</span><span> </span><span>ArrayUtils</span><span>.</span><span>nullToEmpty</span><span>(</span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC441"><span>        </span><span class="kd">final</span><span> </span><span>Method</span><span> </span><span>method</span><span> </span><span>=</span><span> </span><span>getMatchingAccessibleMethod</span><span>(</span><span>cls</span><span>,</span><span> </span><span>methodName</span><span>,</span></span><span class="line" lang="java" id="LC442"><span>                </span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC443"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>method</span><span> </span><span>==</span><span> </span><span class="kc">null</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC444"><span>            </span><span class="k">throw</span><span> </span><span class="k">new</span><span> </span><span>NoSuchMethodException</span><span>(</span><span class="s">&quot;No such accessible method: &quot;</span></span><span class="line" lang="java" id="LC445"><span>                    </span><span>+</span><span> </span><span>methodName</span><span> </span><span>+</span><span> </span><span class="s">&quot;() on class: &quot;</span><span> </span><span>+</span><span> </span><span>cls</span><span>.</span><span>getName</span><span>(</span><span>)</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC446"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC447"><span>        </span><span>args</span><span> </span><span>=</span><span> </span><span>toVarArgs</span><span>(</span><span>method</span><span>,</span><span> </span><span>args</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC448"><span>        </span><span class="k">return</span><span> </span><span>method</span><span>.</span><span>invoke</span><span>(</span><span class="kc">null</span><span>,</span><span> </span><span>args</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC449"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC450"></span><span class="line" lang="java" id="LC451"><span>    </span><span class="kd">private</span><span> </span><span class="kd">static</span><span> </span><span>Object</span><span>[</span><span>]</span><span> </span><span>toVarArgs</span><span>(</span><span class="kd">final</span><span> </span><span>Method</span><span> </span><span>method</span><span>,</span><span> </span><span>Object</span><span>[</span><span>]</span><span> </span><span>args</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC452"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>method</span><span>.</span><span>isVarArgs</span><span>(</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC453"><span>            </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>[</span><span>]</span><span> </span><span>methodParameterTypes</span><span> </span><span>=</span><span> </span><span>method</span><span>.</span><span>getParameterTypes</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC454"><span>            </span><span>args</span><span> </span><span>=</span><span> </span><span>getVarArgs</span><span>(</span><span>args</span><span>,</span><span> </span><span>methodParameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC455"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC456"><span>        </span><span class="k">return</span><span> </span><span>args</span><span>;</span></span><span class="line" lang="java" id="LC457"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC458"></span><span class="line" lang="java" id="LC459"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC460"><span class="cm">     * &lt;p&gt;Given an arguments array passed to a varargs method, return an array of arguments in the canonical form,</span></span><span class="line" lang="java" id="LC461"><span class="cm">     * i.e. an array with the declared number of parameters, and whose last parameter is an array of the varargs type.</span></span><span class="line" lang="java" id="LC462"><span class="cm">     * &lt;/p&gt;</span></span><span class="line" lang="java" id="LC463"><span class="cm">     *</span></span><span class="line" lang="java" id="LC464"><span class="cm">     * @param args the array of arguments passed to the varags method</span></span><span class="line" lang="java" id="LC465"><span class="cm">     * @param methodParameterTypes the declared array of method parameter types</span></span><span class="line" lang="java" id="LC466"><span class="cm">     * @return an array of the variadic arguments passed to the method</span></span><span class="line" lang="java" id="LC467"><span class="cm">     * @since 3.5</span></span><span class="line" lang="java" id="LC468"><span class="cm">     */</span></span><span class="line" lang="java" id="LC469"><span>    </span><span class="kd">static</span><span> </span><span>Object</span><span>[</span><span>]</span><span> </span><span>getVarArgs</span><span>(</span><span class="kd">final</span><span> </span><span>Object</span><span>[</span><span>]</span><span> </span><span>args</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>[</span><span>]</span><span> </span><span>methodParameterTypes</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC470"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>args</span><span>.</span><span>length</span><span> </span><span>==</span><span> </span><span>methodParameterTypes</span><span>.</span><span>length</span><span> </span><span>&amp;&amp;</span><span> </span><span>(</span><span>args</span><span>[</span><span>args</span><span>.</span><span>length</span><span> </span><span>-</span><span> </span><span>1</span><span>]</span><span> </span><span>==</span><span> </span><span class="kc">null</span><span> </span><span>||</span></span><span class="line" lang="java" id="LC471"><span>                </span><span>args</span><span>[</span><span>args</span><span>.</span><span>length</span><span> </span><span>-</span><span> </span><span>1</span><span>]</span><span>.</span><span>getClass</span><span>(</span><span>)</span><span>.</span><span>equals</span><span>(</span><span>methodParameterTypes</span><span>[</span><span>methodParameterTypes</span><span>.</span><span>length</span><span> </span><span>-</span><span> </span><span>1</span><span>]</span><span>)</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC472"><span>            </span><span class="cm">// The args array is already in the canonical form for the method.</span></span><span class="line" lang="java" id="LC473"><span>            </span><span class="k">return</span><span> </span><span>args</span><span>;</span></span><span class="line" lang="java" id="LC474"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC475"></span><span class="line" lang="java" id="LC476"><span>        </span><span class="cm">// Construct a new array matching the method&#39;s declared parameter types.</span></span><span class="line" lang="java" id="LC477"><span>        </span><span class="kd">final</span><span> </span><span>Object</span><span>[</span><span>]</span><span> </span><span>newArgs</span><span> </span><span>=</span><span> </span><span class="k">new</span><span> </span><span>Object</span><span>[</span><span>methodParameterTypes</span><span>.</span><span>length</span><span>]</span><span>;</span></span><span class="line" lang="java" id="LC478"></span><span class="line" lang="java" id="LC479"><span>        </span><span class="cm">// Copy the normal (non-varargs) parameters</span></span><span class="line" lang="java" id="LC480"><span>        </span><span>System</span><span>.</span><span>arraycopy</span><span>(</span><span>args</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>newArgs</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>methodParameterTypes</span><span>.</span><span>length</span><span> </span><span>-</span><span> </span><span>1</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC481"></span><span class="line" lang="java" id="LC482"><span>        </span><span class="cm">// Construct a new array for the variadic parameters</span></span><span class="line" lang="java" id="LC483"><span>        </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>varArgComponentType</span><span> </span><span>=</span><span> </span><span>methodParameterTypes</span><span>[</span><span>methodParameterTypes</span><span>.</span><span>length</span><span> </span><span>-</span><span> </span><span>1</span><span>]</span><span>.</span><span>getComponentType</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC484"><span>        </span><span class="kd">final</span><span> </span><span class="kt">int</span><span> </span><span>varArgLength</span><span> </span><span>=</span><span> </span><span>args</span><span>.</span><span>length</span><span> </span><span>-</span><span> </span><span>methodParameterTypes</span><span>.</span><span>length</span><span> </span><span>+</span><span> </span><span>1</span><span>;</span></span><span class="line" lang="java" id="LC485"></span><span class="line" lang="java" id="LC486"><span>        </span><span>Object</span><span> </span><span>varArgsArray</span><span> </span><span>=</span><span> </span><span>Array</span><span>.</span><span>newInstance</span><span>(</span><span>ClassUtils</span><span>.</span><span>primitiveToWrapper</span><span>(</span><span>varArgComponentType</span><span>)</span><span>,</span><span> </span><span>varArgLength</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC487"><span>        </span><span class="cm">// Copy the variadic arguments into the varargs array.</span></span><span class="line" lang="java" id="LC488"><span>        </span><span>System</span><span>.</span><span>arraycopy</span><span>(</span><span>args</span><span>,</span><span> </span><span>methodParameterTypes</span><span>.</span><span>length</span><span> </span><span>-</span><span> </span><span>1</span><span>,</span><span> </span><span>varArgsArray</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>varArgLength</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC489"></span><span class="line" lang="java" id="LC490"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>varArgComponentType</span><span>.</span><span>isPrimitive</span><span>(</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC491"><span>            </span><span class="cm">// unbox from wrapper type to primitive type</span></span><span class="line" lang="java" id="LC492"><span>            </span><span>varArgsArray</span><span> </span><span>=</span><span> </span><span>ArrayUtils</span><span>.</span><span>toPrimitive</span><span>(</span><span>varArgsArray</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC493"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC494"></span><span class="line" lang="java" id="LC495"><span>        </span><span class="cm">// Store the varargs array in the last position of the array to return</span></span><span class="line" lang="java" id="LC496"><span>        </span><span>newArgs</span><span>[</span><span>methodParameterTypes</span><span>.</span><span>length</span><span> </span><span>-</span><span> </span><span>1</span><span>]</span><span> </span><span>=</span><span> </span><span>varArgsArray</span><span>;</span></span><span class="line" lang="java" id="LC497"></span><span class="line" lang="java" id="LC498"><span>        </span><span class="cm">// Return the canonical varargs array.</span></span><span class="line" lang="java" id="LC499"><span>        </span><span class="k">return</span><span> </span><span>newArgs</span><span>;</span></span><span class="line" lang="java" id="LC500"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC501"></span><span class="line" lang="java" id="LC502"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC503"><span class="cm">     * &lt;p&gt;Invokes a {@code static} method whose parameter types match exactly the object</span></span><span class="line" lang="java" id="LC504"><span class="cm">     * types.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC505"><span class="cm">     *</span></span><span class="line" lang="java" id="LC506"><span class="cm">     * &lt;p&gt;This uses reflection to invoke the method obtained from a call to</span></span><span class="line" lang="java" id="LC507"><span class="cm">     * {@link #getAccessibleMethod(Class, String, Class[])}.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC508"><span class="cm">     *</span></span><span class="line" lang="java" id="LC509"><span class="cm">     * @param cls invoke static method on this class</span></span><span class="line" lang="java" id="LC510"><span class="cm">     * @param methodName get method with this name</span></span><span class="line" lang="java" id="LC511"><span class="cm">     * @param args use these arguments - treat {@code null} as empty array</span></span><span class="line" lang="java" id="LC512"><span class="cm">     * @return The value returned by the invoked method</span></span><span class="line" lang="java" id="LC513"><span class="cm">     *</span></span><span class="line" lang="java" id="LC514"><span class="cm">     * @throws NoSuchMethodException if there is no such accessible method</span></span><span class="line" lang="java" id="LC515"><span class="cm">     * @throws InvocationTargetException wraps an exception thrown by the</span></span><span class="line" lang="java" id="LC516"><span class="cm">     *  method invoked</span></span><span class="line" lang="java" id="LC517"><span class="cm">     * @throws IllegalAccessException if the requested method is not accessible</span></span><span class="line" lang="java" id="LC518"><span class="cm">     *  via reflection</span></span><span class="line" lang="java" id="LC519"><span class="cm">     */</span></span><span class="line" lang="java" id="LC520"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>Object</span><span> </span><span>invokeExactStaticMethod</span><span>(</span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>cls</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>methodName</span><span>,</span></span><span class="line" lang="java" id="LC521"><span>            </span><span>Object</span><span>.</span><span>.</span><span>.</span><span> </span><span>args</span><span>)</span><span> </span><span class="kd">throws</span><span> </span><span>NoSuchMethodException</span><span>,</span></span><span class="line" lang="java" id="LC522"><span>            </span><span>IllegalAccessException</span><span>,</span><span> </span><span>InvocationTargetException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC523"><span>        </span><span>args</span><span> </span><span>=</span><span> </span><span>ArrayUtils</span><span>.</span><span>nullToEmpty</span><span>(</span><span>args</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC524"><span>        </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>[</span><span>]</span><span> </span><span>parameterTypes</span><span> </span><span>=</span><span> </span><span>ClassUtils</span><span>.</span><span>toClass</span><span>(</span><span>args</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC525"><span>        </span><span class="k">return</span><span> </span><span>invokeExactStaticMethod</span><span>(</span><span>cls</span><span>,</span><span> </span><span>methodName</span><span>,</span><span> </span><span>args</span><span>,</span><span> </span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC526"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC527"></span><span class="line" lang="java" id="LC528"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC529"><span class="cm">     * &lt;p&gt;Returns an accessible method (that is, one that can be invoked via</span></span><span class="line" lang="java" id="LC530"><span class="cm">     * reflection) with given name and parameters. If no such method</span></span><span class="line" lang="java" id="LC531"><span class="cm">     * can be found, return {@code null}.</span></span><span class="line" lang="java" id="LC532"><span class="cm">     * This is just a convenience wrapper for</span></span><span class="line" lang="java" id="LC533"><span class="cm">     * {@link #getAccessibleMethod(Method)}.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC534"><span class="cm">     *</span></span><span class="line" lang="java" id="LC535"><span class="cm">     * @param cls get method from this class</span></span><span class="line" lang="java" id="LC536"><span class="cm">     * @param methodName get method with this name</span></span><span class="line" lang="java" id="LC537"><span class="cm">     * @param parameterTypes with these parameters types</span></span><span class="line" lang="java" id="LC538"><span class="cm">     * @return The accessible method</span></span><span class="line" lang="java" id="LC539"><span class="cm">     */</span></span><span class="line" lang="java" id="LC540"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>Method</span><span> </span><span>getAccessibleMethod</span><span>(</span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>cls</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>methodName</span><span>,</span></span><span class="line" lang="java" id="LC541"><span>            </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>.</span><span>.</span><span>.</span><span> </span><span>parameterTypes</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC542"><span>        </span><span class="k">try</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC543"><span>            </span><span class="k">return</span><span> </span><span>getAccessibleMethod</span><span>(</span><span>cls</span><span>.</span><span>getMethod</span><span>(</span><span>methodName</span><span>,</span></span><span class="line" lang="java" id="LC544"><span>                    </span><span>parameterTypes</span><span>)</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC545"><span>        </span><span>}</span><span> </span><span class="k">catch</span><span> </span><span>(</span><span class="kd">final</span><span> </span><span>NoSuchMethodException</span><span> </span><span>e</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC546"><span>            </span><span class="k">return</span><span> </span><span class="kc">null</span><span>;</span></span><span class="line" lang="java" id="LC547"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC548"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC549"></span><span class="line" lang="java" id="LC550"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC551"><span class="cm">     * &lt;p&gt;Returns an accessible method (that is, one that can be invoked via</span></span><span class="line" lang="java" id="LC552"><span class="cm">     * reflection) that implements the specified Method. If no such method</span></span><span class="line" lang="java" id="LC553"><span class="cm">     * can be found, return {@code null}.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC554"><span class="cm">     *</span></span><span class="line" lang="java" id="LC555"><span class="cm">     * @param method The method that we wish to call</span></span><span class="line" lang="java" id="LC556"><span class="cm">     * @return The accessible method</span></span><span class="line" lang="java" id="LC557"><span class="cm">     */</span></span><span class="line" lang="java" id="LC558"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>Method</span><span> </span><span>getAccessibleMethod</span><span>(</span><span>Method</span><span> </span><span>method</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC559"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>!</span><span>MemberUtils</span><span>.</span><span>isAccessible</span><span>(</span><span>method</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC560"><span>            </span><span class="k">return</span><span> </span><span class="kc">null</span><span>;</span></span><span class="line" lang="java" id="LC561"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC562"><span>        </span><span class="cm">// If the declaring class is public, we are done</span></span><span class="line" lang="java" id="LC563"><span>        </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>cls</span><span> </span><span>=</span><span> </span><span>method</span><span>.</span><span>getDeclaringClass</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC564"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>Modifier</span><span>.</span><span>isPublic</span><span>(</span><span>cls</span><span>.</span><span>getModifiers</span><span>(</span><span>)</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC565"><span>            </span><span class="k">return</span><span> </span><span>method</span><span>;</span></span><span class="line" lang="java" id="LC566"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC567"><span>        </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>methodName</span><span> </span><span>=</span><span> </span><span>method</span><span>.</span><span>getName</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC568"><span>        </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>[</span><span>]</span><span> </span><span>parameterTypes</span><span> </span><span>=</span><span> </span><span>method</span><span>.</span><span>getParameterTypes</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC569"></span><span class="line" lang="java" id="LC570"><span>        </span><span class="cm">// Check the implemented interfaces and subinterfaces</span></span><span class="line" lang="java" id="LC571"><span>        </span><span>method</span><span> </span><span>=</span><span> </span><span>getAccessibleMethodFromInterfaceNest</span><span>(</span><span>cls</span><span>,</span><span> </span><span>methodName</span><span>,</span></span><span class="line" lang="java" id="LC572"><span>                </span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC573"></span><span class="line" lang="java" id="LC574"><span>        </span><span class="cm">// Check the superclass chain</span></span><span class="line" lang="java" id="LC575"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>method</span><span> </span><span>==</span><span> </span><span class="kc">null</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC576"><span>            </span><span>method</span><span> </span><span>=</span><span> </span><span>getAccessibleMethodFromSuperclass</span><span>(</span><span>cls</span><span>,</span><span> </span><span>methodName</span><span>,</span></span><span class="line" lang="java" id="LC577"><span>                    </span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC578"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC579"><span>        </span><span class="k">return</span><span> </span><span>method</span><span>;</span></span><span class="line" lang="java" id="LC580"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC581"></span><span class="line" lang="java" id="LC582"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC583"><span class="cm">     * &lt;p&gt;Returns an accessible method (that is, one that can be invoked via</span></span><span class="line" lang="java" id="LC584"><span class="cm">     * reflection) by scanning through the superclasses. If no such method</span></span><span class="line" lang="java" id="LC585"><span class="cm">     * can be found, return {@code null}.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC586"><span class="cm">     *</span></span><span class="line" lang="java" id="LC587"><span class="cm">     * @param cls Class to be checked</span></span><span class="line" lang="java" id="LC588"><span class="cm">     * @param methodName Method name of the method we wish to call</span></span><span class="line" lang="java" id="LC589"><span class="cm">     * @param parameterTypes The parameter type signatures</span></span><span class="line" lang="java" id="LC590"><span class="cm">     * @return the accessible method or {@code null} if not found</span></span><span class="line" lang="java" id="LC591"><span class="cm">     */</span></span><span class="line" lang="java" id="LC592"><span>    </span><span class="kd">private</span><span> </span><span class="kd">static</span><span> </span><span>Method</span><span> </span><span>getAccessibleMethodFromSuperclass</span><span>(</span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>cls</span><span>,</span></span><span class="line" lang="java" id="LC593"><span>            </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>methodName</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>.</span><span>.</span><span>.</span><span> </span><span>parameterTypes</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC594"><span>        </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>parentClass</span><span> </span><span>=</span><span> </span><span>cls</span><span>.</span><span>getSuperclass</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC595"><span>        </span><span class="k">while</span><span> </span><span>(</span><span>parentClass</span><span> </span><span>!=</span><span> </span><span class="kc">null</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC596"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>Modifier</span><span>.</span><span>isPublic</span><span>(</span><span>parentClass</span><span>.</span><span>getModifiers</span><span>(</span><span>)</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC597"><span>                </span><span class="k">try</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC598"><span>                    </span><span class="k">return</span><span> </span><span>parentClass</span><span>.</span><span>getMethod</span><span>(</span><span>methodName</span><span>,</span><span> </span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC599"><span>                </span><span>}</span><span> </span><span class="k">catch</span><span> </span><span>(</span><span class="kd">final</span><span> </span><span>NoSuchMethodException</span><span> </span><span>e</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC600"><span>                    </span><span class="k">return</span><span> </span><span class="kc">null</span><span>;</span></span><span class="line" lang="java" id="LC601"><span>                </span><span>}</span></span><span class="line" lang="java" id="LC602"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC603"><span>            </span><span>parentClass</span><span> </span><span>=</span><span> </span><span>parentClass</span><span>.</span><span>getSuperclass</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC604"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC605"><span>        </span><span class="k">return</span><span> </span><span class="kc">null</span><span>;</span></span><span class="line" lang="java" id="LC606"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC607"></span><span class="line" lang="java" id="LC608"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC609"><span class="cm">     * &lt;p&gt;Returns an accessible method (that is, one that can be invoked via</span></span><span class="line" lang="java" id="LC610"><span class="cm">     * reflection) that implements the specified method, by scanning through</span></span><span class="line" lang="java" id="LC611"><span class="cm">     * all implemented interfaces and subinterfaces. If no such method</span></span><span class="line" lang="java" id="LC612"><span class="cm">     * can be found, return {@code null}.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC613"><span class="cm">     *</span></span><span class="line" lang="java" id="LC614"><span class="cm">     * &lt;p&gt;There isn&#39;t any good reason why this method must be {@code private}.</span></span><span class="line" lang="java" id="LC615"><span class="cm">     * It is because there doesn&#39;t seem any reason why other classes should</span></span><span class="line" lang="java" id="LC616"><span class="cm">     * call this rather than the higher level methods.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC617"><span class="cm">     *</span></span><span class="line" lang="java" id="LC618"><span class="cm">     * @param cls Parent class for the interfaces to be checked</span></span><span class="line" lang="java" id="LC619"><span class="cm">     * @param methodName Method name of the method we wish to call</span></span><span class="line" lang="java" id="LC620"><span class="cm">     * @param parameterTypes The parameter type signatures</span></span><span class="line" lang="java" id="LC621"><span class="cm">     * @return the accessible method or {@code null} if not found</span></span><span class="line" lang="java" id="LC622"><span class="cm">     */</span></span><span class="line" lang="java" id="LC623"><span>    </span><span class="kd">private</span><span> </span><span class="kd">static</span><span> </span><span>Method</span><span> </span><span>getAccessibleMethodFromInterfaceNest</span><span>(</span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>cls</span><span>,</span></span><span class="line" lang="java" id="LC624"><span>            </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>methodName</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>.</span><span>.</span><span>.</span><span> </span><span>parameterTypes</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC625"><span>        </span><span class="cm">// Search up the superclass chain</span></span><span class="line" lang="java" id="LC626"><span>        </span><span class="k">for</span><span> </span><span>(</span><span>;</span><span> </span><span>cls</span><span> </span><span>!=</span><span> </span><span class="kc">null</span><span>;</span><span> </span><span>cls</span><span> </span><span>=</span><span> </span><span>cls</span><span>.</span><span>getSuperclass</span><span>(</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC627"></span><span class="line" lang="java" id="LC628"><span>            </span><span class="cm">// Check the implemented interfaces of the parent class</span></span><span class="line" lang="java" id="LC629"><span>            </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>[</span><span>]</span><span> </span><span>interfaces</span><span> </span><span>=</span><span> </span><span>cls</span><span>.</span><span>getInterfaces</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC630"><span>            </span><span class="k">for</span><span> </span><span>(</span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>anInterface</span><span> </span><span>:</span><span> </span><span>interfaces</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC631"><span>                </span><span class="cm">// Is this interface public?</span></span><span class="line" lang="java" id="LC632"><span>                </span><span class="k">if</span><span> </span><span>(</span><span>!</span><span>Modifier</span><span>.</span><span>isPublic</span><span>(</span><span>anInterface</span><span>.</span><span>getModifiers</span><span>(</span><span>)</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC633"><span>                    </span><span>continue</span><span>;</span></span><span class="line" lang="java" id="LC634"><span>                </span><span>}</span></span><span class="line" lang="java" id="LC635"><span>                </span><span class="cm">// Does the method exist on this interface?</span></span><span class="line" lang="java" id="LC636"><span>                </span><span class="k">try</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC637"><span>                    </span><span class="k">return</span><span> </span><span>anInterface</span><span>.</span><span>getDeclaredMethod</span><span>(</span><span>methodName</span><span>,</span></span><span class="line" lang="java" id="LC638"><span>                            </span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC639"><span>                </span><span>}</span><span> </span><span class="k">catch</span><span> </span><span>(</span><span class="kd">final</span><span> </span><span>NoSuchMethodException</span><span> </span><span>e</span><span>)</span><span> </span><span>{</span><span> </span><span class="cm">// NOPMD</span></span><span class="line" lang="java" id="LC640"><span>                    </span><span class="cm">/*</span></span><span class="line" lang="java" id="LC641"><span class="cm">                     * Swallow, if no method is found after the loop then this</span></span><span class="line" lang="java" id="LC642"><span class="cm">                     * method returns null.</span></span><span class="line" lang="java" id="LC643"><span class="cm">                     */</span></span><span class="line" lang="java" id="LC644"><span>                </span><span>}</span></span><span class="line" lang="java" id="LC645"><span>                </span><span class="cm">// Recursively check our parent interfaces</span></span><span class="line" lang="java" id="LC646"><span>                </span><span class="kd">final</span><span> </span><span>Method</span><span> </span><span>method</span><span> </span><span>=</span><span> </span><span>getAccessibleMethodFromInterfaceNest</span><span>(</span><span>anInterface</span><span>,</span></span><span class="line" lang="java" id="LC647"><span>                        </span><span>methodName</span><span>,</span><span> </span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC648"><span>                </span><span class="k">if</span><span> </span><span>(</span><span>method</span><span> </span><span>!=</span><span> </span><span class="kc">null</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC649"><span>                    </span><span class="k">return</span><span> </span><span>method</span><span>;</span></span><span class="line" lang="java" id="LC650"><span>                </span><span>}</span></span><span class="line" lang="java" id="LC651"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC652"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC653"><span>        </span><span class="k">return</span><span> </span><span class="kc">null</span><span>;</span></span><span class="line" lang="java" id="LC654"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC655"></span><span class="line" lang="java" id="LC656"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC657"><span class="cm">     * &lt;p&gt;Finds an accessible method that matches the given name and has compatible parameters.</span></span><span class="line" lang="java" id="LC658"><span class="cm">     * Compatible parameters mean that every method parameter is assignable from</span></span><span class="line" lang="java" id="LC659"><span class="cm">     * the given parameters.</span></span><span class="line" lang="java" id="LC660"><span class="cm">     * In other words, it finds a method with the given name</span></span><span class="line" lang="java" id="LC661"><span class="cm">     * that will take the parameters given.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC662"><span class="cm">     *</span></span><span class="line" lang="java" id="LC663"><span class="cm">     * &lt;p&gt;This method is used by</span></span><span class="line" lang="java" id="LC664"><span class="cm">     * {@link</span></span><span class="line" lang="java" id="LC665"><span class="cm">     * #invokeMethod(Object object, String methodName, Object[] args, Class[] parameterTypes)}.</span></span><span class="line" lang="java" id="LC666"><span class="cm">     * &lt;/p&gt;</span></span><span class="line" lang="java" id="LC667"><span class="cm">     *</span></span><span class="line" lang="java" id="LC668"><span class="cm">     * &lt;p&gt;This method can match primitive parameter by passing in wrapper classes.</span></span><span class="line" lang="java" id="LC669"><span class="cm">     * For example, a {@code Boolean} will match a primitive {@code boolean}</span></span><span class="line" lang="java" id="LC670"><span class="cm">     * parameter.</span></span><span class="line" lang="java" id="LC671"><span class="cm">     * &lt;/p&gt;</span></span><span class="line" lang="java" id="LC672"><span class="cm">     *</span></span><span class="line" lang="java" id="LC673"><span class="cm">     * @param cls find method in this class</span></span><span class="line" lang="java" id="LC674"><span class="cm">     * @param methodName find method with this name</span></span><span class="line" lang="java" id="LC675"><span class="cm">     * @param parameterTypes find method with most compatible parameters</span></span><span class="line" lang="java" id="LC676"><span class="cm">     * @return The accessible method</span></span><span class="line" lang="java" id="LC677"><span class="cm">     */</span></span><span class="line" lang="java" id="LC678"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>Method</span><span> </span><span>getMatchingAccessibleMethod</span><span>(</span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>cls</span><span>,</span></span><span class="line" lang="java" id="LC679"><span>            </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>methodName</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>.</span><span>.</span><span>.</span><span> </span><span>parameterTypes</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC680"><span>        </span><span class="k">try</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC681"><span>            </span><span class="kd">final</span><span> </span><span>Method</span><span> </span><span>method</span><span> </span><span>=</span><span> </span><span>cls</span><span>.</span><span>getMethod</span><span>(</span><span>methodName</span><span>,</span><span> </span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC682"><span>            </span><span>MemberUtils</span><span>.</span><span>setAccessibleWorkaround</span><span>(</span><span>method</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC683"><span>            </span><span class="k">return</span><span> </span><span>method</span><span>;</span></span><span class="line" lang="java" id="LC684"><span>        </span><span>}</span><span> </span><span class="k">catch</span><span> </span><span>(</span><span class="kd">final</span><span> </span><span>NoSuchMethodException</span><span> </span><span>e</span><span>)</span><span> </span><span>{</span><span> </span><span class="cm">// NOPMD - Swallow the exception</span></span><span class="line" lang="java" id="LC685"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC686"><span>        </span><span class="cm">// search through all methods</span></span><span class="line" lang="java" id="LC687"><span>        </span><span class="kd">final</span><span> </span><span>Method</span><span>[</span><span>]</span><span> </span><span>methods</span><span> </span><span>=</span><span> </span><span>cls</span><span>.</span><span>getMethods</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC688"><span>        </span><span class="kd">final</span><span> </span><span>List</span><span>&lt;</span><span>Method</span><span>&gt;</span><span> </span><span>matchingMethods</span><span> </span><span>=</span><span> </span><span class="k">new</span><span> </span><span>ArrayList</span><span>&lt;</span><span>&gt;</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC689"><span>        </span><span class="k">for</span><span> </span><span>(</span><span class="kd">final</span><span> </span><span>Method</span><span> </span><span>method</span><span> </span><span>:</span><span> </span><span>methods</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC690"><span>            </span><span class="cm">// compare name and parameters</span></span><span class="line" lang="java" id="LC691"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>method</span><span>.</span><span>getName</span><span>(</span><span>)</span><span>.</span><span>equals</span><span>(</span><span>methodName</span><span>)</span><span> </span><span>&amp;&amp;</span></span><span class="line" lang="java" id="LC692"><span>                    </span><span>MemberUtils</span><span>.</span><span>isMatchingMethod</span><span>(</span><span>method</span><span>,</span><span> </span><span>parameterTypes</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC693"><span>                </span><span>matchingMethods</span><span>.</span><span>add</span><span> </span><span>(</span><span>method</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC694"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC695"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC696"></span><span class="line" lang="java" id="LC697"><span>        </span><span class="cm">// Sort methods by signature to force deterministic result</span></span><span class="line" lang="java" id="LC698"><span>        </span><span>matchingMethods</span><span>.</span><span>sort</span><span>(</span><span>METHOD_BY_SIGNATURE</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC699"></span><span class="line" lang="java" id="LC700"><span>        </span><span>Method</span><span> </span><span>bestMatch</span><span> </span><span>=</span><span> </span><span class="kc">null</span><span>;</span></span><span class="line" lang="java" id="LC701"><span>        </span><span class="k">for</span><span> </span><span>(</span><span class="kd">final</span><span> </span><span>Method</span><span> </span><span>method</span><span> </span><span>:</span><span> </span><span>matchingMethods</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC702"><span>            </span><span class="cm">// get accessible version of method</span></span><span class="line" lang="java" id="LC703"><span>            </span><span class="kd">final</span><span> </span><span>Method</span><span> </span><span>accessibleMethod</span><span> </span><span>=</span><span> </span><span>getAccessibleMethod</span><span>(</span><span>method</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC704"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>accessibleMethod</span><span> </span><span>!=</span><span> </span><span class="kc">null</span><span> </span><span>&amp;&amp;</span><span> </span><span>(</span><span>bestMatch</span><span> </span><span>==</span><span> </span><span class="kc">null</span><span> </span><span>||</span><span> </span><span>MemberUtils</span><span>.</span><span>compareMethodFit</span><span>(</span></span><span class="line" lang="java" id="LC705"><span>                        </span><span>accessibleMethod</span><span>,</span></span><span class="line" lang="java" id="LC706"><span>                        </span><span>bestMatch</span><span>,</span></span><span class="line" lang="java" id="LC707"><span>                        </span><span>parameterTypes</span><span>)</span><span> </span><span>&lt;</span><span> </span><span>0</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC708"><span>                </span><span>bestMatch</span><span> </span><span>=</span><span> </span><span>accessibleMethod</span><span>;</span></span><span class="line" lang="java" id="LC709"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC710"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC711"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>bestMatch</span><span> </span><span>!=</span><span> </span><span class="kc">null</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC712"><span>            </span><span>MemberUtils</span><span>.</span><span>setAccessibleWorkaround</span><span>(</span><span>bestMatch</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC713"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC714"></span><span class="line" lang="java" id="LC715"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>bestMatch</span><span> </span><span>!=</span><span> </span><span class="kc">null</span><span> </span><span>&amp;&amp;</span><span> </span><span>bestMatch</span><span>.</span><span>isVarArgs</span><span>(</span><span>)</span><span> </span><span>&amp;&amp;</span><span> </span><span>bestMatch</span><span>.</span><span>getParameterTypes</span><span>(</span><span>)</span><span>.</span><span>length</span><span> </span><span>&gt;</span><span> </span><span>0</span><span> </span><span>&amp;&amp;</span><span> </span><span>parameterTypes</span><span>.</span><span>length</span><span> </span><span>&gt;</span><span> </span><span>0</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC716"><span>            </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>[</span><span>]</span><span> </span><span>methodParameterTypes</span><span> </span><span>=</span><span> </span><span>bestMatch</span><span>.</span><span>getParameterTypes</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC717"><span>            </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>methodParameterComponentType</span><span> </span><span>=</span><span> </span><span>methodParameterTypes</span><span>[</span><span>methodParameterTypes</span><span>.</span><span>length</span><span> </span><span>-</span><span> </span><span>1</span><span>]</span><span>.</span><span>getComponentType</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC718"><span>            </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>methodParameterComponentTypeName</span><span> </span><span>=</span><span> </span><span>ClassUtils</span><span>.</span><span>primitiveToWrapper</span><span>(</span><span>methodParameterComponentType</span><span>)</span><span>.</span><span>getName</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC719"></span><span class="line" lang="java" id="LC720"><span>            </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>lastParameterType</span><span> </span><span>=</span><span> </span><span>parameterTypes</span><span>[</span><span>parameterTypes</span><span>.</span><span>length</span><span> </span><span>-</span><span> </span><span>1</span><span>]</span><span>;</span></span><span class="line" lang="java" id="LC721"><span>            </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>parameterTypeName</span><span> </span><span>=</span><span> </span><span>(</span><span>lastParameterType</span><span>==</span><span class="kc">null</span><span>)</span><span> </span><span>?</span><span> </span><span class="kc">null</span><span> </span><span>:</span><span> </span><span>lastParameterType</span><span>.</span><span>getName</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC722"><span>            </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>parameterTypeSuperClassName</span><span> </span><span>=</span><span> </span><span>(</span><span>lastParameterType</span><span>==</span><span class="kc">null</span><span>)</span><span> </span><span>?</span><span> </span><span class="kc">null</span><span> </span><span>:</span><span> </span><span>lastParameterType</span><span>.</span><span>getSuperclass</span><span>(</span><span>)</span><span>.</span><span>getName</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC723"></span><span class="line" lang="java" id="LC724"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>parameterTypeName</span><span>!=</span><span> </span><span class="kc">null</span><span> </span><span>&amp;&amp;</span><span> </span><span>parameterTypeSuperClassName</span><span> </span><span>!=</span><span> </span><span class="kc">null</span><span> </span><span>&amp;&amp;</span><span> </span><span>!</span><span>methodParameterComponentTypeName</span><span>.</span><span>equals</span><span>(</span><span>parameterTypeName</span><span>)</span></span><span class="line" lang="java" id="LC725"><span>                    </span><span>&amp;&amp;</span><span> </span><span>!</span><span>methodParameterComponentTypeName</span><span>.</span><span>equals</span><span>(</span><span>parameterTypeSuperClassName</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC726"><span>                </span><span class="k">return</span><span> </span><span class="kc">null</span><span>;</span></span><span class="line" lang="java" id="LC727"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC728"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC729"></span><span class="line" lang="java" id="LC730"><span>        </span><span class="k">return</span><span> </span><span>bestMatch</span><span>;</span></span><span class="line" lang="java" id="LC731"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC732"></span><span class="line" lang="java" id="LC733"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC734"><span class="cm">     * &lt;p&gt;Retrieves a method whether or not it&#39;s accessible. If no such method</span></span><span class="line" lang="java" id="LC735"><span class="cm">     * can be found, return {@code null}.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC736"><span class="cm">     * @param cls The class that will be subjected to the method search</span></span><span class="line" lang="java" id="LC737"><span class="cm">     * @param methodName The method that we wish to call</span></span><span class="line" lang="java" id="LC738"><span class="cm">     * @param parameterTypes Argument class types</span></span><span class="line" lang="java" id="LC739"><span class="cm">     * @return The method</span></span><span class="line" lang="java" id="LC740"><span class="cm">     *</span></span><span class="line" lang="java" id="LC741"><span class="cm">     * @since 3.5</span></span><span class="line" lang="java" id="LC742"><span class="cm">     */</span></span><span class="line" lang="java" id="LC743"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>Method</span><span> </span><span>getMatchingMethod</span><span>(</span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>cls</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>methodName</span><span>,</span></span><span class="line" lang="java" id="LC744"><span>            </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>.</span><span>.</span><span>.</span><span> </span><span>parameterTypes</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC745"><span>        </span><span>Validate</span><span>.</span><span>notNull</span><span>(</span><span>cls</span><span>,</span><span> </span><span class="s">&quot;cls&quot;</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC746"><span>        </span><span>Validate</span><span>.</span><span>notEmpty</span><span>(</span><span>methodName</span><span>,</span><span> </span><span class="s">&quot;methodName&quot;</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC747"></span><span class="line" lang="java" id="LC748"><span>        </span><span class="kd">final</span><span> </span><span>List</span><span>&lt;</span><span>Method</span><span>&gt;</span><span> </span><span>methods</span><span> </span><span>=</span><span> </span><span>Arrays</span><span>.</span><span>stream</span><span>(</span><span>cls</span><span>.</span><span>getDeclaredMethods</span><span>(</span><span>)</span><span>)</span></span><span class="line" lang="java" id="LC749"><span>                </span><span>.</span><span>filter</span><span>(</span><span>method</span><span> </span><span>-</span><span>&gt;</span><span> </span><span>method</span><span>.</span><span>getName</span><span>(</span><span>)</span><span>.</span><span>equals</span><span>(</span><span>methodName</span><span>)</span><span>)</span></span><span class="line" lang="java" id="LC750"><span>                </span><span>.</span><span>collect</span><span>(</span><span>toList</span><span>(</span><span>)</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC751"></span><span class="line" lang="java" id="LC752"><span>        </span><span>ClassUtils</span><span>.</span><span>getAllSuperclasses</span><span>(</span><span>cls</span><span>)</span><span>.</span><span>stream</span><span>(</span><span>)</span></span><span class="line" lang="java" id="LC753"><span>                </span><span>.</span><span>map</span><span>(</span><span>Class</span><span>:</span><span>:</span><span>getDeclaredMethods</span><span>)</span></span><span class="line" lang="java" id="LC754"><span>                </span><span>.</span><span>flatMap</span><span>(</span><span>Arrays</span><span>:</span><span>:</span><span>stream</span><span>)</span></span><span class="line" lang="java" id="LC755"><span>                </span><span>.</span><span>filter</span><span>(</span><span>method</span><span> </span><span>-</span><span>&gt;</span><span> </span><span>method</span><span>.</span><span>getName</span><span>(</span><span>)</span><span>.</span><span>equals</span><span>(</span><span>methodName</span><span>)</span><span>)</span></span><span class="line" lang="java" id="LC756"><span>                </span><span>.</span><span>forEach</span><span>(</span><span>methods</span><span>:</span><span>:</span><span>add</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC757"></span><span class="line" lang="java" id="LC758"><span>        </span><span class="k">for</span><span> </span><span>(</span><span class="kd">final</span><span> </span><span>Method</span><span> </span><span>method</span><span> </span><span>:</span><span> </span><span>methods</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC759"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>Arrays</span><span>.</span><span>deepEquals</span><span>(</span><span>method</span><span>.</span><span>getParameterTypes</span><span>(</span><span>)</span><span>,</span><span> </span><span>parameterTypes</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC760"><span>                </span><span class="k">return</span><span> </span><span>method</span><span>;</span></span><span class="line" lang="java" id="LC761"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC762"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC763"></span><span class="line" lang="java" id="LC764"><span>        </span><span class="kd">final</span><span> </span><span>TreeMap</span><span>&lt;</span><span>Integer</span><span>,</span><span> </span><span>List</span><span>&lt;</span><span>Method</span><span>&gt;</span><span>&gt;</span><span> </span><span>candidates</span><span> </span><span>=</span><span> </span><span class="k">new</span><span> </span><span>TreeMap</span><span>&lt;</span><span>&gt;</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC765"></span><span class="line" lang="java" id="LC766"><span>        </span><span>methods</span><span>.</span><span>stream</span><span>(</span><span>)</span></span><span class="line" lang="java" id="LC767"><span>                </span><span>.</span><span>filter</span><span>(</span><span>method</span><span> </span><span>-</span><span>&gt;</span><span> </span><span>ClassUtils</span><span>.</span><span>isAssignable</span><span>(</span><span>parameterTypes</span><span>,</span><span> </span><span>method</span><span>.</span><span>getParameterTypes</span><span>(</span><span>)</span><span>,</span><span> </span><span class="kc">true</span><span>)</span><span>)</span></span><span class="line" lang="java" id="LC768"><span>                </span><span>.</span><span>forEach</span><span>(</span><span>method</span><span> </span><span>-</span><span>&gt;</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC769"><span>                    </span><span class="kd">final</span><span> </span><span class="kt">int</span><span> </span><span>distance</span><span> </span><span>=</span><span> </span><span>distance</span><span>(</span><span>parameterTypes</span><span>,</span><span> </span><span>method</span><span>.</span><span>getParameterTypes</span><span>(</span><span>)</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC770"><span>                    </span><span class="kd">final</span><span> </span><span>List</span><span>&lt;</span><span>Method</span><span>&gt;</span><span> </span><span>candidatesAtDistance</span><span> </span><span>=</span><span> </span><span>candidates</span><span>.</span><span>computeIfAbsent</span><span>(</span><span>distance</span><span>,</span><span> </span><span>k</span><span> </span><span>-</span><span>&gt;</span><span> </span><span class="k">new</span><span> </span><span>ArrayList</span><span>&lt;</span><span>&gt;</span><span>(</span><span>)</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC771"><span>                    </span><span>candidatesAtDistance</span><span>.</span><span>add</span><span>(</span><span>method</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC772"><span>                </span><span>}</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC773"></span><span class="line" lang="java" id="LC774"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>candidates</span><span>.</span><span>isEmpty</span><span>(</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC775"><span>            </span><span class="k">return</span><span> </span><span class="kc">null</span><span>;</span></span><span class="line" lang="java" id="LC776"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC777"></span><span class="line" lang="java" id="LC778"><span>        </span><span class="kd">final</span><span> </span><span>List</span><span>&lt;</span><span>Method</span><span>&gt;</span><span> </span><span>bestCandidates</span><span> </span><span>=</span><span> </span><span>candidates</span><span>.</span><span>values</span><span>(</span><span>)</span><span>.</span><span>iterator</span><span>(</span><span>)</span><span>.</span><span>next</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC779"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>bestCandidates</span><span>.</span><span>size</span><span>(</span><span>)</span><span> </span><span>==</span><span> </span><span>1</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC780"><span>            </span><span class="k">return</span><span> </span><span>bestCandidates</span><span>.</span><span>get</span><span>(</span><span>0</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC781"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC782"></span><span class="line" lang="java" id="LC783"><span>        </span><span class="k">throw</span><span> </span><span class="k">new</span><span> </span><span>IllegalStateException</span><span>(</span></span><span class="line" lang="java" id="LC784"><span>                </span><span>String</span><span>.</span><span>format</span><span>(</span><span class="s">&quot;Found multiple candidates for method %s on class %s : %s&quot;</span><span>,</span></span><span class="line" lang="java" id="LC785"><span>                        </span><span>methodName</span><span> </span><span>+</span><span> </span><span>Arrays</span><span>.</span><span>stream</span><span>(</span><span>parameterTypes</span><span>)</span><span>.</span><span>map</span><span>(</span><span>String</span><span>:</span><span>:</span><span>valueOf</span><span>)</span><span>.</span><span>collect</span><span>(</span><span>Collectors</span><span>.</span><span>joining</span><span>(</span><span class="s">&quot;,&quot;</span><span>,</span><span> </span><span class="s">&quot;(&quot;</span><span>,</span><span> </span><span class="s">&quot;)&quot;</span><span>)</span><span>)</span><span>,</span></span><span class="line" lang="java" id="LC786"><span>                        </span><span>cls</span><span>.</span><span>getName</span><span>(</span><span>)</span><span>,</span></span><span class="line" lang="java" id="LC787"><span>                        </span><span>bestCandidates</span><span>.</span><span>stream</span><span>(</span><span>)</span><span>.</span><span>map</span><span>(</span><span>Method</span><span>:</span><span>:</span><span>toString</span><span>)</span><span>.</span><span>collect</span><span>(</span><span>Collectors</span><span>.</span><span>joining</span><span>(</span><span class="s">&quot;,&quot;</span><span>,</span><span> </span><span class="s">&quot;[&quot;</span><span>,</span><span> </span><span class="s">&quot;]&quot;</span><span>)</span><span>)</span><span>)</span></span><span class="line" lang="java" id="LC788"><span>        </span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC789"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC790"></span><span class="line" lang="java" id="LC791"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC792"><span class="cm">     * &lt;p&gt;Returns the aggregate number of inheritance hops between assignable argument class types.  Returns -1</span></span><span class="line" lang="java" id="LC793"><span class="cm">     * if the arguments aren&#39;t assignable.  Fills a specific purpose for getMatchingMethod and is not generalized.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC794"><span class="cm">     * @param fromClassArray the Class array to calculate the distance from.</span></span><span class="line" lang="java" id="LC795"><span class="cm">     * @param toClassArray the Class array to calculate the distance to.</span></span><span class="line" lang="java" id="LC796"><span class="cm">     * @return the aggregate number of inheritance hops between assignable argument class types.</span></span><span class="line" lang="java" id="LC797"><span class="cm">     */</span></span><span class="line" lang="java" id="LC798"><span>    </span><span class="kd">private</span><span> </span><span class="kd">static</span><span> </span><span class="kt">int</span><span> </span><span>distance</span><span>(</span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>[</span><span>]</span><span> </span><span>fromClassArray</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>[</span><span>]</span><span> </span><span>toClassArray</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC799"><span>        </span><span class="kt">int</span><span> </span><span>answer</span><span> </span><span>=</span><span> </span><span>0</span><span>;</span></span><span class="line" lang="java" id="LC800"></span><span class="line" lang="java" id="LC801"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>!</span><span>ClassUtils</span><span>.</span><span>isAssignable</span><span>(</span><span>fromClassArray</span><span>,</span><span> </span><span>toClassArray</span><span>,</span><span> </span><span class="kc">true</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC802"><span>            </span><span class="k">return</span><span> </span><span>-</span><span>1</span><span>;</span></span><span class="line" lang="java" id="LC803"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC804"><span>        </span><span class="k">for</span><span> </span><span>(</span><span class="kt">int</span><span> </span><span>offset</span><span> </span><span>=</span><span> </span><span>0</span><span>;</span><span> </span><span>offset</span><span> </span><span>&lt;</span><span> </span><span>fromClassArray</span><span>.</span><span>length</span><span>;</span><span> </span><span>offset</span><span>+</span><span>+</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC805"><span>            </span><span class="cm">// Note InheritanceUtils.distance() uses different scoring system.</span></span><span class="line" lang="java" id="LC806"><span>            </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>aClass</span><span> </span><span>=</span><span> </span><span>fromClassArray</span><span>[</span><span>offset</span><span>]</span><span>;</span></span><span class="line" lang="java" id="LC807"><span>            </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>toClass</span><span> </span><span>=</span><span> </span><span>toClassArray</span><span>[</span><span>offset</span><span>]</span><span>;</span></span><span class="line" lang="java" id="LC808"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>aClass</span><span> </span><span>==</span><span> </span><span class="kc">null</span><span> </span><span>||</span><span> </span><span>aClass</span><span>.</span><span>equals</span><span>(</span><span>toClass</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC809"><span>                </span><span>continue</span><span>;</span></span><span class="line" lang="java" id="LC810"><span>            </span><span>}</span><span> </span><span>else</span><span> </span><span class="k">if</span><span> </span><span>(</span><span>ClassUtils</span><span>.</span><span>isAssignable</span><span>(</span><span>aClass</span><span>,</span><span> </span><span>toClass</span><span>,</span><span> </span><span class="kc">true</span><span>)</span></span><span class="line" lang="java" id="LC811"><span>                    </span><span>&amp;&amp;</span><span> </span><span>!</span><span>ClassUtils</span><span>.</span><span>isAssignable</span><span>(</span><span>aClass</span><span>,</span><span> </span><span>toClass</span><span>,</span><span> </span><span class="kc">false</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC812"><span>                </span><span>answer</span><span>+</span><span>+</span><span>;</span></span><span class="line" lang="java" id="LC813"><span>            </span><span>}</span><span> </span><span>else</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC814"><span>                </span><span>answer</span><span> </span><span>=</span><span> </span><span>answer</span><span> </span><span>+</span><span> </span><span>2</span><span>;</span></span><span class="line" lang="java" id="LC815"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC816"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC817"></span><span class="line" lang="java" id="LC818"><span>        </span><span class="k">return</span><span> </span><span>answer</span><span>;</span></span><span class="line" lang="java" id="LC819"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC820"></span><span class="line" lang="java" id="LC821"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC822"><span class="cm">     * Gets the hierarchy of overridden methods down to {@code result} respecting generics.</span></span><span class="line" lang="java" id="LC823"><span class="cm">     * @param method lowest to consider</span></span><span class="line" lang="java" id="LC824"><span class="cm">     * @param interfacesBehavior whether to search interfaces, {@code null} {@code implies} false</span></span><span class="line" lang="java" id="LC825"><span class="cm">     * @return Set&amp;lt;Method&amp;gt; in ascending order from sub- to superclass</span></span><span class="line" lang="java" id="LC826"><span class="cm">     * @throws NullPointerException if the specified method is {@code null}</span></span><span class="line" lang="java" id="LC827"><span class="cm">     * @since 3.2</span></span><span class="line" lang="java" id="LC828"><span class="cm">     */</span></span><span class="line" lang="java" id="LC829"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>Set</span><span>&lt;</span><span>Method</span><span>&gt;</span><span> </span><span>getOverrideHierarchy</span><span>(</span><span class="kd">final</span><span> </span><span>Method</span><span> </span><span>method</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>Interfaces</span><span> </span><span>interfacesBehavior</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC830"><span>        </span><span>Validate</span><span>.</span><span>notNull</span><span>(</span><span>method</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC831"><span>        </span><span class="kd">final</span><span> </span><span>Set</span><span>&lt;</span><span>Method</span><span>&gt;</span><span> </span><span>result</span><span> </span><span>=</span><span> </span><span class="k">new</span><span> </span><span>LinkedHashSet</span><span>&lt;</span><span>&gt;</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC832"><span>        </span><span>result</span><span>.</span><span>add</span><span>(</span><span>method</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC833"></span><span class="line" lang="java" id="LC834"><span>        </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>[</span><span>]</span><span> </span><span>parameterTypes</span><span> </span><span>=</span><span> </span><span>method</span><span>.</span><span>getParameterTypes</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC835"></span><span class="line" lang="java" id="LC836"><span>        </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>declaringClass</span><span> </span><span>=</span><span> </span><span>method</span><span>.</span><span>getDeclaringClass</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC837"></span><span class="line" lang="java" id="LC838"><span>        </span><span class="kd">final</span><span> </span><span>Iterator</span><span>&lt;</span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>&gt;</span><span> </span><span>hierarchy</span><span> </span><span>=</span><span> </span><span>ClassUtils</span><span>.</span><span>hierarchy</span><span>(</span><span>declaringClass</span><span>,</span><span> </span><span>interfacesBehavior</span><span>)</span><span>.</span><span>iterator</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC839"><span>        </span><span class="cm">//skip the declaring class :P</span></span><span class="line" lang="java" id="LC840"><span>        </span><span>hierarchy</span><span>.</span><span>next</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC841"><span>        </span><span>hierarchyTraversal</span><span>:</span><span> </span><span class="k">while</span><span> </span><span>(</span><span>hierarchy</span><span>.</span><span>hasNext</span><span>(</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC842"><span>            </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>c</span><span> </span><span>=</span><span> </span><span>hierarchy</span><span>.</span><span>next</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC843"><span>            </span><span class="kd">final</span><span> </span><span>Method</span><span> </span><span>m</span><span> </span><span>=</span><span> </span><span>getMatchingAccessibleMethod</span><span>(</span><span>c</span><span>,</span><span> </span><span>method</span><span>.</span><span>getName</span><span>(</span><span>)</span><span>,</span><span> </span><span>parameterTypes</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC844"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>m</span><span> </span><span>==</span><span> </span><span class="kc">null</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC845"><span>                </span><span>continue</span><span>;</span></span><span class="line" lang="java" id="LC846"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC847"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>Arrays</span><span>.</span><span>equals</span><span>(</span><span>m</span><span>.</span><span>getParameterTypes</span><span>(</span><span>)</span><span>,</span><span> </span><span>parameterTypes</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC848"><span>                </span><span class="cm">// matches without generics</span></span><span class="line" lang="java" id="LC849"><span>                </span><span>result</span><span>.</span><span>add</span><span>(</span><span>m</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC850"><span>                </span><span>continue</span><span>;</span></span><span class="line" lang="java" id="LC851"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC852"><span>            </span><span class="cm">// necessary to get arguments every time in the case that we are including interfaces</span></span><span class="line" lang="java" id="LC853"><span>            </span><span class="kd">final</span><span> </span><span>Map</span><span>&lt;</span><span>TypeVariable</span><span>&lt;</span><span>?</span><span>&gt;</span><span>,</span><span> </span><span>Type</span><span>&gt;</span><span> </span><span>typeArguments</span><span> </span><span>=</span><span> </span><span>TypeUtils</span><span>.</span><span>getTypeArguments</span><span>(</span><span>declaringClass</span><span>,</span><span> </span><span>m</span><span>.</span><span>getDeclaringClass</span><span>(</span><span>)</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC854"><span>            </span><span class="k">for</span><span> </span><span>(</span><span class="kt">int</span><span> </span><span>i</span><span> </span><span>=</span><span> </span><span>0</span><span>;</span><span> </span><span>i</span><span> </span><span>&lt;</span><span> </span><span>parameterTypes</span><span>.</span><span>length</span><span>;</span><span> </span><span>i</span><span>+</span><span>+</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC855"><span>                </span><span class="kd">final</span><span> </span><span>Type</span><span> </span><span>childType</span><span> </span><span>=</span><span> </span><span>TypeUtils</span><span>.</span><span>unrollVariables</span><span>(</span><span>typeArguments</span><span>,</span><span> </span><span>method</span><span>.</span><span>getGenericParameterTypes</span><span>(</span><span>)</span><span>[</span><span>i</span><span>]</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC856"><span>                </span><span class="kd">final</span><span> </span><span>Type</span><span> </span><span>parentType</span><span> </span><span>=</span><span> </span><span>TypeUtils</span><span>.</span><span>unrollVariables</span><span>(</span><span>typeArguments</span><span>,</span><span> </span><span>m</span><span>.</span><span>getGenericParameterTypes</span><span>(</span><span>)</span><span>[</span><span>i</span><span>]</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC857"><span>                </span><span class="k">if</span><span> </span><span>(</span><span>!</span><span>TypeUtils</span><span>.</span><span>equals</span><span>(</span><span>childType</span><span>,</span><span> </span><span>parentType</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC858"><span>                    </span><span>continue</span><span> </span><span>hierarchyTraversal</span><span>;</span></span><span class="line" lang="java" id="LC859"><span>                </span><span>}</span></span><span class="line" lang="java" id="LC860"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC861"><span>            </span><span>result</span><span>.</span><span>add</span><span>(</span><span>m</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC862"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC863"><span>        </span><span class="k">return</span><span> </span><span>result</span><span>;</span></span><span class="line" lang="java" id="LC864"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC865"></span><span class="line" lang="java" id="LC866"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC867"><span class="cm">     * Gets all class level public methods of the given class that are annotated with the given annotation.</span></span><span class="line" lang="java" id="LC868"><span class="cm">     * @param cls</span></span><span class="line" lang="java" id="LC869"><span class="cm">     *            the {@link Class} to query</span></span><span class="line" lang="java" id="LC870"><span class="cm">     * @param annotationCls</span></span><span class="line" lang="java" id="LC871"><span class="cm">     *            the {@link java.lang.annotation.Annotation} that must be present on a method to be matched</span></span><span class="line" lang="java" id="LC872"><span class="cm">     * @return an array of Methods (possibly empty).</span></span><span class="line" lang="java" id="LC873"><span class="cm">     * @throws NullPointerException if the class or annotation are {@code null}</span></span><span class="line" lang="java" id="LC874"><span class="cm">     * @since 3.4</span></span><span class="line" lang="java" id="LC875"><span class="cm">     */</span></span><span class="line" lang="java" id="LC876"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>Method</span><span>[</span><span>]</span><span> </span><span>getMethodsWithAnnotation</span><span>(</span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>cls</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span> </span><span class="kd">extends</span><span> </span><span>Annotation</span><span>&gt;</span><span> </span><span>annotationCls</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC877"><span>        </span><span class="k">return</span><span> </span><span>getMethodsWithAnnotation</span><span>(</span><span>cls</span><span>,</span><span> </span><span>annotationCls</span><span>,</span><span> </span><span class="kc">false</span><span>,</span><span> </span><span class="kc">false</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC878"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC879"></span><span class="line" lang="java" id="LC880"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC881"><span class="cm">     * Gets all class level public methods of the given class that are annotated with the given annotation.</span></span><span class="line" lang="java" id="LC882"><span class="cm">     * @param cls</span></span><span class="line" lang="java" id="LC883"><span class="cm">     *            the {@link Class} to query</span></span><span class="line" lang="java" id="LC884"><span class="cm">     * @param annotationCls</span></span><span class="line" lang="java" id="LC885"><span class="cm">     *            the {@link Annotation} that must be present on a method to be matched</span></span><span class="line" lang="java" id="LC886"><span class="cm">     * @return a list of Methods (possibly empty).</span></span><span class="line" lang="java" id="LC887"><span class="cm">     * @throws IllegalArgumentException</span></span><span class="line" lang="java" id="LC888"><span class="cm">     *            if the class or annotation are {@code null}</span></span><span class="line" lang="java" id="LC889"><span class="cm">     * @since 3.4</span></span><span class="line" lang="java" id="LC890"><span class="cm">     */</span></span><span class="line" lang="java" id="LC891"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>List</span><span>&lt;</span><span>Method</span><span>&gt;</span><span> </span><span>getMethodsListWithAnnotation</span><span>(</span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>cls</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span> </span><span class="kd">extends</span><span> </span><span>Annotation</span><span>&gt;</span><span> </span><span>annotationCls</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC892"><span>        </span><span class="k">return</span><span> </span><span>getMethodsListWithAnnotation</span><span>(</span><span>cls</span><span>,</span><span> </span><span>annotationCls</span><span>,</span><span> </span><span class="kc">false</span><span>,</span><span> </span><span class="kc">false</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC893"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC894"></span><span class="line" lang="java" id="LC895"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC896"><span class="cm">     * Gets all methods of the given class that are annotated with the given annotation.</span></span><span class="line" lang="java" id="LC897"><span class="cm">     * @param cls</span></span><span class="line" lang="java" id="LC898"><span class="cm">     *            the {@link Class} to query</span></span><span class="line" lang="java" id="LC899"><span class="cm">     * @param annotationCls</span></span><span class="line" lang="java" id="LC900"><span class="cm">     *            the {@link java.lang.annotation.Annotation} that must be present on a method to be matched</span></span><span class="line" lang="java" id="LC901"><span class="cm">     * @param searchSupers</span></span><span class="line" lang="java" id="LC902"><span class="cm">     *            determines if a lookup in the entire inheritance hierarchy of the given class should be performed</span></span><span class="line" lang="java" id="LC903"><span class="cm">     * @param ignoreAccess</span></span><span class="line" lang="java" id="LC904"><span class="cm">     *            determines if non public methods should be considered</span></span><span class="line" lang="java" id="LC905"><span class="cm">     * @return an array of Methods (possibly empty).</span></span><span class="line" lang="java" id="LC906"><span class="cm">     * @throws NullPointerException if the class or annotation are {@code null}</span></span><span class="line" lang="java" id="LC907"><span class="cm">     * @since 3.6</span></span><span class="line" lang="java" id="LC908"><span class="cm">     */</span></span><span class="line" lang="java" id="LC909"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>Method</span><span>[</span><span>]</span><span> </span><span>getMethodsWithAnnotation</span><span>(</span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>cls</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span> </span><span class="kd">extends</span><span> </span><span>Annotation</span><span>&gt;</span><span> </span><span>annotationCls</span><span>,</span></span><span class="line" lang="java" id="LC910"><span>                                                    </span><span class="kd">final</span><span> </span><span class="kt">boolean</span><span> </span><span>searchSupers</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span class="kt">boolean</span><span> </span><span>ignoreAccess</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC911"><span>        </span><span class="kd">final</span><span> </span><span>List</span><span>&lt;</span><span>Method</span><span>&gt;</span><span> </span><span>annotatedMethodsList</span><span> </span><span>=</span><span> </span><span>getMethodsListWithAnnotation</span><span>(</span><span>cls</span><span>,</span><span> </span><span>annotationCls</span><span>,</span><span> </span><span>searchSupers</span><span>,</span></span><span class="line" lang="java" id="LC912"><span>                </span><span>ignoreAccess</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC913"><span>        </span><span class="k">return</span><span> </span><span>annotatedMethodsList</span><span>.</span><span>toArray</span><span>(</span><span>ArrayUtils</span><span>.</span><span>EMPTY_METHOD_ARRAY</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC914"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC915"></span><span class="line" lang="java" id="LC916"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC917"><span class="cm">     * Gets all methods of the given class that are annotated with the given annotation.</span></span><span class="line" lang="java" id="LC918"><span class="cm">     * @param cls</span></span><span class="line" lang="java" id="LC919"><span class="cm">     *            the {@link Class} to query</span></span><span class="line" lang="java" id="LC920"><span class="cm">     * @param annotationCls</span></span><span class="line" lang="java" id="LC921"><span class="cm">     *            the {@link Annotation} that must be present on a method to be matched</span></span><span class="line" lang="java" id="LC922"><span class="cm">     * @param searchSupers</span></span><span class="line" lang="java" id="LC923"><span class="cm">     *            determines if a lookup in the entire inheritance hierarchy of the given class should be performed</span></span><span class="line" lang="java" id="LC924"><span class="cm">     * @param ignoreAccess</span></span><span class="line" lang="java" id="LC925"><span class="cm">     *            determines if non public methods should be considered</span></span><span class="line" lang="java" id="LC926"><span class="cm">     * @return a list of Methods (possibly empty).</span></span><span class="line" lang="java" id="LC927"><span class="cm">     * @throws NullPointerException if either the class or annotation class is {@code null}</span></span><span class="line" lang="java" id="LC928"><span class="cm">     * @since 3.6</span></span><span class="line" lang="java" id="LC929"><span class="cm">     */</span></span><span class="line" lang="java" id="LC930"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>List</span><span>&lt;</span><span>Method</span><span>&gt;</span><span> </span><span>getMethodsListWithAnnotation</span><span>(</span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>cls</span><span>,</span></span><span class="line" lang="java" id="LC931"><span>                                                            </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span> </span><span class="kd">extends</span><span> </span><span>Annotation</span><span>&gt;</span><span> </span><span>annotationCls</span><span>,</span></span><span class="line" lang="java" id="LC932"><span>                                                            </span><span class="kd">final</span><span> </span><span class="kt">boolean</span><span> </span><span>searchSupers</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span class="kt">boolean</span><span> </span><span>ignoreAccess</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC933"></span><span class="line" lang="java" id="LC934"><span>        </span><span>Validate</span><span>.</span><span>notNull</span><span>(</span><span>cls</span><span>,</span><span> </span><span class="s">&quot;cls&quot;</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC935"><span>        </span><span>Validate</span><span>.</span><span>notNull</span><span>(</span><span>annotationCls</span><span>,</span><span> </span><span class="s">&quot;annotationCls&quot;</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC936"><span>        </span><span class="kd">final</span><span> </span><span>List</span><span>&lt;</span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>&gt;</span><span> </span><span>classes</span><span> </span><span>=</span><span> </span><span>(</span><span>searchSupers</span><span> </span><span>?</span><span> </span><span>getAllSuperclassesAndInterfaces</span><span>(</span><span>cls</span><span>)</span></span><span class="line" lang="java" id="LC937"><span>                </span><span>:</span><span> </span><span class="k">new</span><span> </span><span>ArrayList</span><span>&lt;</span><span>&gt;</span><span>(</span><span>)</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC938"><span>        </span><span>classes</span><span>.</span><span>add</span><span>(</span><span>0</span><span>,</span><span> </span><span>cls</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC939"><span>        </span><span class="kd">final</span><span> </span><span>List</span><span>&lt;</span><span>Method</span><span>&gt;</span><span> </span><span>annotatedMethods</span><span> </span><span>=</span><span> </span><span class="k">new</span><span> </span><span>ArrayList</span><span>&lt;</span><span>&gt;</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC940"><span>        </span><span class="k">for</span><span> </span><span>(</span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>acls</span><span> </span><span>:</span><span> </span><span>classes</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC941"><span>            </span><span class="kd">final</span><span> </span><span>Method</span><span>[</span><span>]</span><span> </span><span>methods</span><span> </span><span>=</span><span> </span><span>(</span><span>ignoreAccess</span><span> </span><span>?</span><span> </span><span>acls</span><span>.</span><span>getDeclaredMethods</span><span>(</span><span>)</span><span> </span><span>:</span><span> </span><span>acls</span><span>.</span><span>getMethods</span><span>(</span><span>)</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC942"><span>            </span><span class="k">for</span><span> </span><span>(</span><span class="kd">final</span><span> </span><span>Method</span><span> </span><span>method</span><span> </span><span>:</span><span> </span><span>methods</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC943"><span>                </span><span class="k">if</span><span> </span><span>(</span><span>method</span><span>.</span><span>getAnnotation</span><span>(</span><span>annotationCls</span><span>)</span><span> </span><span>!=</span><span> </span><span class="kc">null</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC944"><span>                    </span><span>annotatedMethods</span><span>.</span><span>add</span><span>(</span><span>method</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC945"><span>                </span><span>}</span></span><span class="line" lang="java" id="LC946"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC947"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC948"><span>        </span><span class="k">return</span><span> </span><span>annotatedMethods</span><span>;</span></span><span class="line" lang="java" id="LC949"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC950"></span><span class="line" lang="java" id="LC951"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC952"><span class="cm">     * &lt;p&gt;Gets the annotation object with the given annotation type that is present on the given method</span></span><span class="line" lang="java" id="LC953"><span class="cm">     * or optionally on any equivalent method in super classes and interfaces. Returns null if the annotation</span></span><span class="line" lang="java" id="LC954"><span class="cm">     * type was not present.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC955"><span class="cm">     *</span></span><span class="line" lang="java" id="LC956"><span class="cm">     * &lt;p&gt;Stops searching for an annotation once the first annotation of the specified type has been</span></span><span class="line" lang="java" id="LC957"><span class="cm">     * found. Additional annotations of the specified type will be silently ignored.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC958"><span class="cm">     * @param &lt;A&gt;</span></span><span class="line" lang="java" id="LC959"><span class="cm">     *            the annotation type</span></span><span class="line" lang="java" id="LC960"><span class="cm">     * @param method</span></span><span class="line" lang="java" id="LC961"><span class="cm">     *            the {@link Method} to query</span></span><span class="line" lang="java" id="LC962"><span class="cm">     * @param annotationCls</span></span><span class="line" lang="java" id="LC963"><span class="cm">     *            the {@link Annotation} to check if is present on the method</span></span><span class="line" lang="java" id="LC964"><span class="cm">     * @param searchSupers</span></span><span class="line" lang="java" id="LC965"><span class="cm">     *            determines if a lookup in the entire inheritance hierarchy of the given class is performed</span></span><span class="line" lang="java" id="LC966"><span class="cm">     *            if the annotation was not directly present</span></span><span class="line" lang="java" id="LC967"><span class="cm">     * @param ignoreAccess</span></span><span class="line" lang="java" id="LC968"><span class="cm">     *            determines if underlying method has to be accessible</span></span><span class="line" lang="java" id="LC969"><span class="cm">     * @return the first matching annotation, or {@code null} if not found</span></span><span class="line" lang="java" id="LC970"><span class="cm">     * @throws NullPointerException if either the method or annotation class is {@code null}</span></span><span class="line" lang="java" id="LC971"><span class="cm">     * @since 3.6</span></span><span class="line" lang="java" id="LC972"><span class="cm">     */</span></span><span class="line" lang="java" id="LC973"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span>&lt;</span><span>A</span><span> </span><span class="kd">extends</span><span> </span><span>Annotation</span><span>&gt;</span><span> </span><span>A</span><span> </span><span>getAnnotation</span><span>(</span><span class="kd">final</span><span> </span><span>Method</span><span> </span><span>method</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>A</span><span>&gt;</span><span> </span><span>annotationCls</span><span>,</span></span><span class="line" lang="java" id="LC974"><span>                                                         </span><span class="kd">final</span><span> </span><span class="kt">boolean</span><span> </span><span>searchSupers</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span class="kt">boolean</span><span> </span><span>ignoreAccess</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC975"></span><span class="line" lang="java" id="LC976"><span>        </span><span>Validate</span><span>.</span><span>notNull</span><span>(</span><span>method</span><span>,</span><span> </span><span class="s">&quot;method&quot;</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC977"><span>        </span><span>Validate</span><span>.</span><span>notNull</span><span>(</span><span>annotationCls</span><span>,</span><span> </span><span class="s">&quot;annotationCls&quot;</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC978"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>!</span><span>ignoreAccess</span><span> </span><span>&amp;&amp;</span><span> </span><span>!</span><span>MemberUtils</span><span>.</span><span>isAccessible</span><span>(</span><span>method</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC979"><span>            </span><span class="k">return</span><span> </span><span class="kc">null</span><span>;</span></span><span class="line" lang="java" id="LC980"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC981"></span><span class="line" lang="java" id="LC982"><span>        </span><span>A</span><span> </span><span>annotation</span><span> </span><span>=</span><span> </span><span>method</span><span>.</span><span>getAnnotation</span><span>(</span><span>annotationCls</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC983"></span><span class="line" lang="java" id="LC984"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>annotation</span><span> </span><span>==</span><span> </span><span class="kc">null</span><span> </span><span>&amp;&amp;</span><span> </span><span>searchSupers</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC985"><span>            </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>mcls</span><span> </span><span>=</span><span> </span><span>method</span><span>.</span><span>getDeclaringClass</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC986"><span>            </span><span class="kd">final</span><span> </span><span>List</span><span>&lt;</span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>&gt;</span><span> </span><span>classes</span><span> </span><span>=</span><span> </span><span>getAllSuperclassesAndInterfaces</span><span>(</span><span>mcls</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC987"><span>            </span><span class="k">for</span><span> </span><span>(</span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>acls</span><span> </span><span>:</span><span> </span><span>classes</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC988"><span>                </span><span class="kd">final</span><span> </span><span>Method</span><span> </span><span>equivalentMethod</span><span> </span><span>=</span><span> </span><span>(</span><span>ignoreAccess</span><span> </span><span>?</span><span> </span><span>MethodUtils</span><span>.</span><span>getMatchingMethod</span><span>(</span><span>acls</span><span>,</span><span> </span><span>method</span><span>.</span><span>getName</span><span>(</span><span>)</span><span>,</span><span> </span><span>method</span><span>.</span><span>getParameterTypes</span><span>(</span><span>)</span><span>)</span></span><span class="line" lang="java" id="LC989"><span>                    </span><span>:</span><span> </span><span>MethodUtils</span><span>.</span><span>getMatchingAccessibleMethod</span><span>(</span><span>acls</span><span>,</span><span> </span><span>method</span><span>.</span><span>getName</span><span>(</span><span>)</span><span>,</span><span> </span><span>method</span><span>.</span><span>getParameterTypes</span><span>(</span><span>)</span><span>)</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC990"><span>                </span><span class="k">if</span><span> </span><span>(</span><span>equivalentMethod</span><span> </span><span>!=</span><span> </span><span class="kc">null</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC991"><span>                    </span><span>annotation</span><span> </span><span>=</span><span> </span><span>equivalentMethod</span><span>.</span><span>getAnnotation</span><span>(</span><span>annotationCls</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC992"><span>                    </span><span class="k">if</span><span> </span><span>(</span><span>annotation</span><span> </span><span>!=</span><span> </span><span class="kc">null</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC993"><span>                        </span><span class="k">break</span><span>;</span></span><span class="line" lang="java" id="LC994"><span>                    </span><span>}</span></span><span class="line" lang="java" id="LC995"><span>                </span><span>}</span></span><span class="line" lang="java" id="LC996"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC997"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC998"></span><span class="line" lang="java" id="LC999"><span>        </span><span class="k">return</span><span> </span><span>annotation</span><span>;</span></span><span class="line" lang="java" id="LC1000"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC1001"></span><span class="line" lang="java" id="LC1002"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC1003"><span class="cm">     * &lt;p&gt;Gets a combination of {@link ClassUtils#getAllSuperclasses(Class)} and</span></span><span class="line" lang="java" id="LC1004"><span class="cm">     * {@link ClassUtils#getAllInterfaces(Class)}, one from superclasses, one</span></span><span class="line" lang="java" id="LC1005"><span class="cm">     * from interfaces, and so on in a breadth first way.&lt;/p&gt;</span></span><span class="line" lang="java" id="LC1006"><span class="cm">     *</span></span><span class="line" lang="java" id="LC1007"><span class="cm">     * @param cls  the class to look up, may be {@code null}</span></span><span class="line" lang="java" id="LC1008"><span class="cm">     * @return the combined {@code List} of superclasses and interfaces in order</span></span><span class="line" lang="java" id="LC1009"><span class="cm">     * going up from this one</span></span><span class="line" lang="java" id="LC1010"><span class="cm">     *  {@code null} if null input</span></span><span class="line" lang="java" id="LC1011"><span class="cm">     */</span></span><span class="line" lang="java" id="LC1012"><span>    </span><span class="kd">private</span><span> </span><span class="kd">static</span><span> </span><span>List</span><span>&lt;</span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>&gt;</span><span> </span><span>getAllSuperclassesAndInterfaces</span><span>(</span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>cls</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC1013"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>cls</span><span> </span><span>==</span><span> </span><span class="kc">null</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC1014"><span>            </span><span class="k">return</span><span> </span><span class="kc">null</span><span>;</span></span><span class="line" lang="java" id="LC1015"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC1016"></span><span class="line" lang="java" id="LC1017"><span>        </span><span class="kd">final</span><span> </span><span>List</span><span>&lt;</span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>&gt;</span><span> </span><span>allSuperClassesAndInterfaces</span><span> </span><span>=</span><span> </span><span class="k">new</span><span> </span><span>ArrayList</span><span>&lt;</span><span>&gt;</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC1018"><span>        </span><span class="kd">final</span><span> </span><span>List</span><span>&lt;</span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>&gt;</span><span> </span><span>allSuperclasses</span><span> </span><span>=</span><span> </span><span>ClassUtils</span><span>.</span><span>getAllSuperclasses</span><span>(</span><span>cls</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC1019"><span>        </span><span class="kt">int</span><span> </span><span>superClassIndex</span><span> </span><span>=</span><span> </span><span>0</span><span>;</span></span><span class="line" lang="java" id="LC1020"><span>        </span><span class="kd">final</span><span> </span><span>List</span><span>&lt;</span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span>&gt;</span><span> </span><span>allInterfaces</span><span> </span><span>=</span><span> </span><span>ClassUtils</span><span>.</span><span>getAllInterfaces</span><span>(</span><span>cls</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC1021"><span>        </span><span class="kt">int</span><span> </span><span>interfaceIndex</span><span> </span><span>=</span><span> </span><span>0</span><span>;</span></span><span class="line" lang="java" id="LC1022"><span>        </span><span class="k">while</span><span> </span><span>(</span><span>interfaceIndex</span><span> </span><span>&lt;</span><span> </span><span>allInterfaces</span><span>.</span><span>size</span><span>(</span><span>)</span><span> </span><span>||</span></span><span class="line" lang="java" id="LC1023"><span>                </span><span>superClassIndex</span><span> </span><span>&lt;</span><span> </span><span>allSuperclasses</span><span>.</span><span>size</span><span>(</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC1024"><span>            </span><span class="kd">final</span><span> </span><span>Class</span><span>&lt;</span><span>?</span><span>&gt;</span><span> </span><span>acls</span><span>;</span></span><span class="line" lang="java" id="LC1025"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>interfaceIndex</span><span> </span><span>&gt;=</span><span> </span><span>allInterfaces</span><span>.</span><span>size</span><span>(</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC1026"><span>                </span><span>acls</span><span> </span><span>=</span><span> </span><span>allSuperclasses</span><span>.</span><span>get</span><span>(</span><span>superClassIndex</span><span>+</span><span>+</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC1027"><span>            </span><span>}</span><span> </span><span>else</span><span> </span><span class="k">if</span><span> </span><span>(</span><span>(</span><span>superClassIndex</span><span> </span><span>&gt;=</span><span> </span><span>allSuperclasses</span><span>.</span><span>size</span><span>(</span><span>)</span><span>)</span><span> </span><span>||</span><span> </span><span>(</span><span>interfaceIndex</span><span> </span><span>&lt;</span><span> </span><span>superClassIndex</span><span>)</span><span> </span><span>||</span><span> </span><span>!</span><span>(</span><span>superClassIndex</span><span> </span><span>&lt;</span><span> </span><span>interfaceIndex</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC1028"><span>                </span><span>acls</span><span> </span><span>=</span><span> </span><span>allInterfaces</span><span>.</span><span>get</span><span>(</span><span>interfaceIndex</span><span>+</span><span>+</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC1029"><span>            </span><span>}</span><span> </span><span>else</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC1030"><span>                </span><span>acls</span><span> </span><span>=</span><span> </span><span>allSuperclasses</span><span>.</span><span>get</span><span>(</span><span>superClassIndex</span><span>+</span><span>+</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC1031"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC1032"><span>            </span><span>allSuperClassesAndInterfaces</span><span>.</span><span>add</span><span>(</span><span>acls</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC1033"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC1034"><span>        </span><span class="k">return</span><span> </span><span>allSuperClassesAndInterfaces</span><span>;</span></span><span class="line" lang="java" id="LC1035"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC1036"><span>}</span></span>
</code>
</pre>
    </div>
</div>