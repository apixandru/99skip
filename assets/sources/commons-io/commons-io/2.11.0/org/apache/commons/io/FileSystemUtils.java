<div class="file-content code js-syntax-highlight white" id="blob-content">
    <div class="line-numbers">
        <a class="file-line-num diff-line-num"
           data-line-number="1"
           id="L1" href="#L1">1</a><a class="file-line-num diff-line-num"
           data-line-number="2"
           id="L2" href="#L2">2</a><a class="file-line-num diff-line-num"
           data-line-number="3"
           id="L3" href="#L3">3</a><a class="file-line-num diff-line-num"
           data-line-number="4"
           id="L4" href="#L4">4</a><a class="file-line-num diff-line-num"
           data-line-number="5"
           id="L5" href="#L5">5</a><a class="file-line-num diff-line-num"
           data-line-number="6"
           id="L6" href="#L6">6</a><a class="file-line-num diff-line-num"
           data-line-number="7"
           id="L7" href="#L7">7</a><a class="file-line-num diff-line-num"
           data-line-number="8"
           id="L8" href="#L8">8</a><a class="file-line-num diff-line-num"
           data-line-number="9"
           id="L9" href="#L9">9</a><a class="file-line-num diff-line-num"
           data-line-number="10"
           id="L10" href="#L10">10</a><a class="file-line-num diff-line-num"
           data-line-number="11"
           id="L11" href="#L11">11</a><a class="file-line-num diff-line-num"
           data-line-number="12"
           id="L12" href="#L12">12</a><a class="file-line-num diff-line-num"
           data-line-number="13"
           id="L13" href="#L13">13</a><a class="file-line-num diff-line-num"
           data-line-number="14"
           id="L14" href="#L14">14</a><a class="file-line-num diff-line-num"
           data-line-number="15"
           id="L15" href="#L15">15</a><a class="file-line-num diff-line-num"
           data-line-number="16"
           id="L16" href="#L16">16</a><a class="file-line-num diff-line-num"
           data-line-number="17"
           id="L17" href="#L17">17</a><a class="file-line-num diff-line-num"
           data-line-number="18"
           id="L18" href="#L18">18</a><a class="file-line-num diff-line-num"
           data-line-number="19"
           id="L19" href="#L19">19</a><a class="file-line-num diff-line-num"
           data-line-number="20"
           id="L20" href="#L20">20</a><a class="file-line-num diff-line-num"
           data-line-number="21"
           id="L21" href="#L21">21</a><a class="file-line-num diff-line-num"
           data-line-number="22"
           id="L22" href="#L22">22</a><a class="file-line-num diff-line-num"
           data-line-number="23"
           id="L23" href="#L23">23</a><a class="file-line-num diff-line-num"
           data-line-number="24"
           id="L24" href="#L24">24</a><a class="file-line-num diff-line-num"
           data-line-number="25"
           id="L25" href="#L25">25</a><a class="file-line-num diff-line-num"
           data-line-number="26"
           id="L26" href="#L26">26</a><a class="file-line-num diff-line-num"
           data-line-number="27"
           id="L27" href="#L27">27</a><a class="file-line-num diff-line-num"
           data-line-number="28"
           id="L28" href="#L28">28</a><a class="file-line-num diff-line-num"
           data-line-number="29"
           id="L29" href="#L29">29</a><a class="file-line-num diff-line-num"
           data-line-number="30"
           id="L30" href="#L30">30</a><a class="file-line-num diff-line-num"
           data-line-number="31"
           id="L31" href="#L31">31</a><a class="file-line-num diff-line-num"
           data-line-number="32"
           id="L32" href="#L32">32</a><a class="file-line-num diff-line-num"
           data-line-number="33"
           id="L33" href="#L33">33</a><a class="file-line-num diff-line-num"
           data-line-number="34"
           id="L34" href="#L34">34</a><a class="file-line-num diff-line-num"
           data-line-number="35"
           id="L35" href="#L35">35</a><a class="file-line-num diff-line-num"
           data-line-number="36"
           id="L36" href="#L36">36</a><a class="file-line-num diff-line-num"
           data-line-number="37"
           id="L37" href="#L37">37</a><a class="file-line-num diff-line-num"
           data-line-number="38"
           id="L38" href="#L38">38</a><a class="file-line-num diff-line-num"
           data-line-number="39"
           id="L39" href="#L39">39</a><a class="file-line-num diff-line-num"
           data-line-number="40"
           id="L40" href="#L40">40</a><a class="file-line-num diff-line-num"
           data-line-number="41"
           id="L41" href="#L41">41</a><a class="file-line-num diff-line-num"
           data-line-number="42"
           id="L42" href="#L42">42</a><a class="file-line-num diff-line-num"
           data-line-number="43"
           id="L43" href="#L43">43</a><a class="file-line-num diff-line-num"
           data-line-number="44"
           id="L44" href="#L44">44</a><a class="file-line-num diff-line-num"
           data-line-number="45"
           id="L45" href="#L45">45</a><a class="file-line-num diff-line-num"
           data-line-number="46"
           id="L46" href="#L46">46</a><a class="file-line-num diff-line-num"
           data-line-number="47"
           id="L47" href="#L47">47</a><a class="file-line-num diff-line-num"
           data-line-number="48"
           id="L48" href="#L48">48</a><a class="file-line-num diff-line-num"
           data-line-number="49"
           id="L49" href="#L49">49</a><a class="file-line-num diff-line-num"
           data-line-number="50"
           id="L50" href="#L50">50</a><a class="file-line-num diff-line-num"
           data-line-number="51"
           id="L51" href="#L51">51</a><a class="file-line-num diff-line-num"
           data-line-number="52"
           id="L52" href="#L52">52</a><a class="file-line-num diff-line-num"
           data-line-number="53"
           id="L53" href="#L53">53</a><a class="file-line-num diff-line-num"
           data-line-number="54"
           id="L54" href="#L54">54</a><a class="file-line-num diff-line-num"
           data-line-number="55"
           id="L55" href="#L55">55</a><a class="file-line-num diff-line-num"
           data-line-number="56"
           id="L56" href="#L56">56</a><a class="file-line-num diff-line-num"
           data-line-number="57"
           id="L57" href="#L57">57</a><a class="file-line-num diff-line-num"
           data-line-number="58"
           id="L58" href="#L58">58</a><a class="file-line-num diff-line-num"
           data-line-number="59"
           id="L59" href="#L59">59</a><a class="file-line-num diff-line-num"
           data-line-number="60"
           id="L60" href="#L60">60</a><a class="file-line-num diff-line-num"
           data-line-number="61"
           id="L61" href="#L61">61</a><a class="file-line-num diff-line-num"
           data-line-number="62"
           id="L62" href="#L62">62</a><a class="file-line-num diff-line-num"
           data-line-number="63"
           id="L63" href="#L63">63</a><a class="file-line-num diff-line-num"
           data-line-number="64"
           id="L64" href="#L64">64</a><a class="file-line-num diff-line-num"
           data-line-number="65"
           id="L65" href="#L65">65</a><a class="file-line-num diff-line-num"
           data-line-number="66"
           id="L66" href="#L66">66</a><a class="file-line-num diff-line-num"
           data-line-number="67"
           id="L67" href="#L67">67</a><a class="file-line-num diff-line-num"
           data-line-number="68"
           id="L68" href="#L68">68</a><a class="file-line-num diff-line-num"
           data-line-number="69"
           id="L69" href="#L69">69</a><a class="file-line-num diff-line-num"
           data-line-number="70"
           id="L70" href="#L70">70</a><a class="file-line-num diff-line-num"
           data-line-number="71"
           id="L71" href="#L71">71</a><a class="file-line-num diff-line-num"
           data-line-number="72"
           id="L72" href="#L72">72</a><a class="file-line-num diff-line-num"
           data-line-number="73"
           id="L73" href="#L73">73</a><a class="file-line-num diff-line-num"
           data-line-number="74"
           id="L74" href="#L74">74</a><a class="file-line-num diff-line-num"
           data-line-number="75"
           id="L75" href="#L75">75</a><a class="file-line-num diff-line-num"
           data-line-number="76"
           id="L76" href="#L76">76</a><a class="file-line-num diff-line-num"
           data-line-number="77"
           id="L77" href="#L77">77</a><a class="file-line-num diff-line-num"
           data-line-number="78"
           id="L78" href="#L78">78</a><a class="file-line-num diff-line-num"
           data-line-number="79"
           id="L79" href="#L79">79</a><a class="file-line-num diff-line-num"
           data-line-number="80"
           id="L80" href="#L80">80</a><a class="file-line-num diff-line-num"
           data-line-number="81"
           id="L81" href="#L81">81</a><a class="file-line-num diff-line-num"
           data-line-number="82"
           id="L82" href="#L82">82</a><a class="file-line-num diff-line-num"
           data-line-number="83"
           id="L83" href="#L83">83</a><a class="file-line-num diff-line-num"
           data-line-number="84"
           id="L84" href="#L84">84</a><a class="file-line-num diff-line-num"
           data-line-number="85"
           id="L85" href="#L85">85</a><a class="file-line-num diff-line-num"
           data-line-number="86"
           id="L86" href="#L86">86</a><a class="file-line-num diff-line-num"
           data-line-number="87"
           id="L87" href="#L87">87</a><a class="file-line-num diff-line-num"
           data-line-number="88"
           id="L88" href="#L88">88</a><a class="file-line-num diff-line-num"
           data-line-number="89"
           id="L89" href="#L89">89</a><a class="file-line-num diff-line-num"
           data-line-number="90"
           id="L90" href="#L90">90</a><a class="file-line-num diff-line-num"
           data-line-number="91"
           id="L91" href="#L91">91</a><a class="file-line-num diff-line-num"
           data-line-number="92"
           id="L92" href="#L92">92</a><a class="file-line-num diff-line-num"
           data-line-number="93"
           id="L93" href="#L93">93</a><a class="file-line-num diff-line-num"
           data-line-number="94"
           id="L94" href="#L94">94</a><a class="file-line-num diff-line-num"
           data-line-number="95"
           id="L95" href="#L95">95</a><a class="file-line-num diff-line-num"
           data-line-number="96"
           id="L96" href="#L96">96</a><a class="file-line-num diff-line-num"
           data-line-number="97"
           id="L97" href="#L97">97</a><a class="file-line-num diff-line-num"
           data-line-number="98"
           id="L98" href="#L98">98</a><a class="file-line-num diff-line-num"
           data-line-number="99"
           id="L99" href="#L99">99</a><a class="file-line-num diff-line-num"
           data-line-number="100"
           id="L100" href="#L100">100</a><a class="file-line-num diff-line-num"
           data-line-number="101"
           id="L101" href="#L101">101</a><a class="file-line-num diff-line-num"
           data-line-number="102"
           id="L102" href="#L102">102</a><a class="file-line-num diff-line-num"
           data-line-number="103"
           id="L103" href="#L103">103</a><a class="file-line-num diff-line-num"
           data-line-number="104"
           id="L104" href="#L104">104</a><a class="file-line-num diff-line-num"
           data-line-number="105"
           id="L105" href="#L105">105</a><a class="file-line-num diff-line-num"
           data-line-number="106"
           id="L106" href="#L106">106</a><a class="file-line-num diff-line-num"
           data-line-number="107"
           id="L107" href="#L107">107</a><a class="file-line-num diff-line-num"
           data-line-number="108"
           id="L108" href="#L108">108</a><a class="file-line-num diff-line-num"
           data-line-number="109"
           id="L109" href="#L109">109</a><a class="file-line-num diff-line-num"
           data-line-number="110"
           id="L110" href="#L110">110</a><a class="file-line-num diff-line-num"
           data-line-number="111"
           id="L111" href="#L111">111</a><a class="file-line-num diff-line-num"
           data-line-number="112"
           id="L112" href="#L112">112</a><a class="file-line-num diff-line-num"
           data-line-number="113"
           id="L113" href="#L113">113</a><a class="file-line-num diff-line-num"
           data-line-number="114"
           id="L114" href="#L114">114</a><a class="file-line-num diff-line-num"
           data-line-number="115"
           id="L115" href="#L115">115</a><a class="file-line-num diff-line-num"
           data-line-number="116"
           id="L116" href="#L116">116</a><a class="file-line-num diff-line-num"
           data-line-number="117"
           id="L117" href="#L117">117</a><a class="file-line-num diff-line-num"
           data-line-number="118"
           id="L118" href="#L118">118</a><a class="file-line-num diff-line-num"
           data-line-number="119"
           id="L119" href="#L119">119</a><a class="file-line-num diff-line-num"
           data-line-number="120"
           id="L120" href="#L120">120</a><a class="file-line-num diff-line-num"
           data-line-number="121"
           id="L121" href="#L121">121</a><a class="file-line-num diff-line-num"
           data-line-number="122"
           id="L122" href="#L122">122</a><a class="file-line-num diff-line-num"
           data-line-number="123"
           id="L123" href="#L123">123</a><a class="file-line-num diff-line-num"
           data-line-number="124"
           id="L124" href="#L124">124</a><a class="file-line-num diff-line-num"
           data-line-number="125"
           id="L125" href="#L125">125</a><a class="file-line-num diff-line-num"
           data-line-number="126"
           id="L126" href="#L126">126</a><a class="file-line-num diff-line-num"
           data-line-number="127"
           id="L127" href="#L127">127</a><a class="file-line-num diff-line-num"
           data-line-number="128"
           id="L128" href="#L128">128</a><a class="file-line-num diff-line-num"
           data-line-number="129"
           id="L129" href="#L129">129</a><a class="file-line-num diff-line-num"
           data-line-number="130"
           id="L130" href="#L130">130</a><a class="file-line-num diff-line-num"
           data-line-number="131"
           id="L131" href="#L131">131</a><a class="file-line-num diff-line-num"
           data-line-number="132"
           id="L132" href="#L132">132</a><a class="file-line-num diff-line-num"
           data-line-number="133"
           id="L133" href="#L133">133</a><a class="file-line-num diff-line-num"
           data-line-number="134"
           id="L134" href="#L134">134</a><a class="file-line-num diff-line-num"
           data-line-number="135"
           id="L135" href="#L135">135</a><a class="file-line-num diff-line-num"
           data-line-number="136"
           id="L136" href="#L136">136</a><a class="file-line-num diff-line-num"
           data-line-number="137"
           id="L137" href="#L137">137</a><a class="file-line-num diff-line-num"
           data-line-number="138"
           id="L138" href="#L138">138</a><a class="file-line-num diff-line-num"
           data-line-number="139"
           id="L139" href="#L139">139</a><a class="file-line-num diff-line-num"
           data-line-number="140"
           id="L140" href="#L140">140</a><a class="file-line-num diff-line-num"
           data-line-number="141"
           id="L141" href="#L141">141</a><a class="file-line-num diff-line-num"
           data-line-number="142"
           id="L142" href="#L142">142</a><a class="file-line-num diff-line-num"
           data-line-number="143"
           id="L143" href="#L143">143</a><a class="file-line-num diff-line-num"
           data-line-number="144"
           id="L144" href="#L144">144</a><a class="file-line-num diff-line-num"
           data-line-number="145"
           id="L145" href="#L145">145</a><a class="file-line-num diff-line-num"
           data-line-number="146"
           id="L146" href="#L146">146</a><a class="file-line-num diff-line-num"
           data-line-number="147"
           id="L147" href="#L147">147</a><a class="file-line-num diff-line-num"
           data-line-number="148"
           id="L148" href="#L148">148</a><a class="file-line-num diff-line-num"
           data-line-number="149"
           id="L149" href="#L149">149</a><a class="file-line-num diff-line-num"
           data-line-number="150"
           id="L150" href="#L150">150</a><a class="file-line-num diff-line-num"
           data-line-number="151"
           id="L151" href="#L151">151</a><a class="file-line-num diff-line-num"
           data-line-number="152"
           id="L152" href="#L152">152</a><a class="file-line-num diff-line-num"
           data-line-number="153"
           id="L153" href="#L153">153</a><a class="file-line-num diff-line-num"
           data-line-number="154"
           id="L154" href="#L154">154</a><a class="file-line-num diff-line-num"
           data-line-number="155"
           id="L155" href="#L155">155</a><a class="file-line-num diff-line-num"
           data-line-number="156"
           id="L156" href="#L156">156</a><a class="file-line-num diff-line-num"
           data-line-number="157"
           id="L157" href="#L157">157</a><a class="file-line-num diff-line-num"
           data-line-number="158"
           id="L158" href="#L158">158</a><a class="file-line-num diff-line-num"
           data-line-number="159"
           id="L159" href="#L159">159</a><a class="file-line-num diff-line-num"
           data-line-number="160"
           id="L160" href="#L160">160</a><a class="file-line-num diff-line-num"
           data-line-number="161"
           id="L161" href="#L161">161</a><a class="file-line-num diff-line-num"
           data-line-number="162"
           id="L162" href="#L162">162</a><a class="file-line-num diff-line-num"
           data-line-number="163"
           id="L163" href="#L163">163</a><a class="file-line-num diff-line-num"
           data-line-number="164"
           id="L164" href="#L164">164</a><a class="file-line-num diff-line-num"
           data-line-number="165"
           id="L165" href="#L165">165</a><a class="file-line-num diff-line-num"
           data-line-number="166"
           id="L166" href="#L166">166</a><a class="file-line-num diff-line-num"
           data-line-number="167"
           id="L167" href="#L167">167</a><a class="file-line-num diff-line-num"
           data-line-number="168"
           id="L168" href="#L168">168</a><a class="file-line-num diff-line-num"
           data-line-number="169"
           id="L169" href="#L169">169</a><a class="file-line-num diff-line-num"
           data-line-number="170"
           id="L170" href="#L170">170</a><a class="file-line-num diff-line-num"
           data-line-number="171"
           id="L171" href="#L171">171</a><a class="file-line-num diff-line-num"
           data-line-number="172"
           id="L172" href="#L172">172</a><a class="file-line-num diff-line-num"
           data-line-number="173"
           id="L173" href="#L173">173</a><a class="file-line-num diff-line-num"
           data-line-number="174"
           id="L174" href="#L174">174</a><a class="file-line-num diff-line-num"
           data-line-number="175"
           id="L175" href="#L175">175</a><a class="file-line-num diff-line-num"
           data-line-number="176"
           id="L176" href="#L176">176</a><a class="file-line-num diff-line-num"
           data-line-number="177"
           id="L177" href="#L177">177</a><a class="file-line-num diff-line-num"
           data-line-number="178"
           id="L178" href="#L178">178</a><a class="file-line-num diff-line-num"
           data-line-number="179"
           id="L179" href="#L179">179</a><a class="file-line-num diff-line-num"
           data-line-number="180"
           id="L180" href="#L180">180</a><a class="file-line-num diff-line-num"
           data-line-number="181"
           id="L181" href="#L181">181</a><a class="file-line-num diff-line-num"
           data-line-number="182"
           id="L182" href="#L182">182</a><a class="file-line-num diff-line-num"
           data-line-number="183"
           id="L183" href="#L183">183</a><a class="file-line-num diff-line-num"
           data-line-number="184"
           id="L184" href="#L184">184</a><a class="file-line-num diff-line-num"
           data-line-number="185"
           id="L185" href="#L185">185</a><a class="file-line-num diff-line-num"
           data-line-number="186"
           id="L186" href="#L186">186</a><a class="file-line-num diff-line-num"
           data-line-number="187"
           id="L187" href="#L187">187</a><a class="file-line-num diff-line-num"
           data-line-number="188"
           id="L188" href="#L188">188</a><a class="file-line-num diff-line-num"
           data-line-number="189"
           id="L189" href="#L189">189</a><a class="file-line-num diff-line-num"
           data-line-number="190"
           id="L190" href="#L190">190</a><a class="file-line-num diff-line-num"
           data-line-number="191"
           id="L191" href="#L191">191</a><a class="file-line-num diff-line-num"
           data-line-number="192"
           id="L192" href="#L192">192</a><a class="file-line-num diff-line-num"
           data-line-number="193"
           id="L193" href="#L193">193</a><a class="file-line-num diff-line-num"
           data-line-number="194"
           id="L194" href="#L194">194</a><a class="file-line-num diff-line-num"
           data-line-number="195"
           id="L195" href="#L195">195</a><a class="file-line-num diff-line-num"
           data-line-number="196"
           id="L196" href="#L196">196</a><a class="file-line-num diff-line-num"
           data-line-number="197"
           id="L197" href="#L197">197</a><a class="file-line-num diff-line-num"
           data-line-number="198"
           id="L198" href="#L198">198</a><a class="file-line-num diff-line-num"
           data-line-number="199"
           id="L199" href="#L199">199</a><a class="file-line-num diff-line-num"
           data-line-number="200"
           id="L200" href="#L200">200</a><a class="file-line-num diff-line-num"
           data-line-number="201"
           id="L201" href="#L201">201</a><a class="file-line-num diff-line-num"
           data-line-number="202"
           id="L202" href="#L202">202</a><a class="file-line-num diff-line-num"
           data-line-number="203"
           id="L203" href="#L203">203</a><a class="file-line-num diff-line-num"
           data-line-number="204"
           id="L204" href="#L204">204</a><a class="file-line-num diff-line-num"
           data-line-number="205"
           id="L205" href="#L205">205</a><a class="file-line-num diff-line-num"
           data-line-number="206"
           id="L206" href="#L206">206</a><a class="file-line-num diff-line-num"
           data-line-number="207"
           id="L207" href="#L207">207</a><a class="file-line-num diff-line-num"
           data-line-number="208"
           id="L208" href="#L208">208</a><a class="file-line-num diff-line-num"
           data-line-number="209"
           id="L209" href="#L209">209</a><a class="file-line-num diff-line-num"
           data-line-number="210"
           id="L210" href="#L210">210</a><a class="file-line-num diff-line-num"
           data-line-number="211"
           id="L211" href="#L211">211</a><a class="file-line-num diff-line-num"
           data-line-number="212"
           id="L212" href="#L212">212</a><a class="file-line-num diff-line-num"
           data-line-number="213"
           id="L213" href="#L213">213</a><a class="file-line-num diff-line-num"
           data-line-number="214"
           id="L214" href="#L214">214</a><a class="file-line-num diff-line-num"
           data-line-number="215"
           id="L215" href="#L215">215</a><a class="file-line-num diff-line-num"
           data-line-number="216"
           id="L216" href="#L216">216</a><a class="file-line-num diff-line-num"
           data-line-number="217"
           id="L217" href="#L217">217</a><a class="file-line-num diff-line-num"
           data-line-number="218"
           id="L218" href="#L218">218</a><a class="file-line-num diff-line-num"
           data-line-number="219"
           id="L219" href="#L219">219</a><a class="file-line-num diff-line-num"
           data-line-number="220"
           id="L220" href="#L220">220</a><a class="file-line-num diff-line-num"
           data-line-number="221"
           id="L221" href="#L221">221</a><a class="file-line-num diff-line-num"
           data-line-number="222"
           id="L222" href="#L222">222</a><a class="file-line-num diff-line-num"
           data-line-number="223"
           id="L223" href="#L223">223</a><a class="file-line-num diff-line-num"
           data-line-number="224"
           id="L224" href="#L224">224</a><a class="file-line-num diff-line-num"
           data-line-number="225"
           id="L225" href="#L225">225</a><a class="file-line-num diff-line-num"
           data-line-number="226"
           id="L226" href="#L226">226</a><a class="file-line-num diff-line-num"
           data-line-number="227"
           id="L227" href="#L227">227</a><a class="file-line-num diff-line-num"
           data-line-number="228"
           id="L228" href="#L228">228</a><a class="file-line-num diff-line-num"
           data-line-number="229"
           id="L229" href="#L229">229</a><a class="file-line-num diff-line-num"
           data-line-number="230"
           id="L230" href="#L230">230</a><a class="file-line-num diff-line-num"
           data-line-number="231"
           id="L231" href="#L231">231</a><a class="file-line-num diff-line-num"
           data-line-number="232"
           id="L232" href="#L232">232</a><a class="file-line-num diff-line-num"
           data-line-number="233"
           id="L233" href="#L233">233</a><a class="file-line-num diff-line-num"
           data-line-number="234"
           id="L234" href="#L234">234</a><a class="file-line-num diff-line-num"
           data-line-number="235"
           id="L235" href="#L235">235</a><a class="file-line-num diff-line-num"
           data-line-number="236"
           id="L236" href="#L236">236</a><a class="file-line-num diff-line-num"
           data-line-number="237"
           id="L237" href="#L237">237</a><a class="file-line-num diff-line-num"
           data-line-number="238"
           id="L238" href="#L238">238</a><a class="file-line-num diff-line-num"
           data-line-number="239"
           id="L239" href="#L239">239</a><a class="file-line-num diff-line-num"
           data-line-number="240"
           id="L240" href="#L240">240</a><a class="file-line-num diff-line-num"
           data-line-number="241"
           id="L241" href="#L241">241</a><a class="file-line-num diff-line-num"
           data-line-number="242"
           id="L242" href="#L242">242</a><a class="file-line-num diff-line-num"
           data-line-number="243"
           id="L243" href="#L243">243</a><a class="file-line-num diff-line-num"
           data-line-number="244"
           id="L244" href="#L244">244</a><a class="file-line-num diff-line-num"
           data-line-number="245"
           id="L245" href="#L245">245</a><a class="file-line-num diff-line-num"
           data-line-number="246"
           id="L246" href="#L246">246</a><a class="file-line-num diff-line-num"
           data-line-number="247"
           id="L247" href="#L247">247</a><a class="file-line-num diff-line-num"
           data-line-number="248"
           id="L248" href="#L248">248</a><a class="file-line-num diff-line-num"
           data-line-number="249"
           id="L249" href="#L249">249</a><a class="file-line-num diff-line-num"
           data-line-number="250"
           id="L250" href="#L250">250</a><a class="file-line-num diff-line-num"
           data-line-number="251"
           id="L251" href="#L251">251</a><a class="file-line-num diff-line-num"
           data-line-number="252"
           id="L252" href="#L252">252</a><a class="file-line-num diff-line-num"
           data-line-number="253"
           id="L253" href="#L253">253</a><a class="file-line-num diff-line-num"
           data-line-number="254"
           id="L254" href="#L254">254</a><a class="file-line-num diff-line-num"
           data-line-number="255"
           id="L255" href="#L255">255</a><a class="file-line-num diff-line-num"
           data-line-number="256"
           id="L256" href="#L256">256</a><a class="file-line-num diff-line-num"
           data-line-number="257"
           id="L257" href="#L257">257</a><a class="file-line-num diff-line-num"
           data-line-number="258"
           id="L258" href="#L258">258</a><a class="file-line-num diff-line-num"
           data-line-number="259"
           id="L259" href="#L259">259</a><a class="file-line-num diff-line-num"
           data-line-number="260"
           id="L260" href="#L260">260</a><a class="file-line-num diff-line-num"
           data-line-number="261"
           id="L261" href="#L261">261</a><a class="file-line-num diff-line-num"
           data-line-number="262"
           id="L262" href="#L262">262</a><a class="file-line-num diff-line-num"
           data-line-number="263"
           id="L263" href="#L263">263</a><a class="file-line-num diff-line-num"
           data-line-number="264"
           id="L264" href="#L264">264</a><a class="file-line-num diff-line-num"
           data-line-number="265"
           id="L265" href="#L265">265</a><a class="file-line-num diff-line-num"
           data-line-number="266"
           id="L266" href="#L266">266</a><a class="file-line-num diff-line-num"
           data-line-number="267"
           id="L267" href="#L267">267</a><a class="file-line-num diff-line-num"
           data-line-number="268"
           id="L268" href="#L268">268</a><a class="file-line-num diff-line-num"
           data-line-number="269"
           id="L269" href="#L269">269</a><a class="file-line-num diff-line-num"
           data-line-number="270"
           id="L270" href="#L270">270</a><a class="file-line-num diff-line-num"
           data-line-number="271"
           id="L271" href="#L271">271</a><a class="file-line-num diff-line-num"
           data-line-number="272"
           id="L272" href="#L272">272</a><a class="file-line-num diff-line-num"
           data-line-number="273"
           id="L273" href="#L273">273</a><a class="file-line-num diff-line-num"
           data-line-number="274"
           id="L274" href="#L274">274</a><a class="file-line-num diff-line-num"
           data-line-number="275"
           id="L275" href="#L275">275</a><a class="file-line-num diff-line-num"
           data-line-number="276"
           id="L276" href="#L276">276</a><a class="file-line-num diff-line-num"
           data-line-number="277"
           id="L277" href="#L277">277</a><a class="file-line-num diff-line-num"
           data-line-number="278"
           id="L278" href="#L278">278</a><a class="file-line-num diff-line-num"
           data-line-number="279"
           id="L279" href="#L279">279</a><a class="file-line-num diff-line-num"
           data-line-number="280"
           id="L280" href="#L280">280</a><a class="file-line-num diff-line-num"
           data-line-number="281"
           id="L281" href="#L281">281</a><a class="file-line-num diff-line-num"
           data-line-number="282"
           id="L282" href="#L282">282</a><a class="file-line-num diff-line-num"
           data-line-number="283"
           id="L283" href="#L283">283</a><a class="file-line-num diff-line-num"
           data-line-number="284"
           id="L284" href="#L284">284</a><a class="file-line-num diff-line-num"
           data-line-number="285"
           id="L285" href="#L285">285</a><a class="file-line-num diff-line-num"
           data-line-number="286"
           id="L286" href="#L286">286</a><a class="file-line-num diff-line-num"
           data-line-number="287"
           id="L287" href="#L287">287</a><a class="file-line-num diff-line-num"
           data-line-number="288"
           id="L288" href="#L288">288</a><a class="file-line-num diff-line-num"
           data-line-number="289"
           id="L289" href="#L289">289</a><a class="file-line-num diff-line-num"
           data-line-number="290"
           id="L290" href="#L290">290</a><a class="file-line-num diff-line-num"
           data-line-number="291"
           id="L291" href="#L291">291</a><a class="file-line-num diff-line-num"
           data-line-number="292"
           id="L292" href="#L292">292</a><a class="file-line-num diff-line-num"
           data-line-number="293"
           id="L293" href="#L293">293</a><a class="file-line-num diff-line-num"
           data-line-number="294"
           id="L294" href="#L294">294</a><a class="file-line-num diff-line-num"
           data-line-number="295"
           id="L295" href="#L295">295</a><a class="file-line-num diff-line-num"
           data-line-number="296"
           id="L296" href="#L296">296</a><a class="file-line-num diff-line-num"
           data-line-number="297"
           id="L297" href="#L297">297</a><a class="file-line-num diff-line-num"
           data-line-number="298"
           id="L298" href="#L298">298</a><a class="file-line-num diff-line-num"
           data-line-number="299"
           id="L299" href="#L299">299</a><a class="file-line-num diff-line-num"
           data-line-number="300"
           id="L300" href="#L300">300</a><a class="file-line-num diff-line-num"
           data-line-number="301"
           id="L301" href="#L301">301</a><a class="file-line-num diff-line-num"
           data-line-number="302"
           id="L302" href="#L302">302</a><a class="file-line-num diff-line-num"
           data-line-number="303"
           id="L303" href="#L303">303</a><a class="file-line-num diff-line-num"
           data-line-number="304"
           id="L304" href="#L304">304</a><a class="file-line-num diff-line-num"
           data-line-number="305"
           id="L305" href="#L305">305</a><a class="file-line-num diff-line-num"
           data-line-number="306"
           id="L306" href="#L306">306</a><a class="file-line-num diff-line-num"
           data-line-number="307"
           id="L307" href="#L307">307</a><a class="file-line-num diff-line-num"
           data-line-number="308"
           id="L308" href="#L308">308</a><a class="file-line-num diff-line-num"
           data-line-number="309"
           id="L309" href="#L309">309</a><a class="file-line-num diff-line-num"
           data-line-number="310"
           id="L310" href="#L310">310</a><a class="file-line-num diff-line-num"
           data-line-number="311"
           id="L311" href="#L311">311</a><a class="file-line-num diff-line-num"
           data-line-number="312"
           id="L312" href="#L312">312</a><a class="file-line-num diff-line-num"
           data-line-number="313"
           id="L313" href="#L313">313</a><a class="file-line-num diff-line-num"
           data-line-number="314"
           id="L314" href="#L314">314</a><a class="file-line-num diff-line-num"
           data-line-number="315"
           id="L315" href="#L315">315</a><a class="file-line-num diff-line-num"
           data-line-number="316"
           id="L316" href="#L316">316</a><a class="file-line-num diff-line-num"
           data-line-number="317"
           id="L317" href="#L317">317</a><a class="file-line-num diff-line-num"
           data-line-number="318"
           id="L318" href="#L318">318</a><a class="file-line-num diff-line-num"
           data-line-number="319"
           id="L319" href="#L319">319</a><a class="file-line-num diff-line-num"
           data-line-number="320"
           id="L320" href="#L320">320</a><a class="file-line-num diff-line-num"
           data-line-number="321"
           id="L321" href="#L321">321</a><a class="file-line-num diff-line-num"
           data-line-number="322"
           id="L322" href="#L322">322</a><a class="file-line-num diff-line-num"
           data-line-number="323"
           id="L323" href="#L323">323</a><a class="file-line-num diff-line-num"
           data-line-number="324"
           id="L324" href="#L324">324</a><a class="file-line-num diff-line-num"
           data-line-number="325"
           id="L325" href="#L325">325</a><a class="file-line-num diff-line-num"
           data-line-number="326"
           id="L326" href="#L326">326</a><a class="file-line-num diff-line-num"
           data-line-number="327"
           id="L327" href="#L327">327</a><a class="file-line-num diff-line-num"
           data-line-number="328"
           id="L328" href="#L328">328</a><a class="file-line-num diff-line-num"
           data-line-number="329"
           id="L329" href="#L329">329</a><a class="file-line-num diff-line-num"
           data-line-number="330"
           id="L330" href="#L330">330</a><a class="file-line-num diff-line-num"
           data-line-number="331"
           id="L331" href="#L331">331</a><a class="file-line-num diff-line-num"
           data-line-number="332"
           id="L332" href="#L332">332</a><a class="file-line-num diff-line-num"
           data-line-number="333"
           id="L333" href="#L333">333</a><a class="file-line-num diff-line-num"
           data-line-number="334"
           id="L334" href="#L334">334</a><a class="file-line-num diff-line-num"
           data-line-number="335"
           id="L335" href="#L335">335</a><a class="file-line-num diff-line-num"
           data-line-number="336"
           id="L336" href="#L336">336</a><a class="file-line-num diff-line-num"
           data-line-number="337"
           id="L337" href="#L337">337</a><a class="file-line-num diff-line-num"
           data-line-number="338"
           id="L338" href="#L338">338</a><a class="file-line-num diff-line-num"
           data-line-number="339"
           id="L339" href="#L339">339</a><a class="file-line-num diff-line-num"
           data-line-number="340"
           id="L340" href="#L340">340</a><a class="file-line-num diff-line-num"
           data-line-number="341"
           id="L341" href="#L341">341</a><a class="file-line-num diff-line-num"
           data-line-number="342"
           id="L342" href="#L342">342</a><a class="file-line-num diff-line-num"
           data-line-number="343"
           id="L343" href="#L343">343</a><a class="file-line-num diff-line-num"
           data-line-number="344"
           id="L344" href="#L344">344</a><a class="file-line-num diff-line-num"
           data-line-number="345"
           id="L345" href="#L345">345</a><a class="file-line-num diff-line-num"
           data-line-number="346"
           id="L346" href="#L346">346</a><a class="file-line-num diff-line-num"
           data-line-number="347"
           id="L347" href="#L347">347</a><a class="file-line-num diff-line-num"
           data-line-number="348"
           id="L348" href="#L348">348</a><a class="file-line-num diff-line-num"
           data-line-number="349"
           id="L349" href="#L349">349</a><a class="file-line-num diff-line-num"
           data-line-number="350"
           id="L350" href="#L350">350</a><a class="file-line-num diff-line-num"
           data-line-number="351"
           id="L351" href="#L351">351</a><a class="file-line-num diff-line-num"
           data-line-number="352"
           id="L352" href="#L352">352</a><a class="file-line-num diff-line-num"
           data-line-number="353"
           id="L353" href="#L353">353</a><a class="file-line-num diff-line-num"
           data-line-number="354"
           id="L354" href="#L354">354</a><a class="file-line-num diff-line-num"
           data-line-number="355"
           id="L355" href="#L355">355</a><a class="file-line-num diff-line-num"
           data-line-number="356"
           id="L356" href="#L356">356</a><a class="file-line-num diff-line-num"
           data-line-number="357"
           id="L357" href="#L357">357</a><a class="file-line-num diff-line-num"
           data-line-number="358"
           id="L358" href="#L358">358</a><a class="file-line-num diff-line-num"
           data-line-number="359"
           id="L359" href="#L359">359</a><a class="file-line-num diff-line-num"
           data-line-number="360"
           id="L360" href="#L360">360</a><a class="file-line-num diff-line-num"
           data-line-number="361"
           id="L361" href="#L361">361</a><a class="file-line-num diff-line-num"
           data-line-number="362"
           id="L362" href="#L362">362</a><a class="file-line-num diff-line-num"
           data-line-number="363"
           id="L363" href="#L363">363</a><a class="file-line-num diff-line-num"
           data-line-number="364"
           id="L364" href="#L364">364</a><a class="file-line-num diff-line-num"
           data-line-number="365"
           id="L365" href="#L365">365</a><a class="file-line-num diff-line-num"
           data-line-number="366"
           id="L366" href="#L366">366</a><a class="file-line-num diff-line-num"
           data-line-number="367"
           id="L367" href="#L367">367</a><a class="file-line-num diff-line-num"
           data-line-number="368"
           id="L368" href="#L368">368</a><a class="file-line-num diff-line-num"
           data-line-number="369"
           id="L369" href="#L369">369</a><a class="file-line-num diff-line-num"
           data-line-number="370"
           id="L370" href="#L370">370</a><a class="file-line-num diff-line-num"
           data-line-number="371"
           id="L371" href="#L371">371</a><a class="file-line-num diff-line-num"
           data-line-number="372"
           id="L372" href="#L372">372</a><a class="file-line-num diff-line-num"
           data-line-number="373"
           id="L373" href="#L373">373</a><a class="file-line-num diff-line-num"
           data-line-number="374"
           id="L374" href="#L374">374</a><a class="file-line-num diff-line-num"
           data-line-number="375"
           id="L375" href="#L375">375</a><a class="file-line-num diff-line-num"
           data-line-number="376"
           id="L376" href="#L376">376</a><a class="file-line-num diff-line-num"
           data-line-number="377"
           id="L377" href="#L377">377</a><a class="file-line-num diff-line-num"
           data-line-number="378"
           id="L378" href="#L378">378</a><a class="file-line-num diff-line-num"
           data-line-number="379"
           id="L379" href="#L379">379</a><a class="file-line-num diff-line-num"
           data-line-number="380"
           id="L380" href="#L380">380</a><a class="file-line-num diff-line-num"
           data-line-number="381"
           id="L381" href="#L381">381</a><a class="file-line-num diff-line-num"
           data-line-number="382"
           id="L382" href="#L382">382</a><a class="file-line-num diff-line-num"
           data-line-number="383"
           id="L383" href="#L383">383</a><a class="file-line-num diff-line-num"
           data-line-number="384"
           id="L384" href="#L384">384</a><a class="file-line-num diff-line-num"
           data-line-number="385"
           id="L385" href="#L385">385</a><a class="file-line-num diff-line-num"
           data-line-number="386"
           id="L386" href="#L386">386</a><a class="file-line-num diff-line-num"
           data-line-number="387"
           id="L387" href="#L387">387</a><a class="file-line-num diff-line-num"
           data-line-number="388"
           id="L388" href="#L388">388</a><a class="file-line-num diff-line-num"
           data-line-number="389"
           id="L389" href="#L389">389</a><a class="file-line-num diff-line-num"
           data-line-number="390"
           id="L390" href="#L390">390</a><a class="file-line-num diff-line-num"
           data-line-number="391"
           id="L391" href="#L391">391</a><a class="file-line-num diff-line-num"
           data-line-number="392"
           id="L392" href="#L392">392</a><a class="file-line-num diff-line-num"
           data-line-number="393"
           id="L393" href="#L393">393</a><a class="file-line-num diff-line-num"
           data-line-number="394"
           id="L394" href="#L394">394</a><a class="file-line-num diff-line-num"
           data-line-number="395"
           id="L395" href="#L395">395</a><a class="file-line-num diff-line-num"
           data-line-number="396"
           id="L396" href="#L396">396</a><a class="file-line-num diff-line-num"
           data-line-number="397"
           id="L397" href="#L397">397</a><a class="file-line-num diff-line-num"
           data-line-number="398"
           id="L398" href="#L398">398</a><a class="file-line-num diff-line-num"
           data-line-number="399"
           id="L399" href="#L399">399</a><a class="file-line-num diff-line-num"
           data-line-number="400"
           id="L400" href="#L400">400</a><a class="file-line-num diff-line-num"
           data-line-number="401"
           id="L401" href="#L401">401</a><a class="file-line-num diff-line-num"
           data-line-number="402"
           id="L402" href="#L402">402</a><a class="file-line-num diff-line-num"
           data-line-number="403"
           id="L403" href="#L403">403</a><a class="file-line-num diff-line-num"
           data-line-number="404"
           id="L404" href="#L404">404</a><a class="file-line-num diff-line-num"
           data-line-number="405"
           id="L405" href="#L405">405</a><a class="file-line-num diff-line-num"
           data-line-number="406"
           id="L406" href="#L406">406</a><a class="file-line-num diff-line-num"
           data-line-number="407"
           id="L407" href="#L407">407</a><a class="file-line-num diff-line-num"
           data-line-number="408"
           id="L408" href="#L408">408</a><a class="file-line-num diff-line-num"
           data-line-number="409"
           id="L409" href="#L409">409</a><a class="file-line-num diff-line-num"
           data-line-number="410"
           id="L410" href="#L410">410</a><a class="file-line-num diff-line-num"
           data-line-number="411"
           id="L411" href="#L411">411</a><a class="file-line-num diff-line-num"
           data-line-number="412"
           id="L412" href="#L412">412</a><a class="file-line-num diff-line-num"
           data-line-number="413"
           id="L413" href="#L413">413</a><a class="file-line-num diff-line-num"
           data-line-number="414"
           id="L414" href="#L414">414</a><a class="file-line-num diff-line-num"
           data-line-number="415"
           id="L415" href="#L415">415</a><a class="file-line-num diff-line-num"
           data-line-number="416"
           id="L416" href="#L416">416</a><a class="file-line-num diff-line-num"
           data-line-number="417"
           id="L417" href="#L417">417</a><a class="file-line-num diff-line-num"
           data-line-number="418"
           id="L418" href="#L418">418</a><a class="file-line-num diff-line-num"
           data-line-number="419"
           id="L419" href="#L419">419</a><a class="file-line-num diff-line-num"
           data-line-number="420"
           id="L420" href="#L420">420</a><a class="file-line-num diff-line-num"
           data-line-number="421"
           id="L421" href="#L421">421</a><a class="file-line-num diff-line-num"
           data-line-number="422"
           id="L422" href="#L422">422</a><a class="file-line-num diff-line-num"
           data-line-number="423"
           id="L423" href="#L423">423</a><a class="file-line-num diff-line-num"
           data-line-number="424"
           id="L424" href="#L424">424</a><a class="file-line-num diff-line-num"
           data-line-number="425"
           id="L425" href="#L425">425</a><a class="file-line-num diff-line-num"
           data-line-number="426"
           id="L426" href="#L426">426</a><a class="file-line-num diff-line-num"
           data-line-number="427"
           id="L427" href="#L427">427</a><a class="file-line-num diff-line-num"
           data-line-number="428"
           id="L428" href="#L428">428</a><a class="file-line-num diff-line-num"
           data-line-number="429"
           id="L429" href="#L429">429</a><a class="file-line-num diff-line-num"
           data-line-number="430"
           id="L430" href="#L430">430</a><a class="file-line-num diff-line-num"
           data-line-number="431"
           id="L431" href="#L431">431</a><a class="file-line-num diff-line-num"
           data-line-number="432"
           id="L432" href="#L432">432</a><a class="file-line-num diff-line-num"
           data-line-number="433"
           id="L433" href="#L433">433</a><a class="file-line-num diff-line-num"
           data-line-number="434"
           id="L434" href="#L434">434</a><a class="file-line-num diff-line-num"
           data-line-number="435"
           id="L435" href="#L435">435</a><a class="file-line-num diff-line-num"
           data-line-number="436"
           id="L436" href="#L436">436</a><a class="file-line-num diff-line-num"
           data-line-number="437"
           id="L437" href="#L437">437</a><a class="file-line-num diff-line-num"
           data-line-number="438"
           id="L438" href="#L438">438</a><a class="file-line-num diff-line-num"
           data-line-number="439"
           id="L439" href="#L439">439</a><a class="file-line-num diff-line-num"
           data-line-number="440"
           id="L440" href="#L440">440</a><a class="file-line-num diff-line-num"
           data-line-number="441"
           id="L441" href="#L441">441</a><a class="file-line-num diff-line-num"
           data-line-number="442"
           id="L442" href="#L442">442</a><a class="file-line-num diff-line-num"
           data-line-number="443"
           id="L443" href="#L443">443</a><a class="file-line-num diff-line-num"
           data-line-number="444"
           id="L444" href="#L444">444</a><a class="file-line-num diff-line-num"
           data-line-number="445"
           id="L445" href="#L445">445</a><a class="file-line-num diff-line-num"
           data-line-number="446"
           id="L446" href="#L446">446</a><a class="file-line-num diff-line-num"
           data-line-number="447"
           id="L447" href="#L447">447</a><a class="file-line-num diff-line-num"
           data-line-number="448"
           id="L448" href="#L448">448</a><a class="file-line-num diff-line-num"
           data-line-number="449"
           id="L449" href="#L449">449</a><a class="file-line-num diff-line-num"
           data-line-number="450"
           id="L450" href="#L450">450</a><a class="file-line-num diff-line-num"
           data-line-number="451"
           id="L451" href="#L451">451</a><a class="file-line-num diff-line-num"
           data-line-number="452"
           id="L452" href="#L452">452</a><a class="file-line-num diff-line-num"
           data-line-number="453"
           id="L453" href="#L453">453</a><a class="file-line-num diff-line-num"
           data-line-number="454"
           id="L454" href="#L454">454</a><a class="file-line-num diff-line-num"
           data-line-number="455"
           id="L455" href="#L455">455</a><a class="file-line-num diff-line-num"
           data-line-number="456"
           id="L456" href="#L456">456</a><a class="file-line-num diff-line-num"
           data-line-number="457"
           id="L457" href="#L457">457</a><a class="file-line-num diff-line-num"
           data-line-number="458"
           id="L458" href="#L458">458</a><a class="file-line-num diff-line-num"
           data-line-number="459"
           id="L459" href="#L459">459</a><a class="file-line-num diff-line-num"
           data-line-number="460"
           id="L460" href="#L460">460</a><a class="file-line-num diff-line-num"
           data-line-number="461"
           id="L461" href="#L461">461</a><a class="file-line-num diff-line-num"
           data-line-number="462"
           id="L462" href="#L462">462</a><a class="file-line-num diff-line-num"
           data-line-number="463"
           id="L463" href="#L463">463</a><a class="file-line-num diff-line-num"
           data-line-number="464"
           id="L464" href="#L464">464</a><a class="file-line-num diff-line-num"
           data-line-number="465"
           id="L465" href="#L465">465</a><a class="file-line-num diff-line-num"
           data-line-number="466"
           id="L466" href="#L466">466</a><a class="file-line-num diff-line-num"
           data-line-number="467"
           id="L467" href="#L467">467</a><a class="file-line-num diff-line-num"
           data-line-number="468"
           id="L468" href="#L468">468</a><a class="file-line-num diff-line-num"
           data-line-number="469"
           id="L469" href="#L469">469</a><a class="file-line-num diff-line-num"
           data-line-number="470"
           id="L470" href="#L470">470</a><a class="file-line-num diff-line-num"
           data-line-number="471"
           id="L471" href="#L471">471</a><a class="file-line-num diff-line-num"
           data-line-number="472"
           id="L472" href="#L472">472</a><a class="file-line-num diff-line-num"
           data-line-number="473"
           id="L473" href="#L473">473</a><a class="file-line-num diff-line-num"
           data-line-number="474"
           id="L474" href="#L474">474</a><a class="file-line-num diff-line-num"
           data-line-number="475"
           id="L475" href="#L475">475</a><a class="file-line-num diff-line-num"
           data-line-number="476"
           id="L476" href="#L476">476</a><a class="file-line-num diff-line-num"
           data-line-number="477"
           id="L477" href="#L477">477</a><a class="file-line-num diff-line-num"
           data-line-number="478"
           id="L478" href="#L478">478</a><a class="file-line-num diff-line-num"
           data-line-number="479"
           id="L479" href="#L479">479</a><a class="file-line-num diff-line-num"
           data-line-number="480"
           id="L480" href="#L480">480</a><a class="file-line-num diff-line-num"
           data-line-number="481"
           id="L481" href="#L481">481</a><a class="file-line-num diff-line-num"
           data-line-number="482"
           id="L482" href="#L482">482</a><a class="file-line-num diff-line-num"
           data-line-number="483"
           id="L483" href="#L483">483</a><a class="file-line-num diff-line-num"
           data-line-number="484"
           id="L484" href="#L484">484</a><a class="file-line-num diff-line-num"
           data-line-number="485"
           id="L485" href="#L485">485</a><a class="file-line-num diff-line-num"
           data-line-number="486"
           id="L486" href="#L486">486</a><a class="file-line-num diff-line-num"
           data-line-number="487"
           id="L487" href="#L487">487</a><a class="file-line-num diff-line-num"
           data-line-number="488"
           id="L488" href="#L488">488</a><a class="file-line-num diff-line-num"
           data-line-number="489"
           id="L489" href="#L489">489</a><a class="file-line-num diff-line-num"
           data-line-number="490"
           id="L490" href="#L490">490</a><a class="file-line-num diff-line-num"
           data-line-number="491"
           id="L491" href="#L491">491</a><a class="file-line-num diff-line-num"
           data-line-number="492"
           id="L492" href="#L492">492</a><a class="file-line-num diff-line-num"
           data-line-number="493"
           id="L493" href="#L493">493</a><a class="file-line-num diff-line-num"
           data-line-number="494"
           id="L494" href="#L494">494</a><a class="file-line-num diff-line-num"
           data-line-number="495"
           id="L495" href="#L495">495</a><a class="file-line-num diff-line-num"
           data-line-number="496"
           id="L496" href="#L496">496</a><a class="file-line-num diff-line-num"
           data-line-number="497"
           id="L497" href="#L497">497</a><a class="file-line-num diff-line-num"
           data-line-number="498"
           id="L498" href="#L498">498</a><a class="file-line-num diff-line-num"
           data-line-number="499"
           id="L499" href="#L499">499</a><a class="file-line-num diff-line-num"
           data-line-number="500"
           id="L500" href="#L500">500</a><a class="file-line-num diff-line-num"
           data-line-number="501"
           id="L501" href="#L501">501</a><a class="file-line-num diff-line-num"
           data-line-number="502"
           id="L502" href="#L502">502</a><a class="file-line-num diff-line-num"
           data-line-number="503"
           id="L503" href="#L503">503</a><a class="file-line-num diff-line-num"
           data-line-number="504"
           id="L504" href="#L504">504</a><a class="file-line-num diff-line-num"
           data-line-number="505"
           id="L505" href="#L505">505</a><a class="file-line-num diff-line-num"
           data-line-number="506"
           id="L506" href="#L506">506</a><a class="file-line-num diff-line-num"
           data-line-number="507"
           id="L507" href="#L507">507</a><a class="file-line-num diff-line-num"
           data-line-number="508"
           id="L508" href="#L508">508</a><a class="file-line-num diff-line-num"
           data-line-number="509"
           id="L509" href="#L509">509</a><a class="file-line-num diff-line-num"
           data-line-number="510"
           id="L510" href="#L510">510</a><a class="file-line-num diff-line-num"
           data-line-number="511"
           id="L511" href="#L511">511</a><a class="file-line-num diff-line-num"
           data-line-number="512"
           id="L512" href="#L512">512</a><a class="file-line-num diff-line-num"
           data-line-number="513"
           id="L513" href="#L513">513</a><a class="file-line-num diff-line-num"
           data-line-number="514"
           id="L514" href="#L514">514</a><a class="file-line-num diff-line-num"
           data-line-number="515"
           id="L515" href="#L515">515</a><a class="file-line-num diff-line-num"
           data-line-number="516"
           id="L516" href="#L516">516</a><a class="file-line-num diff-line-num"
           data-line-number="517"
           id="L517" href="#L517">517</a><a class="file-line-num diff-line-num"
           data-line-number="518"
           id="L518" href="#L518">518</a><a class="file-line-num diff-line-num"
           data-line-number="519"
           id="L519" href="#L519">519</a><a class="file-line-num diff-line-num"
           data-line-number="520"
           id="L520" href="#L520">520</a><a class="file-line-num diff-line-num"
           data-line-number="521"
           id="L521" href="#L521">521</a><a class="file-line-num diff-line-num"
           data-line-number="522"
           id="L522" href="#L522">522</a><a class="file-line-num diff-line-num"
           data-line-number="523"
           id="L523" href="#L523">523</a><a class="file-line-num diff-line-num"
           data-line-number="524"
           id="L524" href="#L524">524</a><a class="file-line-num diff-line-num"
           data-line-number="525"
           id="L525" href="#L525">525</a><a class="file-line-num diff-line-num"
           data-line-number="526"
           id="L526" href="#L526">526</a><a class="file-line-num diff-line-num"
           data-line-number="527"
           id="L527" href="#L527">527</a><a class="file-line-num diff-line-num"
           data-line-number="528"
           id="L528" href="#L528">528</a><a class="file-line-num diff-line-num"
           data-line-number="529"
           id="L529" href="#L529">529</a><a class="file-line-num diff-line-num"
           data-line-number="530"
           id="L530" href="#L530">530</a><a class="file-line-num diff-line-num"
           data-line-number="531"
           id="L531" href="#L531">531</a><a class="file-line-num diff-line-num"
           data-line-number="532"
           id="L532" href="#L532">532</a><a class="file-line-num diff-line-num"
           data-line-number="533"
           id="L533" href="#L533">533</a><a class="file-line-num diff-line-num"
           data-line-number="534"
           id="L534" href="#L534">534</a><a class="file-line-num diff-line-num"
           data-line-number="535"
           id="L535" href="#L535">535</a><a class="file-line-num diff-line-num"
           data-line-number="536"
           id="L536" href="#L536">536</a><a class="file-line-num diff-line-num"
           data-line-number="537"
           id="L537" href="#L537">537</a><a class="file-line-num diff-line-num"
           data-line-number="538"
           id="L538" href="#L538">538</a><a class="file-line-num diff-line-num"
           data-line-number="539"
           id="L539" href="#L539">539</a><a class="file-line-num diff-line-num"
           data-line-number="540"
           id="L540" href="#L540">540</a><a class="file-line-num diff-line-num"
           data-line-number="541"
           id="L541" href="#L541">541</a><a class="file-line-num diff-line-num"
           data-line-number="542"
           id="L542" href="#L542">542</a><a class="file-line-num diff-line-num"
           data-line-number="543"
           id="L543" href="#L543">543</a><a class="file-line-num diff-line-num"
           data-line-number="544"
           id="L544" href="#L544">544</a><a class="file-line-num diff-line-num"
           data-line-number="545"
           id="L545" href="#L545">545</a><a class="file-line-num diff-line-num"
           data-line-number="546"
           id="L546" href="#L546">546</a><a class="file-line-num diff-line-num"
           data-line-number="547"
           id="L547" href="#L547">547</a><a class="file-line-num diff-line-num"
           data-line-number="548"
           id="L548" href="#L548">548</a><a class="file-line-num diff-line-num"
           data-line-number="549"
           id="L549" href="#L549">549</a><a class="file-line-num diff-line-num"
           data-line-number="550"
           id="L550" href="#L550">550</a><a class="file-line-num diff-line-num"
           data-line-number="551"
           id="L551" href="#L551">551</a><a class="file-line-num diff-line-num"
           data-line-number="552"
           id="L552" href="#L552">552</a><a class="file-line-num diff-line-num"
           data-line-number="553"
           id="L553" href="#L553">553</a><a class="file-line-num diff-line-num"
           data-line-number="554"
           id="L554" href="#L554">554</a><a class="file-line-num diff-line-num"
           data-line-number="555"
           id="L555" href="#L555">555</a><a class="file-line-num diff-line-num"
           data-line-number="556"
           id="L556" href="#L556">556</a><a class="file-line-num diff-line-num"
           data-line-number="557"
           id="L557" href="#L557">557</a><a class="file-line-num diff-line-num"
           data-line-number="558"
           id="L558" href="#L558">558</a><a class="file-line-num diff-line-num"
           data-line-number="559"
           id="L559" href="#L559">559</a><a class="file-line-num diff-line-num"
           data-line-number="560"
           id="L560" href="#L560">560</a><a class="file-line-num diff-line-num"
           data-line-number="561"
           id="L561" href="#L561">561</a><a class="file-line-num diff-line-num"
           data-line-number="562"
           id="L562" href="#L562">562</a><a class="file-line-num diff-line-num"
           data-line-number="563"
           id="L563" href="#L563">563</a><a class="file-line-num diff-line-num"
           data-line-number="564"
           id="L564" href="#L564">564</a><a class="file-line-num diff-line-num"
           data-line-number="565"
           id="L565" href="#L565">565</a><a class="file-line-num diff-line-num"
           data-line-number="566"
           id="L566" href="#L566">566</a>
    </div>
    <div class="blob-content"
         data-blob-id="5afbd23d0e021a57af5234311b7287d5ca25c727"
         data-path="src/main/java/main/repo/EmployeeRepo.java"
         data-qa-selector="file_content">
<pre class="code highlight">
<code>
<span class="line" lang="java" id="LC1"><span class="cm">/*</span></span><span class="line" lang="java" id="LC2"><span class="cm"> * Licensed to the Apache Software Foundation (ASF) under one or more</span></span><span class="line" lang="java" id="LC3"><span class="cm"> * contributor license agreements.  See the NOTICE file distributed with</span></span><span class="line" lang="java" id="LC4"><span class="cm"> * this work for additional information regarding copyright ownership.</span></span><span class="line" lang="java" id="LC5"><span class="cm"> * The ASF licenses this file to You under the Apache License, Version 2.0</span></span><span class="line" lang="java" id="LC6"><span class="cm"> * (the &quot;License&quot;); you may not use this file except in compliance with</span></span><span class="line" lang="java" id="LC7"><span class="cm"> * the License.  You may obtain a copy of the License at</span></span><span class="line" lang="java" id="LC8"><span class="cm"> *</span></span><span class="line" lang="java" id="LC9"><span class="cm"> *      http://www.apache.org/licenses/LICENSE-2.0</span></span><span class="line" lang="java" id="LC10"><span class="cm"> *</span></span><span class="line" lang="java" id="LC11"><span class="cm"> * Unless required by applicable law or agreed to in writing, software</span></span><span class="line" lang="java" id="LC12"><span class="cm"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><span class="line" lang="java" id="LC13"><span class="cm"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><span class="line" lang="java" id="LC14"><span class="cm"> * See the License for the specific language governing permissions and</span></span><span class="line" lang="java" id="LC15"><span class="cm"> * limitations under the License.</span></span><span class="line" lang="java" id="LC16"><span class="cm"> */</span></span><span class="line" lang="java" id="LC17"><span class="kn">package</span><span> </span><span>org.apache.commons.io</span><span>;</span></span><span class="line" lang="java" id="LC18"></span><span class="line" lang="java" id="LC19"><span class="kn">import</span><span> </span><span>java.io.BufferedReader</span><span>;</span></span><span class="line" lang="java" id="LC20"><span class="kn">import</span><span> </span><span>java.io.File</span><span>;</span></span><span class="line" lang="java" id="LC21"><span class="kn">import</span><span> </span><span>java.io.IOException</span><span>;</span></span><span class="line" lang="java" id="LC22"><span class="kn">import</span><span> </span><span>java.io.InputStream</span><span>;</span></span><span class="line" lang="java" id="LC23"><span class="kn">import</span><span> </span><span>java.io.InputStreamReader</span><span>;</span></span><span class="line" lang="java" id="LC24"><span class="kn">import</span><span> </span><span>java.io.OutputStream</span><span>;</span></span><span class="line" lang="java" id="LC25"><span class="kn">import</span><span> </span><span>java.nio.charset.Charset</span><span>;</span></span><span class="line" lang="java" id="LC26"><span class="kn">import</span><span> </span><span>java.time.Duration</span><span>;</span></span><span class="line" lang="java" id="LC27"><span class="kn">import</span><span> </span><span>java.util.ArrayList</span><span>;</span></span><span class="line" lang="java" id="LC28"><span class="kn">import</span><span> </span><span>java.util.Arrays</span><span>;</span></span><span class="line" lang="java" id="LC29"><span class="kn">import</span><span> </span><span>java.util.List</span><span>;</span></span><span class="line" lang="java" id="LC30"><span class="kn">import</span><span> </span><span>java.util.Locale</span><span>;</span></span><span class="line" lang="java" id="LC31"><span class="kn">import</span><span> </span><span>java.util.StringTokenizer</span><span>;</span></span><span class="line" lang="java" id="LC32"></span><span class="line" lang="java" id="LC33"><span class="cm">/**</span></span><span class="line" lang="java" id="LC34"><span class="cm"> * General File System utilities.</span></span><span class="line" lang="java" id="LC35"><span class="cm"> * &lt;p&gt;</span></span><span class="line" lang="java" id="LC36"><span class="cm"> * This class provides static utility methods for general file system</span></span><span class="line" lang="java" id="LC37"><span class="cm"> * functions not provided via the JDK {@link java.io.File File} class.</span></span><span class="line" lang="java" id="LC38"><span class="cm"> * &lt;p&gt;</span></span><span class="line" lang="java" id="LC39"><span class="cm"> * The current functions provided are:</span></span><span class="line" lang="java" id="LC40"><span class="cm"> * &lt;ul&gt;</span></span><span class="line" lang="java" id="LC41"><span class="cm"> * &lt;li&gt;Get the free space on a drive</span></span><span class="line" lang="java" id="LC42"><span class="cm"> * &lt;/ul&gt;</span></span><span class="line" lang="java" id="LC43"><span class="cm"> *</span></span><span class="line" lang="java" id="LC44"><span class="cm"> * @since 1.1</span></span><span class="line" lang="java" id="LC45"><span class="cm"> * @deprecated As of 2.6 deprecated without replacement. Use equivalent</span></span><span class="line" lang="java" id="LC46"><span class="cm"> *  methods in {@link java.nio.file.FileStore} instead, e.g.</span></span><span class="line" lang="java" id="LC47"><span class="cm"> *  {@code Files.getFileStore(Paths.get(&quot;/home&quot;)).getUsableSpace()}</span></span><span class="line" lang="java" id="LC48"><span class="cm"> *  or iterate over {@code FileSystems.getDefault().getFileStores()}</span></span><span class="line" lang="java" id="LC49"><span class="cm"> */</span></span><span class="line" lang="java" id="LC50"><span>@Deprecated</span></span><span class="line" lang="java" id="LC51"><span class="kd">public</span><span> </span><span class="kd">class</span><span> </span><span class="nc">FileSystemUtils</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC52"></span><span class="line" lang="java" id="LC53"><span>    </span><span class="cm">/** Singleton instance, used mainly for testing. */</span></span><span class="line" lang="java" id="LC54"><span>    </span><span class="kd">private</span><span> </span><span class="kd">static</span><span> </span><span class="kd">final</span><span> </span><span>FileSystemUtils</span><span> </span><span>INSTANCE</span><span> </span><span>=</span><span> </span><span class="k">new</span><span> </span><span>FileSystemUtils</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC55"></span><span class="line" lang="java" id="LC56"><span>    </span><span class="cm">/** Operating system state flag for error. */</span></span><span class="line" lang="java" id="LC57"><span>    </span><span class="kd">private</span><span> </span><span class="kd">static</span><span> </span><span class="kd">final</span><span> </span><span class="kt">int</span><span> </span><span>INIT_PROBLEM</span><span> </span><span>=</span><span> </span><span>-</span><span>1</span><span>;</span></span><span class="line" lang="java" id="LC58"><span>    </span><span class="cm">/** Operating system state flag for neither Unix nor Windows. */</span></span><span class="line" lang="java" id="LC59"><span>    </span><span class="kd">private</span><span> </span><span class="kd">static</span><span> </span><span class="kd">final</span><span> </span><span class="kt">int</span><span> </span><span>OTHER</span><span> </span><span>=</span><span> </span><span>0</span><span>;</span></span><span class="line" lang="java" id="LC60"><span>    </span><span class="cm">/** Operating system state flag for Windows. */</span></span><span class="line" lang="java" id="LC61"><span>    </span><span class="kd">private</span><span> </span><span class="kd">static</span><span> </span><span class="kd">final</span><span> </span><span class="kt">int</span><span> </span><span>WINDOWS</span><span> </span><span>=</span><span> </span><span>1</span><span>;</span></span><span class="line" lang="java" id="LC62"><span>    </span><span class="cm">/** Operating system state flag for Unix. */</span></span><span class="line" lang="java" id="LC63"><span>    </span><span class="kd">private</span><span> </span><span class="kd">static</span><span> </span><span class="kd">final</span><span> </span><span class="kt">int</span><span> </span><span>UNIX</span><span> </span><span>=</span><span> </span><span>2</span><span>;</span></span><span class="line" lang="java" id="LC64"><span>    </span><span class="cm">/** Operating system state flag for Posix flavour Unix. */</span></span><span class="line" lang="java" id="LC65"><span>    </span><span class="kd">private</span><span> </span><span class="kd">static</span><span> </span><span class="kd">final</span><span> </span><span class="kt">int</span><span> </span><span>POSIX_UNIX</span><span> </span><span>=</span><span> </span><span>3</span><span>;</span></span><span class="line" lang="java" id="LC66"></span><span class="line" lang="java" id="LC67"><span>    </span><span class="cm">/** The operating system flag. */</span></span><span class="line" lang="java" id="LC68"><span>    </span><span class="kd">private</span><span> </span><span class="kd">static</span><span> </span><span class="kd">final</span><span> </span><span class="kt">int</span><span> </span><span>OS</span><span>;</span></span><span class="line" lang="java" id="LC69"></span><span class="line" lang="java" id="LC70"><span>    </span><span class="cm">/** The path to df */</span></span><span class="line" lang="java" id="LC71"><span>    </span><span class="kd">private</span><span> </span><span class="kd">static</span><span> </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>DF</span><span>;</span></span><span class="line" lang="java" id="LC72"></span><span class="line" lang="java" id="LC73"><span>    </span><span class="kd">static</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC74"><span>        </span><span class="kt">int</span><span> </span><span>os</span><span> </span><span>=</span><span> </span><span>OTHER</span><span>;</span></span><span class="line" lang="java" id="LC75"><span>        </span><span>String</span><span> </span><span>dfPath</span><span> </span><span>=</span><span> </span><span class="s">&quot;df&quot;</span><span>;</span></span><span class="line" lang="java" id="LC76"><span>        </span><span class="k">try</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC77"><span>            </span><span>String</span><span> </span><span>osName</span><span> </span><span>=</span><span> </span><span>System</span><span>.</span><span>getProperty</span><span>(</span><span class="s">&quot;os.name&quot;</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC78"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>osName</span><span> </span><span>==</span><span> </span><span class="kc">null</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC79"><span>                </span><span class="k">throw</span><span> </span><span class="k">new</span><span> </span><span>IOException</span><span>(</span><span class="s">&quot;os.name not found&quot;</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC80"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC81"><span>            </span><span>osName</span><span> </span><span>=</span><span> </span><span>osName</span><span>.</span><span>toLowerCase</span><span>(</span><span>Locale</span><span>.</span><span>ENGLISH</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC82"><span>            </span><span class="cm">// match</span></span><span class="line" lang="java" id="LC83"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>osName</span><span>.</span><span>contains</span><span>(</span><span class="s">&quot;windows&quot;</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC84"><span>                </span><span>os</span><span> </span><span>=</span><span> </span><span>WINDOWS</span><span>;</span></span><span class="line" lang="java" id="LC85"><span>            </span><span>}</span><span> </span><span>else</span><span> </span><span class="k">if</span><span> </span><span>(</span><span>osName</span><span>.</span><span>contains</span><span>(</span><span class="s">&quot;linux&quot;</span><span>)</span><span> </span><span>||</span></span><span class="line" lang="java" id="LC86"><span>                    </span><span>osName</span><span>.</span><span>contains</span><span>(</span><span class="s">&quot;mpe/ix&quot;</span><span>)</span><span> </span><span>||</span></span><span class="line" lang="java" id="LC87"><span>                    </span><span>osName</span><span>.</span><span>contains</span><span>(</span><span class="s">&quot;freebsd&quot;</span><span>)</span><span> </span><span>||</span></span><span class="line" lang="java" id="LC88"><span>                    </span><span>osName</span><span>.</span><span>contains</span><span>(</span><span class="s">&quot;openbsd&quot;</span><span>)</span><span> </span><span>||</span></span><span class="line" lang="java" id="LC89"><span>                    </span><span>osName</span><span>.</span><span>contains</span><span>(</span><span class="s">&quot;irix&quot;</span><span>)</span><span> </span><span>||</span></span><span class="line" lang="java" id="LC90"><span>                    </span><span>osName</span><span>.</span><span>contains</span><span>(</span><span class="s">&quot;digital unix&quot;</span><span>)</span><span> </span><span>||</span></span><span class="line" lang="java" id="LC91"><span>                    </span><span>osName</span><span>.</span><span>contains</span><span>(</span><span class="s">&quot;unix&quot;</span><span>)</span><span> </span><span>||</span></span><span class="line" lang="java" id="LC92"><span>                    </span><span>osName</span><span>.</span><span>contains</span><span>(</span><span class="s">&quot;mac os x&quot;</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC93"><span>                </span><span>os</span><span> </span><span>=</span><span> </span><span>UNIX</span><span>;</span></span><span class="line" lang="java" id="LC94"><span>            </span><span>}</span><span> </span><span>else</span><span> </span><span class="k">if</span><span> </span><span>(</span><span>osName</span><span>.</span><span>contains</span><span>(</span><span class="s">&quot;sun os&quot;</span><span>)</span><span> </span><span>||</span></span><span class="line" lang="java" id="LC95"><span>                    </span><span>osName</span><span>.</span><span>contains</span><span>(</span><span class="s">&quot;sunos&quot;</span><span>)</span><span> </span><span>||</span></span><span class="line" lang="java" id="LC96"><span>                    </span><span>osName</span><span>.</span><span>contains</span><span>(</span><span class="s">&quot;solaris&quot;</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC97"><span>                </span><span>os</span><span> </span><span>=</span><span> </span><span>POSIX_UNIX</span><span>;</span></span><span class="line" lang="java" id="LC98"><span>                </span><span>dfPath</span><span> </span><span>=</span><span> </span><span class="s">&quot;/usr/xpg4/bin/df&quot;</span><span>;</span></span><span class="line" lang="java" id="LC99"><span>            </span><span>}</span><span> </span><span>else</span><span> </span><span class="k">if</span><span> </span><span>(</span><span>osName</span><span>.</span><span>contains</span><span>(</span><span class="s">&quot;hp-ux&quot;</span><span>)</span><span> </span><span>||</span></span><span class="line" lang="java" id="LC100"><span>                    </span><span>osName</span><span>.</span><span>contains</span><span>(</span><span class="s">&quot;aix&quot;</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC101"><span>                </span><span>os</span><span> </span><span>=</span><span> </span><span>POSIX_UNIX</span><span>;</span></span><span class="line" lang="java" id="LC102"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC103"></span><span class="line" lang="java" id="LC104"><span>        </span><span>}</span><span> </span><span class="k">catch</span><span> </span><span>(</span><span class="kd">final</span><span> </span><span>Exception</span><span> </span><span>ex</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC105"><span>            </span><span>os</span><span> </span><span>=</span><span> </span><span>INIT_PROBLEM</span><span>;</span></span><span class="line" lang="java" id="LC106"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC107"><span>        </span><span>OS</span><span> </span><span>=</span><span> </span><span>os</span><span>;</span></span><span class="line" lang="java" id="LC108"><span>        </span><span>DF</span><span> </span><span>=</span><span> </span><span>dfPath</span><span>;</span></span><span class="line" lang="java" id="LC109"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC110"></span><span class="line" lang="java" id="LC111"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC112"><span class="cm">     * Instances should NOT be constructed in standard programming.</span></span><span class="line" lang="java" id="LC113"><span class="cm">     */</span></span><span class="line" lang="java" id="LC114"><span>    </span><span class="kd">public</span><span> </span><span>FileSystemUtils</span><span>(</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC115"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC116"></span><span class="line" lang="java" id="LC117"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC118"><span class="cm">     * Returns the free space on a drive or volume by invoking</span></span><span class="line" lang="java" id="LC119"><span class="cm">     * the command line.</span></span><span class="line" lang="java" id="LC120"><span class="cm">     * This method does not normalize the result, and typically returns</span></span><span class="line" lang="java" id="LC121"><span class="cm">     * bytes on Windows, 512 byte units on OS X and kilobytes on Unix.</span></span><span class="line" lang="java" id="LC122"><span class="cm">     * As this is not very useful, this method is deprecated in favour</span></span><span class="line" lang="java" id="LC123"><span class="cm">     * of {@link #freeSpaceKb(String)} which returns a result in kilobytes.</span></span><span class="line" lang="java" id="LC124"><span class="cm">     * &lt;p&gt;</span></span><span class="line" lang="java" id="LC125"><span class="cm">     * Note that some OS&#39;s are NOT currently supported, including OS/390,</span></span><span class="line" lang="java" id="LC126"><span class="cm">     * OpenVMS.</span></span><span class="line" lang="java" id="LC127"><span class="cm">     * &lt;pre&gt;</span></span><span class="line" lang="java" id="LC128"><span class="cm">     * FileSystemUtils.freeSpace(&quot;C:&quot;);       // Windows</span></span><span class="line" lang="java" id="LC129"><span class="cm">     * FileSystemUtils.freeSpace(&quot;/volume&quot;);  // *nix</span></span><span class="line" lang="java" id="LC130"><span class="cm">     * &lt;/pre&gt;</span></span><span class="line" lang="java" id="LC131"><span class="cm">     * The free space is calculated via the command line.</span></span><span class="line" lang="java" id="LC132"><span class="cm">     * It uses &#39;dir /-c&#39; on Windows and &#39;df&#39; on *nix.</span></span><span class="line" lang="java" id="LC133"><span class="cm">     *</span></span><span class="line" lang="java" id="LC134"><span class="cm">     * @param path  the path to get free space for, not null, not empty on Unix</span></span><span class="line" lang="java" id="LC135"><span class="cm">     * @return the amount of free drive space on the drive or volume</span></span><span class="line" lang="java" id="LC136"><span class="cm">     * @throws IllegalArgumentException if the path is invalid</span></span><span class="line" lang="java" id="LC137"><span class="cm">     * @throws IllegalStateException if an error occurred in initialisation</span></span><span class="line" lang="java" id="LC138"><span class="cm">     * @throws IOException if an error occurs when finding the free space</span></span><span class="line" lang="java" id="LC139"><span class="cm">     * @since 1.1, enhanced OS support in 1.2 and 1.3</span></span><span class="line" lang="java" id="LC140"><span class="cm">     * @deprecated Use freeSpaceKb(String)</span></span><span class="line" lang="java" id="LC141"><span class="cm">     *  Deprecated from 1.3, may be removed in 2.0</span></span><span class="line" lang="java" id="LC142"><span class="cm">     */</span></span><span class="line" lang="java" id="LC143"><span>    </span><span>@</span><span>Deprecated</span></span><span class="line" lang="java" id="LC144"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span class="kt">long</span><span> </span><span>freeSpace</span><span>(</span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>path</span><span>)</span><span> </span><span class="kd">throws</span><span> </span><span>IOException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC145"><span>        </span><span class="k">return</span><span> </span><span>INSTANCE</span><span>.</span><span>freeSpaceOS</span><span>(</span><span>path</span><span>,</span><span> </span><span>OS</span><span>,</span><span> </span><span class="kc">false</span><span>,</span><span> </span><span>Duration</span><span>.</span><span>ofMillis</span><span>(</span><span>-</span><span>1</span><span>)</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC146"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC147"></span><span class="line" lang="java" id="LC148"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC149"><span class="cm">     * Returns the free space on a drive or volume in kibibytes (1024 bytes)</span></span><span class="line" lang="java" id="LC150"><span class="cm">     * by invoking the command line.</span></span><span class="line" lang="java" id="LC151"><span class="cm">     * &lt;pre&gt;</span></span><span class="line" lang="java" id="LC152"><span class="cm">     * FileSystemUtils.freeSpaceKb(&quot;C:&quot;);       // Windows</span></span><span class="line" lang="java" id="LC153"><span class="cm">     * FileSystemUtils.freeSpaceKb(&quot;/volume&quot;);  // *nix</span></span><span class="line" lang="java" id="LC154"><span class="cm">     * &lt;/pre&gt;</span></span><span class="line" lang="java" id="LC155"><span class="cm">     * The free space is calculated via the command line.</span></span><span class="line" lang="java" id="LC156"><span class="cm">     * It uses &#39;dir /-c&#39; on Windows, &#39;df -kP&#39; on AIX/HP-UX and &#39;df -k&#39; on other Unix.</span></span><span class="line" lang="java" id="LC157"><span class="cm">     * &lt;p&gt;</span></span><span class="line" lang="java" id="LC158"><span class="cm">     * In order to work, you must be running Windows, or have a implementation of</span></span><span class="line" lang="java" id="LC159"><span class="cm">     * Unix df that supports GNU format when passed -k (or -kP). If you are going</span></span><span class="line" lang="java" id="LC160"><span class="cm">     * to rely on this code, please check that it works on your OS by running</span></span><span class="line" lang="java" id="LC161"><span class="cm">     * some simple tests to compare the command line with the output from this class.</span></span><span class="line" lang="java" id="LC162"><span class="cm">     * If your operating system isn&#39;t supported, please raise a JIRA call detailing</span></span><span class="line" lang="java" id="LC163"><span class="cm">     * the exact result from df -k and as much other detail as possible, thanks.</span></span><span class="line" lang="java" id="LC164"><span class="cm">     *</span></span><span class="line" lang="java" id="LC165"><span class="cm">     * @param path  the path to get free space for, not null, not empty on Unix</span></span><span class="line" lang="java" id="LC166"><span class="cm">     * @return the amount of free drive space on the drive or volume in kilobytes</span></span><span class="line" lang="java" id="LC167"><span class="cm">     * @throws IllegalArgumentException if the path is invalid</span></span><span class="line" lang="java" id="LC168"><span class="cm">     * @throws IllegalStateException if an error occurred in initialisation</span></span><span class="line" lang="java" id="LC169"><span class="cm">     * @throws IOException if an error occurs when finding the free space</span></span><span class="line" lang="java" id="LC170"><span class="cm">     * @since 1.2, enhanced OS support in 1.3</span></span><span class="line" lang="java" id="LC171"><span class="cm">     * @deprecated As of 2.6 deprecated without replacement. Please use {@link java.nio.file.FileStore#getUsableSpace()}.</span></span><span class="line" lang="java" id="LC172"><span class="cm">     */</span></span><span class="line" lang="java" id="LC173"><span>    </span><span>@</span><span>Deprecated</span></span><span class="line" lang="java" id="LC174"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span class="kt">long</span><span> </span><span>freeSpaceKb</span><span>(</span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>path</span><span>)</span><span> </span><span class="kd">throws</span><span> </span><span>IOException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC175"><span>        </span><span class="k">return</span><span> </span><span>freeSpaceKb</span><span>(</span><span>path</span><span>,</span><span> </span><span>-</span><span>1</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC176"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC177"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC178"><span class="cm">     * Returns the free space on a drive or volume in kibibytes (1024 bytes)</span></span><span class="line" lang="java" id="LC179"><span class="cm">     * by invoking the command line.</span></span><span class="line" lang="java" id="LC180"><span class="cm">     * &lt;pre&gt;</span></span><span class="line" lang="java" id="LC181"><span class="cm">     * FileSystemUtils.freeSpaceKb(&quot;C:&quot;);       // Windows</span></span><span class="line" lang="java" id="LC182"><span class="cm">     * FileSystemUtils.freeSpaceKb(&quot;/volume&quot;);  // *nix</span></span><span class="line" lang="java" id="LC183"><span class="cm">     * &lt;/pre&gt;</span></span><span class="line" lang="java" id="LC184"><span class="cm">     * The free space is calculated via the command line.</span></span><span class="line" lang="java" id="LC185"><span class="cm">     * It uses &#39;dir /-c&#39; on Windows, &#39;df -kP&#39; on AIX/HP-UX and &#39;df -k&#39; on other Unix.</span></span><span class="line" lang="java" id="LC186"><span class="cm">     * &lt;p&gt;</span></span><span class="line" lang="java" id="LC187"><span class="cm">     * In order to work, you must be running Windows, or have a implementation of</span></span><span class="line" lang="java" id="LC188"><span class="cm">     * Unix df that supports GNU format when passed -k (or -kP). If you are going</span></span><span class="line" lang="java" id="LC189"><span class="cm">     * to rely on this code, please check that it works on your OS by running</span></span><span class="line" lang="java" id="LC190"><span class="cm">     * some simple tests to compare the command line with the output from this class.</span></span><span class="line" lang="java" id="LC191"><span class="cm">     * If your operating system isn&#39;t supported, please raise a JIRA call detailing</span></span><span class="line" lang="java" id="LC192"><span class="cm">     * the exact result from df -k and as much other detail as possible, thanks.</span></span><span class="line" lang="java" id="LC193"><span class="cm">     *</span></span><span class="line" lang="java" id="LC194"><span class="cm">     * @param path  the path to get free space for, not null, not empty on Unix</span></span><span class="line" lang="java" id="LC195"><span class="cm">     * @param timeout The timeout amount in milliseconds or no timeout if the value</span></span><span class="line" lang="java" id="LC196"><span class="cm">     *  is zero or less</span></span><span class="line" lang="java" id="LC197"><span class="cm">     * @return the amount of free drive space on the drive or volume in kilobytes</span></span><span class="line" lang="java" id="LC198"><span class="cm">     * @throws IllegalArgumentException if the path is invalid</span></span><span class="line" lang="java" id="LC199"><span class="cm">     * @throws IllegalStateException if an error occurred in initialisation</span></span><span class="line" lang="java" id="LC200"><span class="cm">     * @throws IOException if an error occurs when finding the free space</span></span><span class="line" lang="java" id="LC201"><span class="cm">     * @since 2.0</span></span><span class="line" lang="java" id="LC202"><span class="cm">     * @deprecated As of 2.6 deprecated without replacement. Please use {@link java.nio.file.FileStore#getUsableSpace()}.</span></span><span class="line" lang="java" id="LC203"><span class="cm">     */</span></span><span class="line" lang="java" id="LC204"><span>    </span><span>@</span><span>Deprecated</span></span><span class="line" lang="java" id="LC205"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span class="kt">long</span><span> </span><span>freeSpaceKb</span><span>(</span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>path</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span class="kt">long</span><span> </span><span>timeout</span><span>)</span><span> </span><span class="kd">throws</span><span> </span><span>IOException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC206"><span>        </span><span class="k">return</span><span> </span><span>INSTANCE</span><span>.</span><span>freeSpaceOS</span><span>(</span><span>path</span><span>,</span><span> </span><span>OS</span><span>,</span><span> </span><span class="kc">true</span><span>,</span><span> </span><span>Duration</span><span>.</span><span>ofMillis</span><span>(</span><span>timeout</span><span>)</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC207"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC208"></span><span class="line" lang="java" id="LC209"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC210"><span class="cm">     * Returns the free space for the working directory</span></span><span class="line" lang="java" id="LC211"><span class="cm">     * in kibibytes (1024 bytes) by invoking the command line.</span></span><span class="line" lang="java" id="LC212"><span class="cm">     * &lt;p&gt;</span></span><span class="line" lang="java" id="LC213"><span class="cm">     * Identical to:</span></span><span class="line" lang="java" id="LC214"><span class="cm">     * &lt;pre&gt;</span></span><span class="line" lang="java" id="LC215"><span class="cm">     * freeSpaceKb(new File(&quot;.&quot;).getAbsolutePath())</span></span><span class="line" lang="java" id="LC216"><span class="cm">     * &lt;/pre&gt;</span></span><span class="line" lang="java" id="LC217"><span class="cm">     * @return the amount of free drive space on the drive or volume in kilobytes</span></span><span class="line" lang="java" id="LC218"><span class="cm">     * @throws IllegalStateException if an error occurred in initialisation</span></span><span class="line" lang="java" id="LC219"><span class="cm">     * @throws IOException if an error occurs when finding the free space</span></span><span class="line" lang="java" id="LC220"><span class="cm">     * @since 2.0</span></span><span class="line" lang="java" id="LC221"><span class="cm">     * @deprecated As of 2.6 deprecated without replacement. Please use {@link java.nio.file.FileStore#getUsableSpace()}.</span></span><span class="line" lang="java" id="LC222"><span class="cm">     */</span></span><span class="line" lang="java" id="LC223"><span>    </span><span>@</span><span>Deprecated</span></span><span class="line" lang="java" id="LC224"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span class="kt">long</span><span> </span><span>freeSpaceKb</span><span>(</span><span>)</span><span> </span><span class="kd">throws</span><span> </span><span>IOException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC225"><span>        </span><span class="k">return</span><span> </span><span>freeSpaceKb</span><span>(</span><span>-</span><span>1</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC226"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC227"></span><span class="line" lang="java" id="LC228"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC229"><span class="cm">     * Returns the free space for the working directory</span></span><span class="line" lang="java" id="LC230"><span class="cm">     * in kibibytes (1024 bytes) by invoking the command line.</span></span><span class="line" lang="java" id="LC231"><span class="cm">     * &lt;p&gt;</span></span><span class="line" lang="java" id="LC232"><span class="cm">     * Identical to:</span></span><span class="line" lang="java" id="LC233"><span class="cm">     * &lt;pre&gt;</span></span><span class="line" lang="java" id="LC234"><span class="cm">     * freeSpaceKb(new File(&quot;.&quot;).getAbsolutePath())</span></span><span class="line" lang="java" id="LC235"><span class="cm">     * &lt;/pre&gt;</span></span><span class="line" lang="java" id="LC236"><span class="cm">     * @param timeout The timeout amount in milliseconds or no timeout if the value</span></span><span class="line" lang="java" id="LC237"><span class="cm">     *  is zero or less</span></span><span class="line" lang="java" id="LC238"><span class="cm">     * @return the amount of free drive space on the drive or volume in kilobytes</span></span><span class="line" lang="java" id="LC239"><span class="cm">     * @throws IllegalStateException if an error occurred in initialisation</span></span><span class="line" lang="java" id="LC240"><span class="cm">     * @throws IOException if an error occurs when finding the free space</span></span><span class="line" lang="java" id="LC241"><span class="cm">     * @since 2.0</span></span><span class="line" lang="java" id="LC242"><span class="cm">     * @deprecated As of 2.6 deprecated without replacement. Please use {@link java.nio.file.FileStore#getUsableSpace()}.</span></span><span class="line" lang="java" id="LC243"><span class="cm">     */</span></span><span class="line" lang="java" id="LC244"><span>    </span><span>@</span><span>Deprecated</span></span><span class="line" lang="java" id="LC245"><span>    </span><span class="kd">public</span><span> </span><span class="kd">static</span><span> </span><span class="kt">long</span><span> </span><span>freeSpaceKb</span><span>(</span><span class="kd">final</span><span> </span><span class="kt">long</span><span> </span><span>timeout</span><span>)</span><span> </span><span class="kd">throws</span><span> </span><span>IOException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC246"><span>        </span><span class="k">return</span><span> </span><span>freeSpaceKb</span><span>(</span><span class="k">new</span><span> </span><span>File</span><span>(</span><span class="s">&quot;.&quot;</span><span>)</span><span>.</span><span>getAbsolutePath</span><span>(</span><span>)</span><span>,</span><span> </span><span>timeout</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC247"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC248"></span><span class="line" lang="java" id="LC249"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC250"><span class="cm">     * Returns the free space on a drive or volume in a cross-platform manner.</span></span><span class="line" lang="java" id="LC251"><span class="cm">     * Note that some OS&#39;s are NOT currently supported, including OS/390.</span></span><span class="line" lang="java" id="LC252"><span class="cm">     * &lt;pre&gt;</span></span><span class="line" lang="java" id="LC253"><span class="cm">     * FileSystemUtils.freeSpace(&quot;C:&quot;);  // Windows</span></span><span class="line" lang="java" id="LC254"><span class="cm">     * FileSystemUtils.freeSpace(&quot;/volume&quot;);  // *nix</span></span><span class="line" lang="java" id="LC255"><span class="cm">     * &lt;/pre&gt;</span></span><span class="line" lang="java" id="LC256"><span class="cm">     * The free space is calculated via the command line.</span></span><span class="line" lang="java" id="LC257"><span class="cm">     * It uses &#39;dir /-c&#39; on Windows and &#39;df&#39; on *nix.</span></span><span class="line" lang="java" id="LC258"><span class="cm">     *</span></span><span class="line" lang="java" id="LC259"><span class="cm">     * @param path  the path to get free space for, not null, not empty on Unix</span></span><span class="line" lang="java" id="LC260"><span class="cm">     * @param os  the operating system code</span></span><span class="line" lang="java" id="LC261"><span class="cm">     * @param kb  whether to normalize to kilobytes</span></span><span class="line" lang="java" id="LC262"><span class="cm">     * @param timeout The timeout amount in milliseconds or no timeout if the value</span></span><span class="line" lang="java" id="LC263"><span class="cm">     *  is zero or less</span></span><span class="line" lang="java" id="LC264"><span class="cm">     * @return the amount of free drive space on the drive or volume</span></span><span class="line" lang="java" id="LC265"><span class="cm">     * @throws IllegalArgumentException if the path is invalid</span></span><span class="line" lang="java" id="LC266"><span class="cm">     * @throws IllegalStateException if an error occurred in initialisation</span></span><span class="line" lang="java" id="LC267"><span class="cm">     * @throws IOException if an error occurs when finding the free space</span></span><span class="line" lang="java" id="LC268"><span class="cm">     */</span></span><span class="line" lang="java" id="LC269"><span>    </span><span class="kt">long</span><span> </span><span>freeSpaceOS</span><span>(</span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>path</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span class="kt">int</span><span> </span><span>os</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span class="kt">boolean</span><span> </span><span>kb</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>Duration</span><span> </span><span>timeout</span><span>)</span><span> </span><span class="kd">throws</span><span> </span><span>IOException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC270"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>path</span><span> </span><span>==</span><span> </span><span class="kc">null</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC271"><span>            </span><span class="k">throw</span><span> </span><span class="k">new</span><span> </span><span>IllegalArgumentException</span><span>(</span><span class="s">&quot;Path must not be null&quot;</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC272"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC273"><span>        </span><span>switch</span><span> </span><span>(</span><span>os</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC274"><span>            </span><span>case</span><span> </span><span>WINDOWS</span><span>:</span></span><span class="line" lang="java" id="LC275"><span>                </span><span class="k">return</span><span> </span><span>kb</span><span> </span><span>?</span><span> </span><span>freeSpaceWindows</span><span>(</span><span>path</span><span>,</span><span> </span><span>timeout</span><span>)</span><span> </span><span>/</span><span> </span><span>FileUtils</span><span>.</span><span>ONE_KB</span><span> </span><span>:</span><span> </span><span>freeSpaceWindows</span><span>(</span><span>path</span><span>,</span><span> </span><span>timeout</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC276"><span>            </span><span>case</span><span> </span><span>UNIX</span><span>:</span></span><span class="line" lang="java" id="LC277"><span>                </span><span class="k">return</span><span> </span><span>freeSpaceUnix</span><span>(</span><span>path</span><span>,</span><span> </span><span>kb</span><span>,</span><span> </span><span class="kc">false</span><span>,</span><span> </span><span>timeout</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC278"><span>            </span><span>case</span><span> </span><span>POSIX_UNIX</span><span>:</span></span><span class="line" lang="java" id="LC279"><span>                </span><span class="k">return</span><span> </span><span>freeSpaceUnix</span><span>(</span><span>path</span><span>,</span><span> </span><span>kb</span><span>,</span><span> </span><span class="kc">true</span><span>,</span><span> </span><span>timeout</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC280"><span>            </span><span>case</span><span> </span><span>OTHER</span><span>:</span></span><span class="line" lang="java" id="LC281"><span>                </span><span class="k">throw</span><span> </span><span class="k">new</span><span> </span><span>IllegalStateException</span><span>(</span><span class="s">&quot;Unsupported operating system&quot;</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC282"><span>            </span><span>default</span><span>:</span></span><span class="line" lang="java" id="LC283"><span>                </span><span class="k">throw</span><span> </span><span class="k">new</span><span> </span><span>IllegalStateException</span><span>(</span></span><span class="line" lang="java" id="LC284"><span>                  </span><span class="s">&quot;Exception caught when determining operating system&quot;</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC285"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC286"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC287"></span><span class="line" lang="java" id="LC288"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC289"><span class="cm">     * Find free space on the Windows platform using the &#39;dir&#39; command.</span></span><span class="line" lang="java" id="LC290"><span class="cm">     *</span></span><span class="line" lang="java" id="LC291"><span class="cm">     * @param path  the path to get free space for, including the colon</span></span><span class="line" lang="java" id="LC292"><span class="cm">     * @param timeout The timeout amount in milliseconds or no timeout if the value</span></span><span class="line" lang="java" id="LC293"><span class="cm">     *  is zero or less</span></span><span class="line" lang="java" id="LC294"><span class="cm">     * @return the amount of free drive space on the drive</span></span><span class="line" lang="java" id="LC295"><span class="cm">     * @throws IOException if an error occurs</span></span><span class="line" lang="java" id="LC296"><span class="cm">     */</span></span><span class="line" lang="java" id="LC297"><span>    </span><span class="kt">long</span><span> </span><span>freeSpaceWindows</span><span>(</span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>path</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>Duration</span><span> </span><span>timeout</span><span>)</span><span> </span><span class="kd">throws</span><span> </span><span>IOException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC298"><span>        </span><span>String</span><span> </span><span>normPath</span><span> </span><span>=</span><span> </span><span>FilenameUtils</span><span>.</span><span>normalize</span><span>(</span><span>path</span><span>,</span><span> </span><span class="kc">false</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC299"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>normPath</span><span> </span><span>==</span><span> </span><span class="kc">null</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC300"><span>            </span><span class="k">throw</span><span> </span><span class="k">new</span><span> </span><span>IllegalArgumentException</span><span>(</span><span>path</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC301"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC302"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>!</span><span>normPath</span><span>.</span><span>isEmpty</span><span>(</span><span>)</span><span> </span><span>&amp;&amp;</span><span> </span><span>normPath</span><span>.</span><span>charAt</span><span>(</span><span>0</span><span>)</span><span> </span><span>!=</span><span> </span><span class="s">&#39;&quot;&#39;</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC303"><span>            </span><span>normPath</span><span> </span><span>=</span><span> </span><span class="s">&quot;\&quot;&quot;</span><span> </span><span>+</span><span> </span><span>normPath</span><span> </span><span>+</span><span> </span><span class="s">&quot;\&quot;&quot;</span><span>;</span></span><span class="line" lang="java" id="LC304"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC305"></span><span class="line" lang="java" id="LC306"><span>        </span><span class="cm">// build and run the &#39;dir&#39; command</span></span><span class="line" lang="java" id="LC307"><span>        </span><span class="kd">final</span><span> </span><span>String</span><span>[</span><span>]</span><span> </span><span>cmdAttribs</span><span> </span><span>=</span><span> </span><span>{</span><span class="s">&quot;cmd.exe&quot;</span><span>,</span><span> </span><span class="s">&quot;/C&quot;</span><span>,</span><span> </span><span class="s">&quot;dir /a /-c &quot;</span><span> </span><span>+</span><span> </span><span>normPath</span><span>}</span><span>;</span></span><span class="line" lang="java" id="LC308"></span><span class="line" lang="java" id="LC309"><span>        </span><span class="cm">// read in the output of the command to an ArrayList</span></span><span class="line" lang="java" id="LC310"><span>        </span><span class="kd">final</span><span> </span><span>List</span><span>&lt;</span><span>String</span><span>&gt;</span><span> </span><span>lines</span><span> </span><span>=</span><span> </span><span>performCommand</span><span>(</span><span>cmdAttribs</span><span>,</span><span> </span><span>Integer</span><span>.</span><span>MAX_VALUE</span><span>,</span><span> </span><span>timeout</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC311"></span><span class="line" lang="java" id="LC312"><span>        </span><span class="cm">// now iterate over the lines we just read and find the LAST</span></span><span class="line" lang="java" id="LC313"><span>        </span><span class="cm">// non-empty line (the free space bytes should be in the last element</span></span><span class="line" lang="java" id="LC314"><span>        </span><span class="cm">// of the ArrayList anyway, but this will ensure it works even if it&#39;s</span></span><span class="line" lang="java" id="LC315"><span>        </span><span class="cm">// not, still assuming it is on the last non-blank line)</span></span><span class="line" lang="java" id="LC316"><span>        </span><span class="k">for</span><span> </span><span>(</span><span class="kt">int</span><span> </span><span>i</span><span> </span><span>=</span><span> </span><span>lines</span><span>.</span><span>size</span><span>(</span><span>)</span><span> </span><span>-</span><span> </span><span>1</span><span>;</span><span> </span><span>i</span><span> </span><span>&gt;=</span><span> </span><span>0</span><span>;</span><span> </span><span>i</span><span>-</span><span>-</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC317"><span>            </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>line</span><span> </span><span>=</span><span> </span><span>lines</span><span>.</span><span>get</span><span>(</span><span>i</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC318"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>!</span><span>line</span><span>.</span><span>isEmpty</span><span>(</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC319"><span>                </span><span class="k">return</span><span> </span><span>parseDir</span><span>(</span><span>line</span><span>,</span><span> </span><span>normPath</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC320"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC321"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC322"><span>        </span><span class="cm">// all lines are blank</span></span><span class="line" lang="java" id="LC323"><span>        </span><span class="k">throw</span><span> </span><span class="k">new</span><span> </span><span>IOException</span><span>(</span></span><span class="line" lang="java" id="LC324"><span>                </span><span class="s">&quot;Command line &#39;dir /-c&#39; did not return any info &quot;</span><span> </span><span>+</span></span><span class="line" lang="java" id="LC325"><span>                </span><span class="s">&quot;for path &#39;&quot;</span><span> </span><span>+</span><span> </span><span>normPath</span><span> </span><span>+</span><span> </span><span class="s">&quot;&#39;&quot;</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC326"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC327"></span><span class="line" lang="java" id="LC328"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC329"><span class="cm">     * Parses the Windows dir response last line</span></span><span class="line" lang="java" id="LC330"><span class="cm">     *</span></span><span class="line" lang="java" id="LC331"><span class="cm">     * @param line  the line to parse</span></span><span class="line" lang="java" id="LC332"><span class="cm">     * @param path  the path that was sent</span></span><span class="line" lang="java" id="LC333"><span class="cm">     * @return the number of bytes</span></span><span class="line" lang="java" id="LC334"><span class="cm">     * @throws IOException if an error occurs</span></span><span class="line" lang="java" id="LC335"><span class="cm">     */</span></span><span class="line" lang="java" id="LC336"><span>    </span><span class="kt">long</span><span> </span><span>parseDir</span><span>(</span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>line</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>path</span><span>)</span><span> </span><span class="kd">throws</span><span> </span><span>IOException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC337"><span>        </span><span class="cm">// read from the end of the line to find the last numeric</span></span><span class="line" lang="java" id="LC338"><span>        </span><span class="cm">// character on the line, then continue until we find the first</span></span><span class="line" lang="java" id="LC339"><span>        </span><span class="cm">// non-numeric character, and everything between that and the last</span></span><span class="line" lang="java" id="LC340"><span>        </span><span class="cm">// numeric character inclusive is our free space bytes count</span></span><span class="line" lang="java" id="LC341"><span>        </span><span class="kt">int</span><span> </span><span>bytesStart</span><span> </span><span>=</span><span> </span><span>0</span><span>;</span></span><span class="line" lang="java" id="LC342"><span>        </span><span class="kt">int</span><span> </span><span>bytesEnd</span><span> </span><span>=</span><span> </span><span>0</span><span>;</span></span><span class="line" lang="java" id="LC343"><span>        </span><span class="kt">int</span><span> </span><span>j</span><span> </span><span>=</span><span> </span><span>line</span><span>.</span><span>length</span><span>(</span><span>)</span><span> </span><span>-</span><span> </span><span>1</span><span>;</span></span><span class="line" lang="java" id="LC344"><span>        </span><span>innerLoop1</span><span>:</span><span> </span><span class="k">while</span><span> </span><span>(</span><span>j</span><span> </span><span>&gt;=</span><span> </span><span>0</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC345"><span>            </span><span class="kd">final</span><span> </span><span class="kt">char</span><span> </span><span>c</span><span> </span><span>=</span><span> </span><span>line</span><span>.</span><span>charAt</span><span>(</span><span>j</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC346"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>Character</span><span>.</span><span>isDigit</span><span>(</span><span>c</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC347"><span>              </span><span class="cm">// found the last numeric character, this is the end of</span></span><span class="line" lang="java" id="LC348"><span>              </span><span class="cm">// the free space bytes count</span></span><span class="line" lang="java" id="LC349"><span>              </span><span>bytesEnd</span><span> </span><span>=</span><span> </span><span>j</span><span> </span><span>+</span><span> </span><span>1</span><span>;</span></span><span class="line" lang="java" id="LC350"><span>              </span><span class="k">break</span><span> </span><span>innerLoop1</span><span>;</span></span><span class="line" lang="java" id="LC351"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC352"><span>            </span><span>j</span><span>-</span><span>-</span><span>;</span></span><span class="line" lang="java" id="LC353"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC354"><span>        </span><span>innerLoop2</span><span>:</span><span> </span><span class="k">while</span><span> </span><span>(</span><span>j</span><span> </span><span>&gt;=</span><span> </span><span>0</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC355"><span>            </span><span class="kd">final</span><span> </span><span class="kt">char</span><span> </span><span>c</span><span> </span><span>=</span><span> </span><span>line</span><span>.</span><span>charAt</span><span>(</span><span>j</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC356"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>!</span><span>Character</span><span>.</span><span>isDigit</span><span>(</span><span>c</span><span>)</span><span> </span><span>&amp;&amp;</span><span> </span><span>c</span><span> </span><span>!=</span><span> </span><span class="s">&#39;,&#39;</span><span> </span><span>&amp;&amp;</span><span> </span><span>c</span><span> </span><span>!=</span><span> </span><span class="s">&#39;.&#39;</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC357"><span>              </span><span class="cm">// found the next non-numeric character, this is the</span></span><span class="line" lang="java" id="LC358"><span>              </span><span class="cm">// beginning of the free space bytes count</span></span><span class="line" lang="java" id="LC359"><span>              </span><span>bytesStart</span><span> </span><span>=</span><span> </span><span>j</span><span> </span><span>+</span><span> </span><span>1</span><span>;</span></span><span class="line" lang="java" id="LC360"><span>              </span><span class="k">break</span><span> </span><span>innerLoop2</span><span>;</span></span><span class="line" lang="java" id="LC361"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC362"><span>            </span><span>j</span><span>-</span><span>-</span><span>;</span></span><span class="line" lang="java" id="LC363"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC364"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>j</span><span> </span><span>&lt;</span><span> </span><span>0</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC365"><span>            </span><span class="k">throw</span><span> </span><span class="k">new</span><span> </span><span>IOException</span><span>(</span></span><span class="line" lang="java" id="LC366"><span>                    </span><span class="s">&quot;Command line &#39;dir /-c&#39; did not return valid info &quot;</span><span> </span><span>+</span></span><span class="line" lang="java" id="LC367"><span>                    </span><span class="s">&quot;for path &#39;&quot;</span><span> </span><span>+</span><span> </span><span>path</span><span> </span><span>+</span><span> </span><span class="s">&quot;&#39;&quot;</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC368"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC369"></span><span class="line" lang="java" id="LC370"><span>        </span><span class="cm">// remove commas and dots in the bytes count</span></span><span class="line" lang="java" id="LC371"><span>        </span><span class="kd">final</span><span> </span><span>StringBuilder</span><span> </span><span>buf</span><span> </span><span>=</span><span> </span><span class="k">new</span><span> </span><span>StringBuilder</span><span>(</span><span>line</span><span>.</span><span>substring</span><span>(</span><span>bytesStart</span><span>,</span><span> </span><span>bytesEnd</span><span>)</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC372"><span>        </span><span class="k">for</span><span> </span><span>(</span><span class="kt">int</span><span> </span><span>k</span><span> </span><span>=</span><span> </span><span>0</span><span>;</span><span> </span><span>k</span><span> </span><span>&lt;</span><span> </span><span>buf</span><span>.</span><span>length</span><span>(</span><span>)</span><span>;</span><span> </span><span>k</span><span>+</span><span>+</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC373"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>buf</span><span>.</span><span>charAt</span><span>(</span><span>k</span><span>)</span><span> </span><span>==</span><span> </span><span class="s">&#39;,&#39;</span><span> </span><span>||</span><span> </span><span>buf</span><span>.</span><span>charAt</span><span>(</span><span>k</span><span>)</span><span> </span><span>==</span><span> </span><span class="s">&#39;.&#39;</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC374"><span>                </span><span>buf</span><span>.</span><span>deleteCharAt</span><span>(</span><span>k</span><span>-</span><span>-</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC375"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC376"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC377"><span>        </span><span class="k">return</span><span> </span><span>parseBytes</span><span>(</span><span>buf</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>,</span><span> </span><span>path</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC378"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC379"></span><span class="line" lang="java" id="LC380"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC381"><span class="cm">     * Find free space on the *nix platform using the &#39;df&#39; command.</span></span><span class="line" lang="java" id="LC382"><span class="cm">     *</span></span><span class="line" lang="java" id="LC383"><span class="cm">     * @param path  the path to get free space for</span></span><span class="line" lang="java" id="LC384"><span class="cm">     * @param kb  whether to normalize to kilobytes</span></span><span class="line" lang="java" id="LC385"><span class="cm">     * @param posix  whether to use the POSIX standard format flag</span></span><span class="line" lang="java" id="LC386"><span class="cm">     * @param timeout The timeout amount in milliseconds or no timeout if the value</span></span><span class="line" lang="java" id="LC387"><span class="cm">     *  is zero or less</span></span><span class="line" lang="java" id="LC388"><span class="cm">     * @return the amount of free drive space on the volume</span></span><span class="line" lang="java" id="LC389"><span class="cm">     * @throws IOException if an error occurs</span></span><span class="line" lang="java" id="LC390"><span class="cm">     */</span></span><span class="line" lang="java" id="LC391"><span>    </span><span class="kt">long</span><span> </span><span>freeSpaceUnix</span><span>(</span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>path</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span class="kt">boolean</span><span> </span><span>kb</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span class="kt">boolean</span><span> </span><span>posix</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>Duration</span><span> </span><span>timeout</span><span>)</span></span><span class="line" lang="java" id="LC392"><span>            </span><span class="kd">throws</span><span> </span><span>IOException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC393"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>path</span><span>.</span><span>isEmpty</span><span>(</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC394"><span>            </span><span class="k">throw</span><span> </span><span class="k">new</span><span> </span><span>IllegalArgumentException</span><span>(</span><span class="s">&quot;Path must not be empty&quot;</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC395"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC396"></span><span class="line" lang="java" id="LC397"><span>        </span><span class="cm">// build and run the &#39;dir&#39; command</span></span><span class="line" lang="java" id="LC398"><span>        </span><span>String</span><span> </span><span>flags</span><span> </span><span>=</span><span> </span><span class="s">&quot;-&quot;</span><span>;</span></span><span class="line" lang="java" id="LC399"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>kb</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC400"><span>            </span><span>flags</span><span> </span><span>+=</span><span> </span><span class="s">&quot;k&quot;</span><span>;</span></span><span class="line" lang="java" id="LC401"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC402"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>posix</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC403"><span>            </span><span>flags</span><span> </span><span>+=</span><span> </span><span class="s">&quot;P&quot;</span><span>;</span></span><span class="line" lang="java" id="LC404"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC405"><span>        </span><span class="kd">final</span><span> </span><span>String</span><span>[</span><span>]</span><span> </span><span>cmdAttribs</span><span> </span><span>=</span></span><span class="line" lang="java" id="LC406"><span>            </span><span>flags</span><span>.</span><span>length</span><span>(</span><span>)</span><span> </span><span>&gt;</span><span> </span><span>1</span><span> </span><span>?</span><span> </span><span class="k">new</span><span> </span><span>String</span><span>[</span><span>]</span><span> </span><span>{</span><span>DF</span><span>,</span><span> </span><span>flags</span><span>,</span><span> </span><span>path</span><span>}</span><span> </span><span>:</span><span> </span><span class="k">new</span><span> </span><span>String</span><span>[</span><span>]</span><span> </span><span>{</span><span>DF</span><span>,</span><span> </span><span>path</span><span>}</span><span>;</span></span><span class="line" lang="java" id="LC407"></span><span class="line" lang="java" id="LC408"><span>        </span><span class="cm">// perform the command, asking for up to 3 lines (header, interesting, overflow)</span></span><span class="line" lang="java" id="LC409"><span>        </span><span class="kd">final</span><span> </span><span>List</span><span>&lt;</span><span>String</span><span>&gt;</span><span> </span><span>lines</span><span> </span><span>=</span><span> </span><span>performCommand</span><span>(</span><span>cmdAttribs</span><span>,</span><span> </span><span>3</span><span>,</span><span> </span><span>timeout</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC410"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>lines</span><span>.</span><span>size</span><span>(</span><span>)</span><span> </span><span>&lt;</span><span> </span><span>2</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC411"><span>            </span><span class="cm">// unknown problem, throw exception</span></span><span class="line" lang="java" id="LC412"><span>            </span><span class="k">throw</span><span> </span><span class="k">new</span><span> </span><span>IOException</span><span>(</span></span><span class="line" lang="java" id="LC413"><span>                    </span><span class="s">&quot;Command line &#39;&quot;</span><span> </span><span>+</span><span> </span><span>DF</span><span> </span><span>+</span><span> </span><span class="s">&quot;&#39; did not return info as expected &quot;</span><span> </span><span>+</span></span><span class="line" lang="java" id="LC414"><span>                    </span><span class="s">&quot;for path &#39;&quot;</span><span> </span><span>+</span><span> </span><span>path</span><span> </span><span>+</span><span> </span><span class="s">&quot;&#39;- response was &quot;</span><span> </span><span>+</span><span> </span><span>lines</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC415"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC416"><span>        </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>line2</span><span> </span><span>=</span><span> </span><span>lines</span><span>.</span><span>get</span><span>(</span><span>1</span><span>)</span><span>;</span><span> </span><span class="cm">// the line we&#39;re interested in</span></span><span class="line" lang="java" id="LC417"></span><span class="line" lang="java" id="LC418"><span>        </span><span class="cm">// Now, we tokenize the string. The fourth element is what we want.</span></span><span class="line" lang="java" id="LC419"><span>        </span><span>StringTokenizer</span><span> </span><span>tok</span><span> </span><span>=</span><span> </span><span class="k">new</span><span> </span><span>StringTokenizer</span><span>(</span><span>line2</span><span>,</span><span> </span><span class="s">&quot; &quot;</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC420"><span>        </span><span class="k">if</span><span> </span><span>(</span><span>tok</span><span>.</span><span>countTokens</span><span>(</span><span>)</span><span> </span><span>&lt;</span><span> </span><span>4</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC421"><span>            </span><span class="cm">// could be long Filesystem, thus data on third line</span></span><span class="line" lang="java" id="LC422"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>(</span><span>tok</span><span>.</span><span>countTokens</span><span>(</span><span>)</span><span> </span><span>!=</span><span> </span><span>1</span><span>)</span><span> </span><span>||</span><span> </span><span>(</span><span>lines</span><span>.</span><span>size</span><span>(</span><span>)</span><span> </span><span>&lt;</span><span> </span><span>3</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC423"><span>                </span><span class="k">throw</span><span> </span><span class="k">new</span><span> </span><span>IOException</span><span>(</span></span><span class="line" lang="java" id="LC424"><span>                        </span><span class="s">&quot;Command line &#39;&quot;</span><span> </span><span>+</span><span> </span><span>DF</span><span> </span><span>+</span><span> </span><span class="s">&quot;&#39; did not return data as expected &quot;</span><span> </span><span>+</span></span><span class="line" lang="java" id="LC425"><span>                        </span><span class="s">&quot;for path &#39;&quot;</span><span> </span><span>+</span><span> </span><span>path</span><span> </span><span>+</span><span> </span><span class="s">&quot;&#39;- check path is valid&quot;</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC426"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC427"><span>            </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>line3</span><span> </span><span>=</span><span> </span><span>lines</span><span>.</span><span>get</span><span>(</span><span>2</span><span>)</span><span>;</span><span> </span><span class="cm">// the line may be interested in</span></span><span class="line" lang="java" id="LC428"><span>            </span><span>tok</span><span> </span><span>=</span><span> </span><span class="k">new</span><span> </span><span>StringTokenizer</span><span>(</span><span>line3</span><span>,</span><span> </span><span class="s">&quot; &quot;</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC429"><span>        </span><span>}</span><span> </span><span>else</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC430"><span>            </span><span>tok</span><span>.</span><span>nextToken</span><span>(</span><span>)</span><span>;</span><span> </span><span class="cm">// Ignore Filesystem</span></span><span class="line" lang="java" id="LC431"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC432"><span>        </span><span>tok</span><span>.</span><span>nextToken</span><span>(</span><span>)</span><span>;</span><span> </span><span class="cm">// Ignore 1K-blocks</span></span><span class="line" lang="java" id="LC433"><span>        </span><span>tok</span><span>.</span><span>nextToken</span><span>(</span><span>)</span><span>;</span><span> </span><span class="cm">// Ignore Used</span></span><span class="line" lang="java" id="LC434"><span>        </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>freeSpace</span><span> </span><span>=</span><span> </span><span>tok</span><span>.</span><span>nextToken</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC435"><span>        </span><span class="k">return</span><span> </span><span>parseBytes</span><span>(</span><span>freeSpace</span><span>,</span><span> </span><span>path</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC436"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC437"></span><span class="line" lang="java" id="LC438"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC439"><span class="cm">     * Parses the bytes from a string.</span></span><span class="line" lang="java" id="LC440"><span class="cm">     *</span></span><span class="line" lang="java" id="LC441"><span class="cm">     * @param freeSpace  the free space string</span></span><span class="line" lang="java" id="LC442"><span class="cm">     * @param path  the path</span></span><span class="line" lang="java" id="LC443"><span class="cm">     * @return the number of bytes</span></span><span class="line" lang="java" id="LC444"><span class="cm">     * @throws IOException if an error occurs</span></span><span class="line" lang="java" id="LC445"><span class="cm">     */</span></span><span class="line" lang="java" id="LC446"><span>    </span><span class="kt">long</span><span> </span><span>parseBytes</span><span>(</span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>freeSpace</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>String</span><span> </span><span>path</span><span>)</span><span> </span><span class="kd">throws</span><span> </span><span>IOException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC447"><span>        </span><span class="k">try</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC448"><span>            </span><span class="kd">final</span><span> </span><span class="kt">long</span><span> </span><span>bytes</span><span> </span><span>=</span><span> </span><span>Long</span><span>.</span><span>parseLong</span><span>(</span><span>freeSpace</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC449"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>bytes</span><span> </span><span>&lt;</span><span> </span><span>0</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC450"><span>                </span><span class="k">throw</span><span> </span><span class="k">new</span><span> </span><span>IOException</span><span>(</span></span><span class="line" lang="java" id="LC451"><span>                        </span><span class="s">&quot;Command line &#39;&quot;</span><span> </span><span>+</span><span> </span><span>DF</span><span> </span><span>+</span><span> </span><span class="s">&quot;&#39; did not find free space in response &quot;</span><span> </span><span>+</span></span><span class="line" lang="java" id="LC452"><span>                        </span><span class="s">&quot;for path &#39;&quot;</span><span> </span><span>+</span><span> </span><span>path</span><span> </span><span>+</span><span> </span><span class="s">&quot;&#39;- check path is valid&quot;</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC453"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC454"><span>            </span><span class="k">return</span><span> </span><span>bytes</span><span>;</span></span><span class="line" lang="java" id="LC455"></span><span class="line" lang="java" id="LC456"><span>        </span><span>}</span><span> </span><span class="k">catch</span><span> </span><span>(</span><span class="kd">final</span><span> </span><span>NumberFormatException</span><span> </span><span>ex</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC457"><span>            </span><span class="k">throw</span><span> </span><span class="k">new</span><span> </span><span>IOException</span><span>(</span></span><span class="line" lang="java" id="LC458"><span>                    </span><span class="s">&quot;Command line &#39;&quot;</span><span> </span><span>+</span><span> </span><span>DF</span><span> </span><span>+</span><span> </span><span class="s">&quot;&#39; did not return numeric data as expected &quot;</span><span> </span><span>+</span></span><span class="line" lang="java" id="LC459"><span>                    </span><span class="s">&quot;for path &#39;&quot;</span><span> </span><span>+</span><span> </span><span>path</span><span> </span><span>+</span><span> </span><span class="s">&quot;&#39;- check path is valid&quot;</span><span>,</span><span> </span><span>ex</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC460"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC461"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC462"></span><span class="line" lang="java" id="LC463"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC464"><span class="cm">     * Performs an OS command.</span></span><span class="line" lang="java" id="LC465"><span class="cm">     *</span></span><span class="line" lang="java" id="LC466"><span class="cm">     * @param cmdAttribs  the command line parameters</span></span><span class="line" lang="java" id="LC467"><span class="cm">     * @param max The maximum limit for the lines returned</span></span><span class="line" lang="java" id="LC468"><span class="cm">     * @param timeout The timeout amount in milliseconds or no timeout if the value</span></span><span class="line" lang="java" id="LC469"><span class="cm">     *  is zero or less</span></span><span class="line" lang="java" id="LC470"><span class="cm">     * @return the lines returned by the command, converted to lower-case</span></span><span class="line" lang="java" id="LC471"><span class="cm">     * @throws IOException if an error occurs</span></span><span class="line" lang="java" id="LC472"><span class="cm">     */</span></span><span class="line" lang="java" id="LC473"><span>    </span><span>List</span><span>&lt;</span><span>String</span><span>&gt;</span><span> </span><span>performCommand</span><span>(</span><span class="kd">final</span><span> </span><span>String</span><span>[</span><span>]</span><span> </span><span>cmdAttribs</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span class="kt">int</span><span> </span><span>max</span><span>,</span><span> </span><span class="kd">final</span><span> </span><span>Duration</span><span> </span><span>timeout</span><span>)</span><span> </span><span class="kd">throws</span><span> </span><span>IOException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC474"><span>        </span><span class="cm">// this method does what it can to avoid the &#39;Too many open files&#39; error</span></span><span class="line" lang="java" id="LC475"><span>        </span><span class="cm">// based on trial and error and these links:</span></span><span class="line" lang="java" id="LC476"><span>        </span><span class="cm">// http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4784692</span></span><span class="line" lang="java" id="LC477"><span>        </span><span class="cm">// http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4801027</span></span><span class="line" lang="java" id="LC478"><span>        </span><span class="cm">// http://forum.java.sun.com/thread.jspa?threadID=533029&amp;messageID=2572018</span></span><span class="line" lang="java" id="LC479"><span>        </span><span class="cm">// however, its still not perfect as the JDK support is so poor</span></span><span class="line" lang="java" id="LC480"><span>        </span><span class="cm">// (see commons-exec or Ant for a better multi-threaded multi-os solution)</span></span><span class="line" lang="java" id="LC481"></span><span class="line" lang="java" id="LC482"><span>        </span><span class="kd">final</span><span> </span><span>List</span><span>&lt;</span><span>String</span><span>&gt;</span><span> </span><span>lines</span><span> </span><span>=</span><span> </span><span class="k">new</span><span> </span><span>ArrayList</span><span>&lt;</span><span>&gt;</span><span>(</span><span>20</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC483"><span>        </span><span>Process</span><span> </span><span>proc</span><span> </span><span>=</span><span> </span><span class="kc">null</span><span>;</span></span><span class="line" lang="java" id="LC484"><span>        </span><span>InputStream</span><span> </span><span>in</span><span> </span><span>=</span><span> </span><span class="kc">null</span><span>;</span></span><span class="line" lang="java" id="LC485"><span>        </span><span>OutputStream</span><span> </span><span>out</span><span> </span><span>=</span><span> </span><span class="kc">null</span><span>;</span></span><span class="line" lang="java" id="LC486"><span>        </span><span>InputStream</span><span> </span><span>err</span><span> </span><span>=</span><span> </span><span class="kc">null</span><span>;</span></span><span class="line" lang="java" id="LC487"><span>        </span><span>BufferedReader</span><span> </span><span>inr</span><span> </span><span>=</span><span> </span><span class="kc">null</span><span>;</span></span><span class="line" lang="java" id="LC488"><span>        </span><span class="k">try</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC489"></span><span class="line" lang="java" id="LC490"><span>            </span><span class="kd">final</span><span> </span><span>Thread</span><span> </span><span>monitor</span><span> </span><span>=</span><span> </span><span>ThreadMonitor</span><span>.</span><span>start</span><span>(</span><span>timeout</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC491"></span><span class="line" lang="java" id="LC492"><span>            </span><span>proc</span><span> </span><span>=</span><span> </span><span>openProcess</span><span>(</span><span>cmdAttribs</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC493"><span>            </span><span>in</span><span> </span><span>=</span><span> </span><span>proc</span><span>.</span><span>getInputStream</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC494"><span>            </span><span>out</span><span> </span><span>=</span><span> </span><span>proc</span><span>.</span><span>getOutputStream</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC495"><span>            </span><span>err</span><span> </span><span>=</span><span> </span><span>proc</span><span>.</span><span>getErrorStream</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC496"><span>            </span><span class="cm">// default charset is most likely appropriate here</span></span><span class="line" lang="java" id="LC497"><span>            </span><span>inr</span><span> </span><span>=</span><span> </span><span class="k">new</span><span> </span><span>BufferedReader</span><span>(</span><span class="k">new</span><span> </span><span>InputStreamReader</span><span>(</span><span>in</span><span>,</span><span> </span><span>Charset</span><span>.</span><span>defaultCharset</span><span>(</span><span>)</span><span>)</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC498"><span>            </span><span>String</span><span> </span><span>line</span><span> </span><span>=</span><span> </span><span>inr</span><span>.</span><span>readLine</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC499"><span>            </span><span class="k">while</span><span> </span><span>(</span><span>line</span><span> </span><span>!=</span><span> </span><span class="kc">null</span><span> </span><span>&amp;&amp;</span><span> </span><span>lines</span><span>.</span><span>size</span><span>(</span><span>)</span><span> </span><span>&lt;</span><span> </span><span>max</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC500"><span>                </span><span>line</span><span> </span><span>=</span><span> </span><span>line</span><span>.</span><span>toLowerCase</span><span>(</span><span>Locale</span><span>.</span><span>ENGLISH</span><span>)</span><span>.</span><span>trim</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC501"><span>                </span><span>lines</span><span>.</span><span>add</span><span>(</span><span>line</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC502"><span>                </span><span>line</span><span> </span><span>=</span><span> </span><span>inr</span><span>.</span><span>readLine</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC503"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC504"></span><span class="line" lang="java" id="LC505"><span>            </span><span>proc</span><span>.</span><span>waitFor</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC506"></span><span class="line" lang="java" id="LC507"><span>            </span><span>ThreadMonitor</span><span>.</span><span>stop</span><span>(</span><span>monitor</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC508"></span><span class="line" lang="java" id="LC509"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>proc</span><span>.</span><span>exitValue</span><span>(</span><span>)</span><span> </span><span>!=</span><span> </span><span>0</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC510"><span>                </span><span class="cm">// os command problem, throw exception</span></span><span class="line" lang="java" id="LC511"><span>                </span><span class="k">throw</span><span> </span><span class="k">new</span><span> </span><span>IOException</span><span>(</span></span><span class="line" lang="java" id="LC512"><span>                        </span><span class="s">&quot;Command line returned OS error code &#39;&quot;</span><span> </span><span>+</span><span> </span><span>proc</span><span>.</span><span>exitValue</span><span>(</span><span>)</span><span> </span><span>+</span></span><span class="line" lang="java" id="LC513"><span>                        </span><span class="s">&quot;&#39; for command &quot;</span><span> </span><span>+</span><span> </span><span>Arrays</span><span>.</span><span>asList</span><span>(</span><span>cmdAttribs</span><span>)</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC514"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC515"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>lines</span><span>.</span><span>isEmpty</span><span>(</span><span>)</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC516"><span>                </span><span class="cm">// unknown problem, throw exception</span></span><span class="line" lang="java" id="LC517"><span>                </span><span class="k">throw</span><span> </span><span class="k">new</span><span> </span><span>IOException</span><span>(</span></span><span class="line" lang="java" id="LC518"><span>                        </span><span class="s">&quot;Command line did not return any info &quot;</span><span> </span><span>+</span></span><span class="line" lang="java" id="LC519"><span>                        </span><span class="s">&quot;for command &quot;</span><span> </span><span>+</span><span> </span><span>Arrays</span><span>.</span><span>asList</span><span>(</span><span>cmdAttribs</span><span>)</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC520"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC521"></span><span class="line" lang="java" id="LC522"><span>            </span><span>inr</span><span>.</span><span>close</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC523"><span>            </span><span>inr</span><span> </span><span>=</span><span> </span><span class="kc">null</span><span>;</span></span><span class="line" lang="java" id="LC524"></span><span class="line" lang="java" id="LC525"><span>            </span><span>in</span><span>.</span><span>close</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC526"><span>            </span><span>in</span><span> </span><span>=</span><span> </span><span class="kc">null</span><span>;</span></span><span class="line" lang="java" id="LC527"></span><span class="line" lang="java" id="LC528"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>out</span><span> </span><span>!=</span><span> </span><span class="kc">null</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC529"><span>                </span><span>out</span><span>.</span><span>close</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC530"><span>                </span><span>out</span><span> </span><span>=</span><span> </span><span class="kc">null</span><span>;</span></span><span class="line" lang="java" id="LC531"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC532"></span><span class="line" lang="java" id="LC533"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>err</span><span> </span><span>!=</span><span> </span><span class="kc">null</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC534"><span>                </span><span>err</span><span>.</span><span>close</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC535"><span>                </span><span>err</span><span> </span><span>=</span><span> </span><span class="kc">null</span><span>;</span></span><span class="line" lang="java" id="LC536"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC537"></span><span class="line" lang="java" id="LC538"><span>            </span><span class="k">return</span><span> </span><span>lines</span><span>;</span></span><span class="line" lang="java" id="LC539"></span><span class="line" lang="java" id="LC540"><span>        </span><span>}</span><span> </span><span class="k">catch</span><span> </span><span>(</span><span class="kd">final</span><span> </span><span>InterruptedException</span><span> </span><span>ex</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC541"><span>            </span><span class="k">throw</span><span> </span><span class="k">new</span><span> </span><span>IOException</span><span>(</span></span><span class="line" lang="java" id="LC542"><span>                    </span><span class="s">&quot;Command line threw an InterruptedException &quot;</span><span> </span><span>+</span></span><span class="line" lang="java" id="LC543"><span>                    </span><span class="s">&quot;for command &quot;</span><span> </span><span>+</span><span> </span><span>Arrays</span><span>.</span><span>asList</span><span>(</span><span>cmdAttribs</span><span>)</span><span> </span><span>+</span><span> </span><span class="s">&quot; timeout=&quot;</span><span> </span><span>+</span><span> </span><span>timeout</span><span>,</span><span> </span><span>ex</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC544"><span>        </span><span>}</span><span> </span><span class="k">finally</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC545"><span>            </span><span>IOUtils</span><span>.</span><span>closeQuietly</span><span>(</span><span>in</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC546"><span>            </span><span>IOUtils</span><span>.</span><span>closeQuietly</span><span>(</span><span>out</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC547"><span>            </span><span>IOUtils</span><span>.</span><span>closeQuietly</span><span>(</span><span>err</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC548"><span>            </span><span>IOUtils</span><span>.</span><span>closeQuietly</span><span>(</span><span>inr</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC549"><span>            </span><span class="k">if</span><span> </span><span>(</span><span>proc</span><span> </span><span>!=</span><span> </span><span class="kc">null</span><span>)</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC550"><span>                </span><span>proc</span><span>.</span><span>destroy</span><span>(</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC551"><span>            </span><span>}</span></span><span class="line" lang="java" id="LC552"><span>        </span><span>}</span></span><span class="line" lang="java" id="LC553"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC554"></span><span class="line" lang="java" id="LC555"><span>    </span><span class="cm">/**</span></span><span class="line" lang="java" id="LC556"><span class="cm">     * Opens the process to the operating system.</span></span><span class="line" lang="java" id="LC557"><span class="cm">     *</span></span><span class="line" lang="java" id="LC558"><span class="cm">     * @param cmdAttribs  the command line parameters</span></span><span class="line" lang="java" id="LC559"><span class="cm">     * @return the process</span></span><span class="line" lang="java" id="LC560"><span class="cm">     * @throws IOException if an error occurs</span></span><span class="line" lang="java" id="LC561"><span class="cm">     */</span></span><span class="line" lang="java" id="LC562"><span>    </span><span>Process</span><span> </span><span>openProcess</span><span>(</span><span class="kd">final</span><span> </span><span>String</span><span>[</span><span>]</span><span> </span><span>cmdAttribs</span><span>)</span><span> </span><span class="kd">throws</span><span> </span><span>IOException</span><span> </span><span>{</span></span><span class="line" lang="java" id="LC563"><span>        </span><span class="k">return</span><span> </span><span>Runtime</span><span>.</span><span>getRuntime</span><span>(</span><span>)</span><span>.</span><span>exec</span><span>(</span><span>cmdAttribs</span><span>)</span><span>;</span></span><span class="line" lang="java" id="LC564"><span>    </span><span>}</span></span><span class="line" lang="java" id="LC565"></span><span class="line" lang="java" id="LC566"><span>}</span></span>
</code>
</pre>
    </div>
</div>